
Queue_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000156c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000170  0800173c  0800173c  0001173c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080018ac  080018ac  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  080018ac  080018ac  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080018ac  080018ac  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080018ac  080018ac  000118ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080018b0  080018b0  000118b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  080018b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001c0  2000006c  08001920  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000022c  08001920  0002022c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a04  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000394  00000000  00000000  00020a9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00020e30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00020f60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002aaf  00000000  00000000  00021058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000142f  00000000  00000000  00023b07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000934d  00000000  00000000  00024f36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e283  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c94  00000000  00000000  0002e2d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001724 	.word	0x08001724

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000070 	.word	0x20000070
 800020c:	08001724 	.word	0x08001724

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <enqueue>:
#define MAX_SIZE 100
int queue[MAX_SIZE];
int front = -1;
int back = -1;
// Function to insert an element into the queue
void enqueue(int item) {
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
    if (back == MAX_SIZE - 1) {
 80002b8:	4b0e      	ldr	r3, [pc, #56]	; (80002f4 <enqueue+0x44>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	2b63      	cmp	r3, #99	; 0x63
 80002be:	d103      	bne.n	80002c8 <enqueue+0x18>
        printf("Error: Queue is full\n");
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <enqueue+0x48>)
 80002c2:	f000 fa71 	bl	80007a8 <puts>
        return;
 80002c6:	e012      	b.n	80002ee <enqueue+0x3e>
    }
    if (front == -1) {
 80002c8:	4b0c      	ldr	r3, [pc, #48]	; (80002fc <enqueue+0x4c>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80002d0:	d102      	bne.n	80002d8 <enqueue+0x28>
        front = 0;
 80002d2:	4b0a      	ldr	r3, [pc, #40]	; (80002fc <enqueue+0x4c>)
 80002d4:	2200      	movs	r2, #0
 80002d6:	601a      	str	r2, [r3, #0]
    }
    back++;
 80002d8:	4b06      	ldr	r3, [pc, #24]	; (80002f4 <enqueue+0x44>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	3301      	adds	r3, #1
 80002de:	4a05      	ldr	r2, [pc, #20]	; (80002f4 <enqueue+0x44>)
 80002e0:	6013      	str	r3, [r2, #0]
    queue[back] = item;
 80002e2:	4b04      	ldr	r3, [pc, #16]	; (80002f4 <enqueue+0x44>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	4906      	ldr	r1, [pc, #24]	; (8000300 <enqueue+0x50>)
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80002ee:	3708      	adds	r7, #8
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bd80      	pop	{r7, pc}
 80002f4:	20000004 	.word	0x20000004
 80002f8:	0800173c 	.word	0x0800173c
 80002fc:	20000000 	.word	0x20000000
 8000300:	20000088 	.word	0x20000088

08000304 <display>:

// Function to display the elements in the queue
void display() {
 8000304:	b580      	push	{r7, lr}
 8000306:	b082      	sub	sp, #8
 8000308:	af00      	add	r7, sp, #0
    if (front == -1 || front > back) {
 800030a:	4b16      	ldr	r3, [pc, #88]	; (8000364 <display+0x60>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000312:	d005      	beq.n	8000320 <display+0x1c>
 8000314:	4b13      	ldr	r3, [pc, #76]	; (8000364 <display+0x60>)
 8000316:	681a      	ldr	r2, [r3, #0]
 8000318:	4b13      	ldr	r3, [pc, #76]	; (8000368 <display+0x64>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	429a      	cmp	r2, r3
 800031e:	dd03      	ble.n	8000328 <display+0x24>
        printf("Queue is empty\n");
 8000320:	4812      	ldr	r0, [pc, #72]	; (800036c <display+0x68>)
 8000322:	f000 fa41 	bl	80007a8 <puts>
        return;
 8000326:	e019      	b.n	800035c <display+0x58>
    }
    printf("Queue elements are: ");
 8000328:	4811      	ldr	r0, [pc, #68]	; (8000370 <display+0x6c>)
 800032a:	f000 f9a3 	bl	8000674 <iprintf>
    for (int i = front; i <= back; i++) {
 800032e:	4b0d      	ldr	r3, [pc, #52]	; (8000364 <display+0x60>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	607b      	str	r3, [r7, #4]
 8000334:	e00a      	b.n	800034c <display+0x48>
        printf("%d ", queue[i]);
 8000336:	4a0f      	ldr	r2, [pc, #60]	; (8000374 <display+0x70>)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800033e:	4619      	mov	r1, r3
 8000340:	480d      	ldr	r0, [pc, #52]	; (8000378 <display+0x74>)
 8000342:	f000 f997 	bl	8000674 <iprintf>
    for (int i = front; i <= back; i++) {
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	3301      	adds	r3, #1
 800034a:	607b      	str	r3, [r7, #4]
 800034c:	4b06      	ldr	r3, [pc, #24]	; (8000368 <display+0x64>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	687a      	ldr	r2, [r7, #4]
 8000352:	429a      	cmp	r2, r3
 8000354:	ddef      	ble.n	8000336 <display+0x32>
    }
    printf("\n");
 8000356:	200a      	movs	r0, #10
 8000358:	f000 f9a4 	bl	80006a4 <putchar>
}
 800035c:	3708      	adds	r7, #8
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}
 8000362:	bf00      	nop
 8000364:	20000000 	.word	0x20000000
 8000368:	20000004 	.word	0x20000004
 800036c:	08001754 	.word	0x08001754
 8000370:	08001764 	.word	0x08001764
 8000374:	20000088 	.word	0x20000088
 8000378:	0800177c 	.word	0x0800177c

0800037c <is_empty>:
// Function to check whether the queue is empty
int is_empty() {
 800037c:	b480      	push	{r7}
 800037e:	af00      	add	r7, sp, #0
    if (front == -1 || front > back) {
 8000380:	4b08      	ldr	r3, [pc, #32]	; (80003a4 <is_empty+0x28>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000388:	d005      	beq.n	8000396 <is_empty+0x1a>
 800038a:	4b06      	ldr	r3, [pc, #24]	; (80003a4 <is_empty+0x28>)
 800038c:	681a      	ldr	r2, [r3, #0]
 800038e:	4b06      	ldr	r3, [pc, #24]	; (80003a8 <is_empty+0x2c>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	429a      	cmp	r2, r3
 8000394:	dd01      	ble.n	800039a <is_empty+0x1e>
        return 1;
 8000396:	2301      	movs	r3, #1
 8000398:	e000      	b.n	800039c <is_empty+0x20>
    }
    return 0;
 800039a:	2300      	movs	r3, #0
}
 800039c:	4618      	mov	r0, r3
 800039e:	46bd      	mov	sp, r7
 80003a0:	bc80      	pop	{r7}
 80003a2:	4770      	bx	lr
 80003a4:	20000000 	.word	0x20000000
 80003a8:	20000004 	.word	0x20000004

080003ac <main>:
int main() {
 80003ac:	b580      	push	{r7, lr}
 80003ae:	af00      	add	r7, sp, #0
	printf("Initialize a queue!");
 80003b0:	4819      	ldr	r0, [pc, #100]	; (8000418 <main+0x6c>)
 80003b2:	f000 f95f 	bl	8000674 <iprintf>
    // Insert some elements into the queue.
    printf("\nCheck the queue is empty or not? %s\n", is_empty() ? "Yes" : "No");
 80003b6:	f7ff ffe1 	bl	800037c <is_empty>
 80003ba:	4603      	mov	r3, r0
 80003bc:	2b00      	cmp	r3, #0
 80003be:	d001      	beq.n	80003c4 <main+0x18>
 80003c0:	4b16      	ldr	r3, [pc, #88]	; (800041c <main+0x70>)
 80003c2:	e000      	b.n	80003c6 <main+0x1a>
 80003c4:	4b16      	ldr	r3, [pc, #88]	; (8000420 <main+0x74>)
 80003c6:	4619      	mov	r1, r3
 80003c8:	4816      	ldr	r0, [pc, #88]	; (8000424 <main+0x78>)
 80003ca:	f000 f953 	bl	8000674 <iprintf>
	printf("\nInsert some elements into the queue:\n");
 80003ce:	4816      	ldr	r0, [pc, #88]	; (8000428 <main+0x7c>)
 80003d0:	f000 f9ea 	bl	80007a8 <puts>
    enqueue(1);
 80003d4:	2001      	movs	r0, #1
 80003d6:	f7ff ff6b 	bl	80002b0 <enqueue>
    enqueue(2);
 80003da:	2002      	movs	r0, #2
 80003dc:	f7ff ff68 	bl	80002b0 <enqueue>
    enqueue(3);
 80003e0:	2003      	movs	r0, #3
 80003e2:	f7ff ff65 	bl	80002b0 <enqueue>
    display();
 80003e6:	f7ff ff8d 	bl	8000304 <display>
	printf("\nInsert another element into the queue:\n");
 80003ea:	4810      	ldr	r0, [pc, #64]	; (800042c <main+0x80>)
 80003ec:	f000 f9dc 	bl	80007a8 <puts>
    enqueue(4);
 80003f0:	2004      	movs	r0, #4
 80003f2:	f7ff ff5d 	bl	80002b0 <enqueue>
    display();
 80003f6:	f7ff ff85 	bl	8000304 <display>
    printf("\nCheck the queue is empty or not? %s\n", is_empty() ? "Yes" : "No");
 80003fa:	f7ff ffbf 	bl	800037c <is_empty>
 80003fe:	4603      	mov	r3, r0
 8000400:	2b00      	cmp	r3, #0
 8000402:	d001      	beq.n	8000408 <main+0x5c>
 8000404:	4b05      	ldr	r3, [pc, #20]	; (800041c <main+0x70>)
 8000406:	e000      	b.n	800040a <main+0x5e>
 8000408:	4b05      	ldr	r3, [pc, #20]	; (8000420 <main+0x74>)
 800040a:	4619      	mov	r1, r3
 800040c:	4805      	ldr	r0, [pc, #20]	; (8000424 <main+0x78>)
 800040e:	f000 f931 	bl	8000674 <iprintf>
    return 0;
 8000412:	2300      	movs	r3, #0
}
 8000414:	4618      	mov	r0, r3
 8000416:	bd80      	pop	{r7, pc}
 8000418:	08001780 	.word	0x08001780
 800041c:	08001794 	.word	0x08001794
 8000420:	08001798 	.word	0x08001798
 8000424:	0800179c 	.word	0x0800179c
 8000428:	080017c4 	.word	0x080017c4
 800042c:	080017ec 	.word	0x080017ec

08000430 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
 8000436:	4603      	mov	r3, r0
 8000438:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800043a:	4b0e      	ldr	r3, [pc, #56]	; (8000474 <ITM_SendChar+0x44>)
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	4a0d      	ldr	r2, [pc, #52]	; (8000474 <ITM_SendChar+0x44>)
 8000440:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000444:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000446:	4b0c      	ldr	r3, [pc, #48]	; (8000478 <ITM_SendChar+0x48>)
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	4a0b      	ldr	r2, [pc, #44]	; (8000478 <ITM_SendChar+0x48>)
 800044c:	f043 0301 	orr.w	r3, r3, #1
 8000450:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000452:	bf00      	nop
 8000454:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	f003 0301 	and.w	r3, r3, #1
 800045e:	2b00      	cmp	r3, #0
 8000460:	d0f8      	beq.n	8000454 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000462:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000466:	79fb      	ldrb	r3, [r7, #7]
 8000468:	6013      	str	r3, [r2, #0]
}
 800046a:	bf00      	nop
 800046c:	370c      	adds	r7, #12
 800046e:	46bd      	mov	sp, r7
 8000470:	bc80      	pop	{r7}
 8000472:	4770      	bx	lr
 8000474:	e000edfc 	.word	0xe000edfc
 8000478:	e0000e00 	.word	0xe0000e00

0800047c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800047c:	b580      	push	{r7, lr}
 800047e:	b086      	sub	sp, #24
 8000480:	af00      	add	r7, sp, #0
 8000482:	60f8      	str	r0, [r7, #12]
 8000484:	60b9      	str	r1, [r7, #8]
 8000486:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000488:	2300      	movs	r3, #0
 800048a:	617b      	str	r3, [r7, #20]
 800048c:	e00a      	b.n	80004a4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800048e:	f3af 8000 	nop.w
 8000492:	4601      	mov	r1, r0
 8000494:	68bb      	ldr	r3, [r7, #8]
 8000496:	1c5a      	adds	r2, r3, #1
 8000498:	60ba      	str	r2, [r7, #8]
 800049a:	b2ca      	uxtb	r2, r1
 800049c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049e:	697b      	ldr	r3, [r7, #20]
 80004a0:	3301      	adds	r3, #1
 80004a2:	617b      	str	r3, [r7, #20]
 80004a4:	697a      	ldr	r2, [r7, #20]
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	429a      	cmp	r2, r3
 80004aa:	dbf0      	blt.n	800048e <_read+0x12>
  }

  return len;
 80004ac:	687b      	ldr	r3, [r7, #4]
}
 80004ae:	4618      	mov	r0, r3
 80004b0:	3718      	adds	r7, #24
 80004b2:	46bd      	mov	sp, r7
 80004b4:	bd80      	pop	{r7, pc}

080004b6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004b6:	b580      	push	{r7, lr}
 80004b8:	b086      	sub	sp, #24
 80004ba:	af00      	add	r7, sp, #0
 80004bc:	60f8      	str	r0, [r7, #12]
 80004be:	60b9      	str	r1, [r7, #8]
 80004c0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004c2:	2300      	movs	r3, #0
 80004c4:	617b      	str	r3, [r7, #20]
 80004c6:	e009      	b.n	80004dc <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 80004c8:	68bb      	ldr	r3, [r7, #8]
 80004ca:	1c5a      	adds	r2, r3, #1
 80004cc:	60ba      	str	r2, [r7, #8]
 80004ce:	781b      	ldrb	r3, [r3, #0]
 80004d0:	4618      	mov	r0, r3
 80004d2:	f7ff ffad 	bl	8000430 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004d6:	697b      	ldr	r3, [r7, #20]
 80004d8:	3301      	adds	r3, #1
 80004da:	617b      	str	r3, [r7, #20]
 80004dc:	697a      	ldr	r2, [r7, #20]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	429a      	cmp	r2, r3
 80004e2:	dbf1      	blt.n	80004c8 <_write+0x12>
  }
  return len;
 80004e4:	687b      	ldr	r3, [r7, #4]
}
 80004e6:	4618      	mov	r0, r3
 80004e8:	3718      	adds	r7, #24
 80004ea:	46bd      	mov	sp, r7
 80004ec:	bd80      	pop	{r7, pc}

080004ee <_close>:

int _close(int file)
{
 80004ee:	b480      	push	{r7}
 80004f0:	b083      	sub	sp, #12
 80004f2:	af00      	add	r7, sp, #0
 80004f4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80004f6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004fa:	4618      	mov	r0, r3
 80004fc:	370c      	adds	r7, #12
 80004fe:	46bd      	mov	sp, r7
 8000500:	bc80      	pop	{r7}
 8000502:	4770      	bx	lr

08000504 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000504:	b480      	push	{r7}
 8000506:	b083      	sub	sp, #12
 8000508:	af00      	add	r7, sp, #0
 800050a:	6078      	str	r0, [r7, #4]
 800050c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800050e:	683b      	ldr	r3, [r7, #0]
 8000510:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000514:	605a      	str	r2, [r3, #4]
  return 0;
 8000516:	2300      	movs	r3, #0
}
 8000518:	4618      	mov	r0, r3
 800051a:	370c      	adds	r7, #12
 800051c:	46bd      	mov	sp, r7
 800051e:	bc80      	pop	{r7}
 8000520:	4770      	bx	lr

08000522 <_isatty>:

int _isatty(int file)
{
 8000522:	b480      	push	{r7}
 8000524:	b083      	sub	sp, #12
 8000526:	af00      	add	r7, sp, #0
 8000528:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800052a:	2301      	movs	r3, #1
}
 800052c:	4618      	mov	r0, r3
 800052e:	370c      	adds	r7, #12
 8000530:	46bd      	mov	sp, r7
 8000532:	bc80      	pop	{r7}
 8000534:	4770      	bx	lr

08000536 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000536:	b480      	push	{r7}
 8000538:	b085      	sub	sp, #20
 800053a:	af00      	add	r7, sp, #0
 800053c:	60f8      	str	r0, [r7, #12]
 800053e:	60b9      	str	r1, [r7, #8]
 8000540:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000542:	2300      	movs	r3, #0
}
 8000544:	4618      	mov	r0, r3
 8000546:	3714      	adds	r7, #20
 8000548:	46bd      	mov	sp, r7
 800054a:	bc80      	pop	{r7}
 800054c:	4770      	bx	lr
	...

08000550 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000550:	b580      	push	{r7, lr}
 8000552:	b086      	sub	sp, #24
 8000554:	af00      	add	r7, sp, #0
 8000556:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000558:	4a14      	ldr	r2, [pc, #80]	; (80005ac <_sbrk+0x5c>)
 800055a:	4b15      	ldr	r3, [pc, #84]	; (80005b0 <_sbrk+0x60>)
 800055c:	1ad3      	subs	r3, r2, r3
 800055e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000560:	697b      	ldr	r3, [r7, #20]
 8000562:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000564:	4b13      	ldr	r3, [pc, #76]	; (80005b4 <_sbrk+0x64>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	2b00      	cmp	r3, #0
 800056a:	d102      	bne.n	8000572 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800056c:	4b11      	ldr	r3, [pc, #68]	; (80005b4 <_sbrk+0x64>)
 800056e:	4a12      	ldr	r2, [pc, #72]	; (80005b8 <_sbrk+0x68>)
 8000570:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000572:	4b10      	ldr	r3, [pc, #64]	; (80005b4 <_sbrk+0x64>)
 8000574:	681a      	ldr	r2, [r3, #0]
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	4413      	add	r3, r2
 800057a:	693a      	ldr	r2, [r7, #16]
 800057c:	429a      	cmp	r2, r3
 800057e:	d207      	bcs.n	8000590 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000580:	f000 f846 	bl	8000610 <__errno>
 8000584:	4603      	mov	r3, r0
 8000586:	220c      	movs	r2, #12
 8000588:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800058a:	f04f 33ff 	mov.w	r3, #4294967295
 800058e:	e009      	b.n	80005a4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000590:	4b08      	ldr	r3, [pc, #32]	; (80005b4 <_sbrk+0x64>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000596:	4b07      	ldr	r3, [pc, #28]	; (80005b4 <_sbrk+0x64>)
 8000598:	681a      	ldr	r2, [r3, #0]
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	4413      	add	r3, r2
 800059e:	4a05      	ldr	r2, [pc, #20]	; (80005b4 <_sbrk+0x64>)
 80005a0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80005a2:	68fb      	ldr	r3, [r7, #12]
}
 80005a4:	4618      	mov	r0, r3
 80005a6:	3718      	adds	r7, #24
 80005a8:	46bd      	mov	sp, r7
 80005aa:	bd80      	pop	{r7, pc}
 80005ac:	20020000 	.word	0x20020000
 80005b0:	00000400 	.word	0x00000400
 80005b4:	20000218 	.word	0x20000218
 80005b8:	20000230 	.word	0x20000230

080005bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005bc:	480d      	ldr	r0, [pc, #52]	; (80005f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005c4:	480c      	ldr	r0, [pc, #48]	; (80005f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80005c6:	490d      	ldr	r1, [pc, #52]	; (80005fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80005c8:	4a0d      	ldr	r2, [pc, #52]	; (8000600 <LoopForever+0xe>)
  movs r3, #0
 80005ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005cc:	e002      	b.n	80005d4 <LoopCopyDataInit>

080005ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005d2:	3304      	adds	r3, #4

080005d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005d8:	d3f9      	bcc.n	80005ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005da:	4a0a      	ldr	r2, [pc, #40]	; (8000604 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005dc:	4c0a      	ldr	r4, [pc, #40]	; (8000608 <LoopForever+0x16>)
  movs r3, #0
 80005de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005e0:	e001      	b.n	80005e6 <LoopFillZerobss>

080005e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005e4:	3204      	adds	r2, #4

080005e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005e8:	d3fb      	bcc.n	80005e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ea:	f000 f817 	bl	800061c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ee:	f7ff fedd 	bl	80003ac <main>

080005f2 <LoopForever>:

LoopForever:
  b LoopForever
 80005f2:	e7fe      	b.n	80005f2 <LoopForever>
  ldr   r0, =_estack
 80005f4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005fc:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 8000600:	080018b4 	.word	0x080018b4
  ldr r2, =_sbss
 8000604:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 8000608:	2000022c 	.word	0x2000022c

0800060c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800060c:	e7fe      	b.n	800060c <ADC_IRQHandler>
	...

08000610 <__errno>:
 8000610:	4b01      	ldr	r3, [pc, #4]	; (8000618 <__errno+0x8>)
 8000612:	6818      	ldr	r0, [r3, #0]
 8000614:	4770      	bx	lr
 8000616:	bf00      	nop
 8000618:	20000008 	.word	0x20000008

0800061c <__libc_init_array>:
 800061c:	b570      	push	{r4, r5, r6, lr}
 800061e:	4d0d      	ldr	r5, [pc, #52]	; (8000654 <__libc_init_array+0x38>)
 8000620:	4c0d      	ldr	r4, [pc, #52]	; (8000658 <__libc_init_array+0x3c>)
 8000622:	1b64      	subs	r4, r4, r5
 8000624:	10a4      	asrs	r4, r4, #2
 8000626:	2600      	movs	r6, #0
 8000628:	42a6      	cmp	r6, r4
 800062a:	d109      	bne.n	8000640 <__libc_init_array+0x24>
 800062c:	4d0b      	ldr	r5, [pc, #44]	; (800065c <__libc_init_array+0x40>)
 800062e:	4c0c      	ldr	r4, [pc, #48]	; (8000660 <__libc_init_array+0x44>)
 8000630:	f001 f878 	bl	8001724 <_init>
 8000634:	1b64      	subs	r4, r4, r5
 8000636:	10a4      	asrs	r4, r4, #2
 8000638:	2600      	movs	r6, #0
 800063a:	42a6      	cmp	r6, r4
 800063c:	d105      	bne.n	800064a <__libc_init_array+0x2e>
 800063e:	bd70      	pop	{r4, r5, r6, pc}
 8000640:	f855 3b04 	ldr.w	r3, [r5], #4
 8000644:	4798      	blx	r3
 8000646:	3601      	adds	r6, #1
 8000648:	e7ee      	b.n	8000628 <__libc_init_array+0xc>
 800064a:	f855 3b04 	ldr.w	r3, [r5], #4
 800064e:	4798      	blx	r3
 8000650:	3601      	adds	r6, #1
 8000652:	e7f2      	b.n	800063a <__libc_init_array+0x1e>
 8000654:	080018ac 	.word	0x080018ac
 8000658:	080018ac 	.word	0x080018ac
 800065c:	080018ac 	.word	0x080018ac
 8000660:	080018b0 	.word	0x080018b0

08000664 <memset>:
 8000664:	4402      	add	r2, r0
 8000666:	4603      	mov	r3, r0
 8000668:	4293      	cmp	r3, r2
 800066a:	d100      	bne.n	800066e <memset+0xa>
 800066c:	4770      	bx	lr
 800066e:	f803 1b01 	strb.w	r1, [r3], #1
 8000672:	e7f9      	b.n	8000668 <memset+0x4>

08000674 <iprintf>:
 8000674:	b40f      	push	{r0, r1, r2, r3}
 8000676:	4b0a      	ldr	r3, [pc, #40]	; (80006a0 <iprintf+0x2c>)
 8000678:	b513      	push	{r0, r1, r4, lr}
 800067a:	681c      	ldr	r4, [r3, #0]
 800067c:	b124      	cbz	r4, 8000688 <iprintf+0x14>
 800067e:	69a3      	ldr	r3, [r4, #24]
 8000680:	b913      	cbnz	r3, 8000688 <iprintf+0x14>
 8000682:	4620      	mov	r0, r4
 8000684:	f000 fa6e 	bl	8000b64 <__sinit>
 8000688:	ab05      	add	r3, sp, #20
 800068a:	9a04      	ldr	r2, [sp, #16]
 800068c:	68a1      	ldr	r1, [r4, #8]
 800068e:	9301      	str	r3, [sp, #4]
 8000690:	4620      	mov	r0, r4
 8000692:	f000 fc73 	bl	8000f7c <_vfiprintf_r>
 8000696:	b002      	add	sp, #8
 8000698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800069c:	b004      	add	sp, #16
 800069e:	4770      	bx	lr
 80006a0:	20000008 	.word	0x20000008

080006a4 <putchar>:
 80006a4:	b538      	push	{r3, r4, r5, lr}
 80006a6:	4b08      	ldr	r3, [pc, #32]	; (80006c8 <putchar+0x24>)
 80006a8:	681c      	ldr	r4, [r3, #0]
 80006aa:	4605      	mov	r5, r0
 80006ac:	b124      	cbz	r4, 80006b8 <putchar+0x14>
 80006ae:	69a3      	ldr	r3, [r4, #24]
 80006b0:	b913      	cbnz	r3, 80006b8 <putchar+0x14>
 80006b2:	4620      	mov	r0, r4
 80006b4:	f000 fa56 	bl	8000b64 <__sinit>
 80006b8:	68a2      	ldr	r2, [r4, #8]
 80006ba:	4629      	mov	r1, r5
 80006bc:	4620      	mov	r0, r4
 80006be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80006c2:	f000 bf1f 	b.w	8001504 <_putc_r>
 80006c6:	bf00      	nop
 80006c8:	20000008 	.word	0x20000008

080006cc <_puts_r>:
 80006cc:	b570      	push	{r4, r5, r6, lr}
 80006ce:	460e      	mov	r6, r1
 80006d0:	4605      	mov	r5, r0
 80006d2:	b118      	cbz	r0, 80006dc <_puts_r+0x10>
 80006d4:	6983      	ldr	r3, [r0, #24]
 80006d6:	b90b      	cbnz	r3, 80006dc <_puts_r+0x10>
 80006d8:	f000 fa44 	bl	8000b64 <__sinit>
 80006dc:	69ab      	ldr	r3, [r5, #24]
 80006de:	68ac      	ldr	r4, [r5, #8]
 80006e0:	b913      	cbnz	r3, 80006e8 <_puts_r+0x1c>
 80006e2:	4628      	mov	r0, r5
 80006e4:	f000 fa3e 	bl	8000b64 <__sinit>
 80006e8:	4b2c      	ldr	r3, [pc, #176]	; (800079c <_puts_r+0xd0>)
 80006ea:	429c      	cmp	r4, r3
 80006ec:	d120      	bne.n	8000730 <_puts_r+0x64>
 80006ee:	686c      	ldr	r4, [r5, #4]
 80006f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006f2:	07db      	lsls	r3, r3, #31
 80006f4:	d405      	bmi.n	8000702 <_puts_r+0x36>
 80006f6:	89a3      	ldrh	r3, [r4, #12]
 80006f8:	0598      	lsls	r0, r3, #22
 80006fa:	d402      	bmi.n	8000702 <_puts_r+0x36>
 80006fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006fe:	f000 facf 	bl	8000ca0 <__retarget_lock_acquire_recursive>
 8000702:	89a3      	ldrh	r3, [r4, #12]
 8000704:	0719      	lsls	r1, r3, #28
 8000706:	d51d      	bpl.n	8000744 <_puts_r+0x78>
 8000708:	6923      	ldr	r3, [r4, #16]
 800070a:	b1db      	cbz	r3, 8000744 <_puts_r+0x78>
 800070c:	3e01      	subs	r6, #1
 800070e:	68a3      	ldr	r3, [r4, #8]
 8000710:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000714:	3b01      	subs	r3, #1
 8000716:	60a3      	str	r3, [r4, #8]
 8000718:	bb39      	cbnz	r1, 800076a <_puts_r+0x9e>
 800071a:	2b00      	cmp	r3, #0
 800071c:	da38      	bge.n	8000790 <_puts_r+0xc4>
 800071e:	4622      	mov	r2, r4
 8000720:	210a      	movs	r1, #10
 8000722:	4628      	mov	r0, r5
 8000724:	f000 f848 	bl	80007b8 <__swbuf_r>
 8000728:	3001      	adds	r0, #1
 800072a:	d011      	beq.n	8000750 <_puts_r+0x84>
 800072c:	250a      	movs	r5, #10
 800072e:	e011      	b.n	8000754 <_puts_r+0x88>
 8000730:	4b1b      	ldr	r3, [pc, #108]	; (80007a0 <_puts_r+0xd4>)
 8000732:	429c      	cmp	r4, r3
 8000734:	d101      	bne.n	800073a <_puts_r+0x6e>
 8000736:	68ac      	ldr	r4, [r5, #8]
 8000738:	e7da      	b.n	80006f0 <_puts_r+0x24>
 800073a:	4b1a      	ldr	r3, [pc, #104]	; (80007a4 <_puts_r+0xd8>)
 800073c:	429c      	cmp	r4, r3
 800073e:	bf08      	it	eq
 8000740:	68ec      	ldreq	r4, [r5, #12]
 8000742:	e7d5      	b.n	80006f0 <_puts_r+0x24>
 8000744:	4621      	mov	r1, r4
 8000746:	4628      	mov	r0, r5
 8000748:	f000 f888 	bl	800085c <__swsetup_r>
 800074c:	2800      	cmp	r0, #0
 800074e:	d0dd      	beq.n	800070c <_puts_r+0x40>
 8000750:	f04f 35ff 	mov.w	r5, #4294967295
 8000754:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000756:	07da      	lsls	r2, r3, #31
 8000758:	d405      	bmi.n	8000766 <_puts_r+0x9a>
 800075a:	89a3      	ldrh	r3, [r4, #12]
 800075c:	059b      	lsls	r3, r3, #22
 800075e:	d402      	bmi.n	8000766 <_puts_r+0x9a>
 8000760:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000762:	f000 fa9e 	bl	8000ca2 <__retarget_lock_release_recursive>
 8000766:	4628      	mov	r0, r5
 8000768:	bd70      	pop	{r4, r5, r6, pc}
 800076a:	2b00      	cmp	r3, #0
 800076c:	da04      	bge.n	8000778 <_puts_r+0xac>
 800076e:	69a2      	ldr	r2, [r4, #24]
 8000770:	429a      	cmp	r2, r3
 8000772:	dc06      	bgt.n	8000782 <_puts_r+0xb6>
 8000774:	290a      	cmp	r1, #10
 8000776:	d004      	beq.n	8000782 <_puts_r+0xb6>
 8000778:	6823      	ldr	r3, [r4, #0]
 800077a:	1c5a      	adds	r2, r3, #1
 800077c:	6022      	str	r2, [r4, #0]
 800077e:	7019      	strb	r1, [r3, #0]
 8000780:	e7c5      	b.n	800070e <_puts_r+0x42>
 8000782:	4622      	mov	r2, r4
 8000784:	4628      	mov	r0, r5
 8000786:	f000 f817 	bl	80007b8 <__swbuf_r>
 800078a:	3001      	adds	r0, #1
 800078c:	d1bf      	bne.n	800070e <_puts_r+0x42>
 800078e:	e7df      	b.n	8000750 <_puts_r+0x84>
 8000790:	6823      	ldr	r3, [r4, #0]
 8000792:	250a      	movs	r5, #10
 8000794:	1c5a      	adds	r2, r3, #1
 8000796:	6022      	str	r2, [r4, #0]
 8000798:	701d      	strb	r5, [r3, #0]
 800079a:	e7db      	b.n	8000754 <_puts_r+0x88>
 800079c:	08001838 	.word	0x08001838
 80007a0:	08001858 	.word	0x08001858
 80007a4:	08001818 	.word	0x08001818

080007a8 <puts>:
 80007a8:	4b02      	ldr	r3, [pc, #8]	; (80007b4 <puts+0xc>)
 80007aa:	4601      	mov	r1, r0
 80007ac:	6818      	ldr	r0, [r3, #0]
 80007ae:	f7ff bf8d 	b.w	80006cc <_puts_r>
 80007b2:	bf00      	nop
 80007b4:	20000008 	.word	0x20000008

080007b8 <__swbuf_r>:
 80007b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ba:	460e      	mov	r6, r1
 80007bc:	4614      	mov	r4, r2
 80007be:	4605      	mov	r5, r0
 80007c0:	b118      	cbz	r0, 80007ca <__swbuf_r+0x12>
 80007c2:	6983      	ldr	r3, [r0, #24]
 80007c4:	b90b      	cbnz	r3, 80007ca <__swbuf_r+0x12>
 80007c6:	f000 f9cd 	bl	8000b64 <__sinit>
 80007ca:	4b21      	ldr	r3, [pc, #132]	; (8000850 <__swbuf_r+0x98>)
 80007cc:	429c      	cmp	r4, r3
 80007ce:	d12b      	bne.n	8000828 <__swbuf_r+0x70>
 80007d0:	686c      	ldr	r4, [r5, #4]
 80007d2:	69a3      	ldr	r3, [r4, #24]
 80007d4:	60a3      	str	r3, [r4, #8]
 80007d6:	89a3      	ldrh	r3, [r4, #12]
 80007d8:	071a      	lsls	r2, r3, #28
 80007da:	d52f      	bpl.n	800083c <__swbuf_r+0x84>
 80007dc:	6923      	ldr	r3, [r4, #16]
 80007de:	b36b      	cbz	r3, 800083c <__swbuf_r+0x84>
 80007e0:	6923      	ldr	r3, [r4, #16]
 80007e2:	6820      	ldr	r0, [r4, #0]
 80007e4:	1ac0      	subs	r0, r0, r3
 80007e6:	6963      	ldr	r3, [r4, #20]
 80007e8:	b2f6      	uxtb	r6, r6
 80007ea:	4283      	cmp	r3, r0
 80007ec:	4637      	mov	r7, r6
 80007ee:	dc04      	bgt.n	80007fa <__swbuf_r+0x42>
 80007f0:	4621      	mov	r1, r4
 80007f2:	4628      	mov	r0, r5
 80007f4:	f000 f922 	bl	8000a3c <_fflush_r>
 80007f8:	bb30      	cbnz	r0, 8000848 <__swbuf_r+0x90>
 80007fa:	68a3      	ldr	r3, [r4, #8]
 80007fc:	3b01      	subs	r3, #1
 80007fe:	60a3      	str	r3, [r4, #8]
 8000800:	6823      	ldr	r3, [r4, #0]
 8000802:	1c5a      	adds	r2, r3, #1
 8000804:	6022      	str	r2, [r4, #0]
 8000806:	701e      	strb	r6, [r3, #0]
 8000808:	6963      	ldr	r3, [r4, #20]
 800080a:	3001      	adds	r0, #1
 800080c:	4283      	cmp	r3, r0
 800080e:	d004      	beq.n	800081a <__swbuf_r+0x62>
 8000810:	89a3      	ldrh	r3, [r4, #12]
 8000812:	07db      	lsls	r3, r3, #31
 8000814:	d506      	bpl.n	8000824 <__swbuf_r+0x6c>
 8000816:	2e0a      	cmp	r6, #10
 8000818:	d104      	bne.n	8000824 <__swbuf_r+0x6c>
 800081a:	4621      	mov	r1, r4
 800081c:	4628      	mov	r0, r5
 800081e:	f000 f90d 	bl	8000a3c <_fflush_r>
 8000822:	b988      	cbnz	r0, 8000848 <__swbuf_r+0x90>
 8000824:	4638      	mov	r0, r7
 8000826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000828:	4b0a      	ldr	r3, [pc, #40]	; (8000854 <__swbuf_r+0x9c>)
 800082a:	429c      	cmp	r4, r3
 800082c:	d101      	bne.n	8000832 <__swbuf_r+0x7a>
 800082e:	68ac      	ldr	r4, [r5, #8]
 8000830:	e7cf      	b.n	80007d2 <__swbuf_r+0x1a>
 8000832:	4b09      	ldr	r3, [pc, #36]	; (8000858 <__swbuf_r+0xa0>)
 8000834:	429c      	cmp	r4, r3
 8000836:	bf08      	it	eq
 8000838:	68ec      	ldreq	r4, [r5, #12]
 800083a:	e7ca      	b.n	80007d2 <__swbuf_r+0x1a>
 800083c:	4621      	mov	r1, r4
 800083e:	4628      	mov	r0, r5
 8000840:	f000 f80c 	bl	800085c <__swsetup_r>
 8000844:	2800      	cmp	r0, #0
 8000846:	d0cb      	beq.n	80007e0 <__swbuf_r+0x28>
 8000848:	f04f 37ff 	mov.w	r7, #4294967295
 800084c:	e7ea      	b.n	8000824 <__swbuf_r+0x6c>
 800084e:	bf00      	nop
 8000850:	08001838 	.word	0x08001838
 8000854:	08001858 	.word	0x08001858
 8000858:	08001818 	.word	0x08001818

0800085c <__swsetup_r>:
 800085c:	4b32      	ldr	r3, [pc, #200]	; (8000928 <__swsetup_r+0xcc>)
 800085e:	b570      	push	{r4, r5, r6, lr}
 8000860:	681d      	ldr	r5, [r3, #0]
 8000862:	4606      	mov	r6, r0
 8000864:	460c      	mov	r4, r1
 8000866:	b125      	cbz	r5, 8000872 <__swsetup_r+0x16>
 8000868:	69ab      	ldr	r3, [r5, #24]
 800086a:	b913      	cbnz	r3, 8000872 <__swsetup_r+0x16>
 800086c:	4628      	mov	r0, r5
 800086e:	f000 f979 	bl	8000b64 <__sinit>
 8000872:	4b2e      	ldr	r3, [pc, #184]	; (800092c <__swsetup_r+0xd0>)
 8000874:	429c      	cmp	r4, r3
 8000876:	d10f      	bne.n	8000898 <__swsetup_r+0x3c>
 8000878:	686c      	ldr	r4, [r5, #4]
 800087a:	89a3      	ldrh	r3, [r4, #12]
 800087c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000880:	0719      	lsls	r1, r3, #28
 8000882:	d42c      	bmi.n	80008de <__swsetup_r+0x82>
 8000884:	06dd      	lsls	r5, r3, #27
 8000886:	d411      	bmi.n	80008ac <__swsetup_r+0x50>
 8000888:	2309      	movs	r3, #9
 800088a:	6033      	str	r3, [r6, #0]
 800088c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000890:	81a3      	strh	r3, [r4, #12]
 8000892:	f04f 30ff 	mov.w	r0, #4294967295
 8000896:	e03e      	b.n	8000916 <__swsetup_r+0xba>
 8000898:	4b25      	ldr	r3, [pc, #148]	; (8000930 <__swsetup_r+0xd4>)
 800089a:	429c      	cmp	r4, r3
 800089c:	d101      	bne.n	80008a2 <__swsetup_r+0x46>
 800089e:	68ac      	ldr	r4, [r5, #8]
 80008a0:	e7eb      	b.n	800087a <__swsetup_r+0x1e>
 80008a2:	4b24      	ldr	r3, [pc, #144]	; (8000934 <__swsetup_r+0xd8>)
 80008a4:	429c      	cmp	r4, r3
 80008a6:	bf08      	it	eq
 80008a8:	68ec      	ldreq	r4, [r5, #12]
 80008aa:	e7e6      	b.n	800087a <__swsetup_r+0x1e>
 80008ac:	0758      	lsls	r0, r3, #29
 80008ae:	d512      	bpl.n	80008d6 <__swsetup_r+0x7a>
 80008b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008b2:	b141      	cbz	r1, 80008c6 <__swsetup_r+0x6a>
 80008b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008b8:	4299      	cmp	r1, r3
 80008ba:	d002      	beq.n	80008c2 <__swsetup_r+0x66>
 80008bc:	4630      	mov	r0, r6
 80008be:	f000 fa57 	bl	8000d70 <_free_r>
 80008c2:	2300      	movs	r3, #0
 80008c4:	6363      	str	r3, [r4, #52]	; 0x34
 80008c6:	89a3      	ldrh	r3, [r4, #12]
 80008c8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80008cc:	81a3      	strh	r3, [r4, #12]
 80008ce:	2300      	movs	r3, #0
 80008d0:	6063      	str	r3, [r4, #4]
 80008d2:	6923      	ldr	r3, [r4, #16]
 80008d4:	6023      	str	r3, [r4, #0]
 80008d6:	89a3      	ldrh	r3, [r4, #12]
 80008d8:	f043 0308 	orr.w	r3, r3, #8
 80008dc:	81a3      	strh	r3, [r4, #12]
 80008de:	6923      	ldr	r3, [r4, #16]
 80008e0:	b94b      	cbnz	r3, 80008f6 <__swsetup_r+0x9a>
 80008e2:	89a3      	ldrh	r3, [r4, #12]
 80008e4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80008e8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008ec:	d003      	beq.n	80008f6 <__swsetup_r+0x9a>
 80008ee:	4621      	mov	r1, r4
 80008f0:	4630      	mov	r0, r6
 80008f2:	f000 f9fd 	bl	8000cf0 <__smakebuf_r>
 80008f6:	89a0      	ldrh	r0, [r4, #12]
 80008f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80008fc:	f010 0301 	ands.w	r3, r0, #1
 8000900:	d00a      	beq.n	8000918 <__swsetup_r+0xbc>
 8000902:	2300      	movs	r3, #0
 8000904:	60a3      	str	r3, [r4, #8]
 8000906:	6963      	ldr	r3, [r4, #20]
 8000908:	425b      	negs	r3, r3
 800090a:	61a3      	str	r3, [r4, #24]
 800090c:	6923      	ldr	r3, [r4, #16]
 800090e:	b943      	cbnz	r3, 8000922 <__swsetup_r+0xc6>
 8000910:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000914:	d1ba      	bne.n	800088c <__swsetup_r+0x30>
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	0781      	lsls	r1, r0, #30
 800091a:	bf58      	it	pl
 800091c:	6963      	ldrpl	r3, [r4, #20]
 800091e:	60a3      	str	r3, [r4, #8]
 8000920:	e7f4      	b.n	800090c <__swsetup_r+0xb0>
 8000922:	2000      	movs	r0, #0
 8000924:	e7f7      	b.n	8000916 <__swsetup_r+0xba>
 8000926:	bf00      	nop
 8000928:	20000008 	.word	0x20000008
 800092c:	08001838 	.word	0x08001838
 8000930:	08001858 	.word	0x08001858
 8000934:	08001818 	.word	0x08001818

08000938 <__sflush_r>:
 8000938:	898a      	ldrh	r2, [r1, #12]
 800093a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800093c:	4605      	mov	r5, r0
 800093e:	0710      	lsls	r0, r2, #28
 8000940:	460c      	mov	r4, r1
 8000942:	d457      	bmi.n	80009f4 <__sflush_r+0xbc>
 8000944:	684b      	ldr	r3, [r1, #4]
 8000946:	2b00      	cmp	r3, #0
 8000948:	dc04      	bgt.n	8000954 <__sflush_r+0x1c>
 800094a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800094c:	2b00      	cmp	r3, #0
 800094e:	dc01      	bgt.n	8000954 <__sflush_r+0x1c>
 8000950:	2000      	movs	r0, #0
 8000952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000954:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000956:	2e00      	cmp	r6, #0
 8000958:	d0fa      	beq.n	8000950 <__sflush_r+0x18>
 800095a:	2300      	movs	r3, #0
 800095c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000960:	682f      	ldr	r7, [r5, #0]
 8000962:	602b      	str	r3, [r5, #0]
 8000964:	d032      	beq.n	80009cc <__sflush_r+0x94>
 8000966:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000968:	89a3      	ldrh	r3, [r4, #12]
 800096a:	075a      	lsls	r2, r3, #29
 800096c:	d505      	bpl.n	800097a <__sflush_r+0x42>
 800096e:	6863      	ldr	r3, [r4, #4]
 8000970:	1ac0      	subs	r0, r0, r3
 8000972:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000974:	b10b      	cbz	r3, 800097a <__sflush_r+0x42>
 8000976:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000978:	1ac0      	subs	r0, r0, r3
 800097a:	2300      	movs	r3, #0
 800097c:	4602      	mov	r2, r0
 800097e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000980:	6a21      	ldr	r1, [r4, #32]
 8000982:	4628      	mov	r0, r5
 8000984:	47b0      	blx	r6
 8000986:	1c43      	adds	r3, r0, #1
 8000988:	89a3      	ldrh	r3, [r4, #12]
 800098a:	d106      	bne.n	800099a <__sflush_r+0x62>
 800098c:	6829      	ldr	r1, [r5, #0]
 800098e:	291d      	cmp	r1, #29
 8000990:	d82c      	bhi.n	80009ec <__sflush_r+0xb4>
 8000992:	4a29      	ldr	r2, [pc, #164]	; (8000a38 <__sflush_r+0x100>)
 8000994:	40ca      	lsrs	r2, r1
 8000996:	07d6      	lsls	r6, r2, #31
 8000998:	d528      	bpl.n	80009ec <__sflush_r+0xb4>
 800099a:	2200      	movs	r2, #0
 800099c:	6062      	str	r2, [r4, #4]
 800099e:	04d9      	lsls	r1, r3, #19
 80009a0:	6922      	ldr	r2, [r4, #16]
 80009a2:	6022      	str	r2, [r4, #0]
 80009a4:	d504      	bpl.n	80009b0 <__sflush_r+0x78>
 80009a6:	1c42      	adds	r2, r0, #1
 80009a8:	d101      	bne.n	80009ae <__sflush_r+0x76>
 80009aa:	682b      	ldr	r3, [r5, #0]
 80009ac:	b903      	cbnz	r3, 80009b0 <__sflush_r+0x78>
 80009ae:	6560      	str	r0, [r4, #84]	; 0x54
 80009b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80009b2:	602f      	str	r7, [r5, #0]
 80009b4:	2900      	cmp	r1, #0
 80009b6:	d0cb      	beq.n	8000950 <__sflush_r+0x18>
 80009b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80009bc:	4299      	cmp	r1, r3
 80009be:	d002      	beq.n	80009c6 <__sflush_r+0x8e>
 80009c0:	4628      	mov	r0, r5
 80009c2:	f000 f9d5 	bl	8000d70 <_free_r>
 80009c6:	2000      	movs	r0, #0
 80009c8:	6360      	str	r0, [r4, #52]	; 0x34
 80009ca:	e7c2      	b.n	8000952 <__sflush_r+0x1a>
 80009cc:	6a21      	ldr	r1, [r4, #32]
 80009ce:	2301      	movs	r3, #1
 80009d0:	4628      	mov	r0, r5
 80009d2:	47b0      	blx	r6
 80009d4:	1c41      	adds	r1, r0, #1
 80009d6:	d1c7      	bne.n	8000968 <__sflush_r+0x30>
 80009d8:	682b      	ldr	r3, [r5, #0]
 80009da:	2b00      	cmp	r3, #0
 80009dc:	d0c4      	beq.n	8000968 <__sflush_r+0x30>
 80009de:	2b1d      	cmp	r3, #29
 80009e0:	d001      	beq.n	80009e6 <__sflush_r+0xae>
 80009e2:	2b16      	cmp	r3, #22
 80009e4:	d101      	bne.n	80009ea <__sflush_r+0xb2>
 80009e6:	602f      	str	r7, [r5, #0]
 80009e8:	e7b2      	b.n	8000950 <__sflush_r+0x18>
 80009ea:	89a3      	ldrh	r3, [r4, #12]
 80009ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009f0:	81a3      	strh	r3, [r4, #12]
 80009f2:	e7ae      	b.n	8000952 <__sflush_r+0x1a>
 80009f4:	690f      	ldr	r7, [r1, #16]
 80009f6:	2f00      	cmp	r7, #0
 80009f8:	d0aa      	beq.n	8000950 <__sflush_r+0x18>
 80009fa:	0793      	lsls	r3, r2, #30
 80009fc:	680e      	ldr	r6, [r1, #0]
 80009fe:	bf08      	it	eq
 8000a00:	694b      	ldreq	r3, [r1, #20]
 8000a02:	600f      	str	r7, [r1, #0]
 8000a04:	bf18      	it	ne
 8000a06:	2300      	movne	r3, #0
 8000a08:	1bf6      	subs	r6, r6, r7
 8000a0a:	608b      	str	r3, [r1, #8]
 8000a0c:	2e00      	cmp	r6, #0
 8000a0e:	dd9f      	ble.n	8000950 <__sflush_r+0x18>
 8000a10:	6a21      	ldr	r1, [r4, #32]
 8000a12:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000a16:	4633      	mov	r3, r6
 8000a18:	463a      	mov	r2, r7
 8000a1a:	4628      	mov	r0, r5
 8000a1c:	47e0      	blx	ip
 8000a1e:	2800      	cmp	r0, #0
 8000a20:	dc06      	bgt.n	8000a30 <__sflush_r+0xf8>
 8000a22:	89a3      	ldrh	r3, [r4, #12]
 8000a24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a28:	81a3      	strh	r3, [r4, #12]
 8000a2a:	f04f 30ff 	mov.w	r0, #4294967295
 8000a2e:	e790      	b.n	8000952 <__sflush_r+0x1a>
 8000a30:	4407      	add	r7, r0
 8000a32:	1a36      	subs	r6, r6, r0
 8000a34:	e7ea      	b.n	8000a0c <__sflush_r+0xd4>
 8000a36:	bf00      	nop
 8000a38:	20400001 	.word	0x20400001

08000a3c <_fflush_r>:
 8000a3c:	b538      	push	{r3, r4, r5, lr}
 8000a3e:	690b      	ldr	r3, [r1, #16]
 8000a40:	4605      	mov	r5, r0
 8000a42:	460c      	mov	r4, r1
 8000a44:	b913      	cbnz	r3, 8000a4c <_fflush_r+0x10>
 8000a46:	2500      	movs	r5, #0
 8000a48:	4628      	mov	r0, r5
 8000a4a:	bd38      	pop	{r3, r4, r5, pc}
 8000a4c:	b118      	cbz	r0, 8000a56 <_fflush_r+0x1a>
 8000a4e:	6983      	ldr	r3, [r0, #24]
 8000a50:	b90b      	cbnz	r3, 8000a56 <_fflush_r+0x1a>
 8000a52:	f000 f887 	bl	8000b64 <__sinit>
 8000a56:	4b14      	ldr	r3, [pc, #80]	; (8000aa8 <_fflush_r+0x6c>)
 8000a58:	429c      	cmp	r4, r3
 8000a5a:	d11b      	bne.n	8000a94 <_fflush_r+0x58>
 8000a5c:	686c      	ldr	r4, [r5, #4]
 8000a5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a62:	2b00      	cmp	r3, #0
 8000a64:	d0ef      	beq.n	8000a46 <_fflush_r+0xa>
 8000a66:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000a68:	07d0      	lsls	r0, r2, #31
 8000a6a:	d404      	bmi.n	8000a76 <_fflush_r+0x3a>
 8000a6c:	0599      	lsls	r1, r3, #22
 8000a6e:	d402      	bmi.n	8000a76 <_fflush_r+0x3a>
 8000a70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a72:	f000 f915 	bl	8000ca0 <__retarget_lock_acquire_recursive>
 8000a76:	4628      	mov	r0, r5
 8000a78:	4621      	mov	r1, r4
 8000a7a:	f7ff ff5d 	bl	8000938 <__sflush_r>
 8000a7e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000a80:	07da      	lsls	r2, r3, #31
 8000a82:	4605      	mov	r5, r0
 8000a84:	d4e0      	bmi.n	8000a48 <_fflush_r+0xc>
 8000a86:	89a3      	ldrh	r3, [r4, #12]
 8000a88:	059b      	lsls	r3, r3, #22
 8000a8a:	d4dd      	bmi.n	8000a48 <_fflush_r+0xc>
 8000a8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a8e:	f000 f908 	bl	8000ca2 <__retarget_lock_release_recursive>
 8000a92:	e7d9      	b.n	8000a48 <_fflush_r+0xc>
 8000a94:	4b05      	ldr	r3, [pc, #20]	; (8000aac <_fflush_r+0x70>)
 8000a96:	429c      	cmp	r4, r3
 8000a98:	d101      	bne.n	8000a9e <_fflush_r+0x62>
 8000a9a:	68ac      	ldr	r4, [r5, #8]
 8000a9c:	e7df      	b.n	8000a5e <_fflush_r+0x22>
 8000a9e:	4b04      	ldr	r3, [pc, #16]	; (8000ab0 <_fflush_r+0x74>)
 8000aa0:	429c      	cmp	r4, r3
 8000aa2:	bf08      	it	eq
 8000aa4:	68ec      	ldreq	r4, [r5, #12]
 8000aa6:	e7da      	b.n	8000a5e <_fflush_r+0x22>
 8000aa8:	08001838 	.word	0x08001838
 8000aac:	08001858 	.word	0x08001858
 8000ab0:	08001818 	.word	0x08001818

08000ab4 <std>:
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	b510      	push	{r4, lr}
 8000ab8:	4604      	mov	r4, r0
 8000aba:	e9c0 3300 	strd	r3, r3, [r0]
 8000abe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ac2:	6083      	str	r3, [r0, #8]
 8000ac4:	8181      	strh	r1, [r0, #12]
 8000ac6:	6643      	str	r3, [r0, #100]	; 0x64
 8000ac8:	81c2      	strh	r2, [r0, #14]
 8000aca:	6183      	str	r3, [r0, #24]
 8000acc:	4619      	mov	r1, r3
 8000ace:	2208      	movs	r2, #8
 8000ad0:	305c      	adds	r0, #92	; 0x5c
 8000ad2:	f7ff fdc7 	bl	8000664 <memset>
 8000ad6:	4b05      	ldr	r3, [pc, #20]	; (8000aec <std+0x38>)
 8000ad8:	6263      	str	r3, [r4, #36]	; 0x24
 8000ada:	4b05      	ldr	r3, [pc, #20]	; (8000af0 <std+0x3c>)
 8000adc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000ade:	4b05      	ldr	r3, [pc, #20]	; (8000af4 <std+0x40>)
 8000ae0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <std+0x44>)
 8000ae4:	6224      	str	r4, [r4, #32]
 8000ae6:	6323      	str	r3, [r4, #48]	; 0x30
 8000ae8:	bd10      	pop	{r4, pc}
 8000aea:	bf00      	nop
 8000aec:	080015b5 	.word	0x080015b5
 8000af0:	080015d7 	.word	0x080015d7
 8000af4:	0800160f 	.word	0x0800160f
 8000af8:	08001633 	.word	0x08001633

08000afc <_cleanup_r>:
 8000afc:	4901      	ldr	r1, [pc, #4]	; (8000b04 <_cleanup_r+0x8>)
 8000afe:	f000 b8af 	b.w	8000c60 <_fwalk_reent>
 8000b02:	bf00      	nop
 8000b04:	08000a3d 	.word	0x08000a3d

08000b08 <__sfmoreglue>:
 8000b08:	b570      	push	{r4, r5, r6, lr}
 8000b0a:	2268      	movs	r2, #104	; 0x68
 8000b0c:	1e4d      	subs	r5, r1, #1
 8000b0e:	4355      	muls	r5, r2
 8000b10:	460e      	mov	r6, r1
 8000b12:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000b16:	f000 f995 	bl	8000e44 <_malloc_r>
 8000b1a:	4604      	mov	r4, r0
 8000b1c:	b140      	cbz	r0, 8000b30 <__sfmoreglue+0x28>
 8000b1e:	2100      	movs	r1, #0
 8000b20:	e9c0 1600 	strd	r1, r6, [r0]
 8000b24:	300c      	adds	r0, #12
 8000b26:	60a0      	str	r0, [r4, #8]
 8000b28:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000b2c:	f7ff fd9a 	bl	8000664 <memset>
 8000b30:	4620      	mov	r0, r4
 8000b32:	bd70      	pop	{r4, r5, r6, pc}

08000b34 <__sfp_lock_acquire>:
 8000b34:	4801      	ldr	r0, [pc, #4]	; (8000b3c <__sfp_lock_acquire+0x8>)
 8000b36:	f000 b8b3 	b.w	8000ca0 <__retarget_lock_acquire_recursive>
 8000b3a:	bf00      	nop
 8000b3c:	2000021d 	.word	0x2000021d

08000b40 <__sfp_lock_release>:
 8000b40:	4801      	ldr	r0, [pc, #4]	; (8000b48 <__sfp_lock_release+0x8>)
 8000b42:	f000 b8ae 	b.w	8000ca2 <__retarget_lock_release_recursive>
 8000b46:	bf00      	nop
 8000b48:	2000021d 	.word	0x2000021d

08000b4c <__sinit_lock_acquire>:
 8000b4c:	4801      	ldr	r0, [pc, #4]	; (8000b54 <__sinit_lock_acquire+0x8>)
 8000b4e:	f000 b8a7 	b.w	8000ca0 <__retarget_lock_acquire_recursive>
 8000b52:	bf00      	nop
 8000b54:	2000021e 	.word	0x2000021e

08000b58 <__sinit_lock_release>:
 8000b58:	4801      	ldr	r0, [pc, #4]	; (8000b60 <__sinit_lock_release+0x8>)
 8000b5a:	f000 b8a2 	b.w	8000ca2 <__retarget_lock_release_recursive>
 8000b5e:	bf00      	nop
 8000b60:	2000021e 	.word	0x2000021e

08000b64 <__sinit>:
 8000b64:	b510      	push	{r4, lr}
 8000b66:	4604      	mov	r4, r0
 8000b68:	f7ff fff0 	bl	8000b4c <__sinit_lock_acquire>
 8000b6c:	69a3      	ldr	r3, [r4, #24]
 8000b6e:	b11b      	cbz	r3, 8000b78 <__sinit+0x14>
 8000b70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b74:	f7ff bff0 	b.w	8000b58 <__sinit_lock_release>
 8000b78:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b7c:	6523      	str	r3, [r4, #80]	; 0x50
 8000b7e:	4b13      	ldr	r3, [pc, #76]	; (8000bcc <__sinit+0x68>)
 8000b80:	4a13      	ldr	r2, [pc, #76]	; (8000bd0 <__sinit+0x6c>)
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b86:	42a3      	cmp	r3, r4
 8000b88:	bf04      	itt	eq
 8000b8a:	2301      	moveq	r3, #1
 8000b8c:	61a3      	streq	r3, [r4, #24]
 8000b8e:	4620      	mov	r0, r4
 8000b90:	f000 f820 	bl	8000bd4 <__sfp>
 8000b94:	6060      	str	r0, [r4, #4]
 8000b96:	4620      	mov	r0, r4
 8000b98:	f000 f81c 	bl	8000bd4 <__sfp>
 8000b9c:	60a0      	str	r0, [r4, #8]
 8000b9e:	4620      	mov	r0, r4
 8000ba0:	f000 f818 	bl	8000bd4 <__sfp>
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	60e0      	str	r0, [r4, #12]
 8000ba8:	2104      	movs	r1, #4
 8000baa:	6860      	ldr	r0, [r4, #4]
 8000bac:	f7ff ff82 	bl	8000ab4 <std>
 8000bb0:	68a0      	ldr	r0, [r4, #8]
 8000bb2:	2201      	movs	r2, #1
 8000bb4:	2109      	movs	r1, #9
 8000bb6:	f7ff ff7d 	bl	8000ab4 <std>
 8000bba:	68e0      	ldr	r0, [r4, #12]
 8000bbc:	2202      	movs	r2, #2
 8000bbe:	2112      	movs	r1, #18
 8000bc0:	f7ff ff78 	bl	8000ab4 <std>
 8000bc4:	2301      	movs	r3, #1
 8000bc6:	61a3      	str	r3, [r4, #24]
 8000bc8:	e7d2      	b.n	8000b70 <__sinit+0xc>
 8000bca:	bf00      	nop
 8000bcc:	08001814 	.word	0x08001814
 8000bd0:	08000afd 	.word	0x08000afd

08000bd4 <__sfp>:
 8000bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bd6:	4607      	mov	r7, r0
 8000bd8:	f7ff ffac 	bl	8000b34 <__sfp_lock_acquire>
 8000bdc:	4b1e      	ldr	r3, [pc, #120]	; (8000c58 <__sfp+0x84>)
 8000bde:	681e      	ldr	r6, [r3, #0]
 8000be0:	69b3      	ldr	r3, [r6, #24]
 8000be2:	b913      	cbnz	r3, 8000bea <__sfp+0x16>
 8000be4:	4630      	mov	r0, r6
 8000be6:	f7ff ffbd 	bl	8000b64 <__sinit>
 8000bea:	3648      	adds	r6, #72	; 0x48
 8000bec:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000bf0:	3b01      	subs	r3, #1
 8000bf2:	d503      	bpl.n	8000bfc <__sfp+0x28>
 8000bf4:	6833      	ldr	r3, [r6, #0]
 8000bf6:	b30b      	cbz	r3, 8000c3c <__sfp+0x68>
 8000bf8:	6836      	ldr	r6, [r6, #0]
 8000bfa:	e7f7      	b.n	8000bec <__sfp+0x18>
 8000bfc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000c00:	b9d5      	cbnz	r5, 8000c38 <__sfp+0x64>
 8000c02:	4b16      	ldr	r3, [pc, #88]	; (8000c5c <__sfp+0x88>)
 8000c04:	60e3      	str	r3, [r4, #12]
 8000c06:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000c0a:	6665      	str	r5, [r4, #100]	; 0x64
 8000c0c:	f000 f847 	bl	8000c9e <__retarget_lock_init_recursive>
 8000c10:	f7ff ff96 	bl	8000b40 <__sfp_lock_release>
 8000c14:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000c18:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000c1c:	6025      	str	r5, [r4, #0]
 8000c1e:	61a5      	str	r5, [r4, #24]
 8000c20:	2208      	movs	r2, #8
 8000c22:	4629      	mov	r1, r5
 8000c24:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000c28:	f7ff fd1c 	bl	8000664 <memset>
 8000c2c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000c30:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000c34:	4620      	mov	r0, r4
 8000c36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c38:	3468      	adds	r4, #104	; 0x68
 8000c3a:	e7d9      	b.n	8000bf0 <__sfp+0x1c>
 8000c3c:	2104      	movs	r1, #4
 8000c3e:	4638      	mov	r0, r7
 8000c40:	f7ff ff62 	bl	8000b08 <__sfmoreglue>
 8000c44:	4604      	mov	r4, r0
 8000c46:	6030      	str	r0, [r6, #0]
 8000c48:	2800      	cmp	r0, #0
 8000c4a:	d1d5      	bne.n	8000bf8 <__sfp+0x24>
 8000c4c:	f7ff ff78 	bl	8000b40 <__sfp_lock_release>
 8000c50:	230c      	movs	r3, #12
 8000c52:	603b      	str	r3, [r7, #0]
 8000c54:	e7ee      	b.n	8000c34 <__sfp+0x60>
 8000c56:	bf00      	nop
 8000c58:	08001814 	.word	0x08001814
 8000c5c:	ffff0001 	.word	0xffff0001

08000c60 <_fwalk_reent>:
 8000c60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c64:	4606      	mov	r6, r0
 8000c66:	4688      	mov	r8, r1
 8000c68:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c6c:	2700      	movs	r7, #0
 8000c6e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c72:	f1b9 0901 	subs.w	r9, r9, #1
 8000c76:	d505      	bpl.n	8000c84 <_fwalk_reent+0x24>
 8000c78:	6824      	ldr	r4, [r4, #0]
 8000c7a:	2c00      	cmp	r4, #0
 8000c7c:	d1f7      	bne.n	8000c6e <_fwalk_reent+0xe>
 8000c7e:	4638      	mov	r0, r7
 8000c80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c84:	89ab      	ldrh	r3, [r5, #12]
 8000c86:	2b01      	cmp	r3, #1
 8000c88:	d907      	bls.n	8000c9a <_fwalk_reent+0x3a>
 8000c8a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c8e:	3301      	adds	r3, #1
 8000c90:	d003      	beq.n	8000c9a <_fwalk_reent+0x3a>
 8000c92:	4629      	mov	r1, r5
 8000c94:	4630      	mov	r0, r6
 8000c96:	47c0      	blx	r8
 8000c98:	4307      	orrs	r7, r0
 8000c9a:	3568      	adds	r5, #104	; 0x68
 8000c9c:	e7e9      	b.n	8000c72 <_fwalk_reent+0x12>

08000c9e <__retarget_lock_init_recursive>:
 8000c9e:	4770      	bx	lr

08000ca0 <__retarget_lock_acquire_recursive>:
 8000ca0:	4770      	bx	lr

08000ca2 <__retarget_lock_release_recursive>:
 8000ca2:	4770      	bx	lr

08000ca4 <__swhatbuf_r>:
 8000ca4:	b570      	push	{r4, r5, r6, lr}
 8000ca6:	460e      	mov	r6, r1
 8000ca8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cac:	2900      	cmp	r1, #0
 8000cae:	b096      	sub	sp, #88	; 0x58
 8000cb0:	4614      	mov	r4, r2
 8000cb2:	461d      	mov	r5, r3
 8000cb4:	da08      	bge.n	8000cc8 <__swhatbuf_r+0x24>
 8000cb6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000cba:	2200      	movs	r2, #0
 8000cbc:	602a      	str	r2, [r5, #0]
 8000cbe:	061a      	lsls	r2, r3, #24
 8000cc0:	d410      	bmi.n	8000ce4 <__swhatbuf_r+0x40>
 8000cc2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000cc6:	e00e      	b.n	8000ce6 <__swhatbuf_r+0x42>
 8000cc8:	466a      	mov	r2, sp
 8000cca:	f000 fcd9 	bl	8001680 <_fstat_r>
 8000cce:	2800      	cmp	r0, #0
 8000cd0:	dbf1      	blt.n	8000cb6 <__swhatbuf_r+0x12>
 8000cd2:	9a01      	ldr	r2, [sp, #4]
 8000cd4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000cd8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000cdc:	425a      	negs	r2, r3
 8000cde:	415a      	adcs	r2, r3
 8000ce0:	602a      	str	r2, [r5, #0]
 8000ce2:	e7ee      	b.n	8000cc2 <__swhatbuf_r+0x1e>
 8000ce4:	2340      	movs	r3, #64	; 0x40
 8000ce6:	2000      	movs	r0, #0
 8000ce8:	6023      	str	r3, [r4, #0]
 8000cea:	b016      	add	sp, #88	; 0x58
 8000cec:	bd70      	pop	{r4, r5, r6, pc}
	...

08000cf0 <__smakebuf_r>:
 8000cf0:	898b      	ldrh	r3, [r1, #12]
 8000cf2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000cf4:	079d      	lsls	r5, r3, #30
 8000cf6:	4606      	mov	r6, r0
 8000cf8:	460c      	mov	r4, r1
 8000cfa:	d507      	bpl.n	8000d0c <__smakebuf_r+0x1c>
 8000cfc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000d00:	6023      	str	r3, [r4, #0]
 8000d02:	6123      	str	r3, [r4, #16]
 8000d04:	2301      	movs	r3, #1
 8000d06:	6163      	str	r3, [r4, #20]
 8000d08:	b002      	add	sp, #8
 8000d0a:	bd70      	pop	{r4, r5, r6, pc}
 8000d0c:	ab01      	add	r3, sp, #4
 8000d0e:	466a      	mov	r2, sp
 8000d10:	f7ff ffc8 	bl	8000ca4 <__swhatbuf_r>
 8000d14:	9900      	ldr	r1, [sp, #0]
 8000d16:	4605      	mov	r5, r0
 8000d18:	4630      	mov	r0, r6
 8000d1a:	f000 f893 	bl	8000e44 <_malloc_r>
 8000d1e:	b948      	cbnz	r0, 8000d34 <__smakebuf_r+0x44>
 8000d20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d24:	059a      	lsls	r2, r3, #22
 8000d26:	d4ef      	bmi.n	8000d08 <__smakebuf_r+0x18>
 8000d28:	f023 0303 	bic.w	r3, r3, #3
 8000d2c:	f043 0302 	orr.w	r3, r3, #2
 8000d30:	81a3      	strh	r3, [r4, #12]
 8000d32:	e7e3      	b.n	8000cfc <__smakebuf_r+0xc>
 8000d34:	4b0d      	ldr	r3, [pc, #52]	; (8000d6c <__smakebuf_r+0x7c>)
 8000d36:	62b3      	str	r3, [r6, #40]	; 0x28
 8000d38:	89a3      	ldrh	r3, [r4, #12]
 8000d3a:	6020      	str	r0, [r4, #0]
 8000d3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d40:	81a3      	strh	r3, [r4, #12]
 8000d42:	9b00      	ldr	r3, [sp, #0]
 8000d44:	6163      	str	r3, [r4, #20]
 8000d46:	9b01      	ldr	r3, [sp, #4]
 8000d48:	6120      	str	r0, [r4, #16]
 8000d4a:	b15b      	cbz	r3, 8000d64 <__smakebuf_r+0x74>
 8000d4c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d50:	4630      	mov	r0, r6
 8000d52:	f000 fca7 	bl	80016a4 <_isatty_r>
 8000d56:	b128      	cbz	r0, 8000d64 <__smakebuf_r+0x74>
 8000d58:	89a3      	ldrh	r3, [r4, #12]
 8000d5a:	f023 0303 	bic.w	r3, r3, #3
 8000d5e:	f043 0301 	orr.w	r3, r3, #1
 8000d62:	81a3      	strh	r3, [r4, #12]
 8000d64:	89a0      	ldrh	r0, [r4, #12]
 8000d66:	4305      	orrs	r5, r0
 8000d68:	81a5      	strh	r5, [r4, #12]
 8000d6a:	e7cd      	b.n	8000d08 <__smakebuf_r+0x18>
 8000d6c:	08000afd 	.word	0x08000afd

08000d70 <_free_r>:
 8000d70:	b538      	push	{r3, r4, r5, lr}
 8000d72:	4605      	mov	r5, r0
 8000d74:	2900      	cmp	r1, #0
 8000d76:	d041      	beq.n	8000dfc <_free_r+0x8c>
 8000d78:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000d7c:	1f0c      	subs	r4, r1, #4
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	bfb8      	it	lt
 8000d82:	18e4      	addlt	r4, r4, r3
 8000d84:	f000 fcb0 	bl	80016e8 <__malloc_lock>
 8000d88:	4a1d      	ldr	r2, [pc, #116]	; (8000e00 <_free_r+0x90>)
 8000d8a:	6813      	ldr	r3, [r2, #0]
 8000d8c:	b933      	cbnz	r3, 8000d9c <_free_r+0x2c>
 8000d8e:	6063      	str	r3, [r4, #4]
 8000d90:	6014      	str	r4, [r2, #0]
 8000d92:	4628      	mov	r0, r5
 8000d94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d98:	f000 bcac 	b.w	80016f4 <__malloc_unlock>
 8000d9c:	42a3      	cmp	r3, r4
 8000d9e:	d908      	bls.n	8000db2 <_free_r+0x42>
 8000da0:	6820      	ldr	r0, [r4, #0]
 8000da2:	1821      	adds	r1, r4, r0
 8000da4:	428b      	cmp	r3, r1
 8000da6:	bf01      	itttt	eq
 8000da8:	6819      	ldreq	r1, [r3, #0]
 8000daa:	685b      	ldreq	r3, [r3, #4]
 8000dac:	1809      	addeq	r1, r1, r0
 8000dae:	6021      	streq	r1, [r4, #0]
 8000db0:	e7ed      	b.n	8000d8e <_free_r+0x1e>
 8000db2:	461a      	mov	r2, r3
 8000db4:	685b      	ldr	r3, [r3, #4]
 8000db6:	b10b      	cbz	r3, 8000dbc <_free_r+0x4c>
 8000db8:	42a3      	cmp	r3, r4
 8000dba:	d9fa      	bls.n	8000db2 <_free_r+0x42>
 8000dbc:	6811      	ldr	r1, [r2, #0]
 8000dbe:	1850      	adds	r0, r2, r1
 8000dc0:	42a0      	cmp	r0, r4
 8000dc2:	d10b      	bne.n	8000ddc <_free_r+0x6c>
 8000dc4:	6820      	ldr	r0, [r4, #0]
 8000dc6:	4401      	add	r1, r0
 8000dc8:	1850      	adds	r0, r2, r1
 8000dca:	4283      	cmp	r3, r0
 8000dcc:	6011      	str	r1, [r2, #0]
 8000dce:	d1e0      	bne.n	8000d92 <_free_r+0x22>
 8000dd0:	6818      	ldr	r0, [r3, #0]
 8000dd2:	685b      	ldr	r3, [r3, #4]
 8000dd4:	6053      	str	r3, [r2, #4]
 8000dd6:	4401      	add	r1, r0
 8000dd8:	6011      	str	r1, [r2, #0]
 8000dda:	e7da      	b.n	8000d92 <_free_r+0x22>
 8000ddc:	d902      	bls.n	8000de4 <_free_r+0x74>
 8000dde:	230c      	movs	r3, #12
 8000de0:	602b      	str	r3, [r5, #0]
 8000de2:	e7d6      	b.n	8000d92 <_free_r+0x22>
 8000de4:	6820      	ldr	r0, [r4, #0]
 8000de6:	1821      	adds	r1, r4, r0
 8000de8:	428b      	cmp	r3, r1
 8000dea:	bf04      	itt	eq
 8000dec:	6819      	ldreq	r1, [r3, #0]
 8000dee:	685b      	ldreq	r3, [r3, #4]
 8000df0:	6063      	str	r3, [r4, #4]
 8000df2:	bf04      	itt	eq
 8000df4:	1809      	addeq	r1, r1, r0
 8000df6:	6021      	streq	r1, [r4, #0]
 8000df8:	6054      	str	r4, [r2, #4]
 8000dfa:	e7ca      	b.n	8000d92 <_free_r+0x22>
 8000dfc:	bd38      	pop	{r3, r4, r5, pc}
 8000dfe:	bf00      	nop
 8000e00:	20000220 	.word	0x20000220

08000e04 <sbrk_aligned>:
 8000e04:	b570      	push	{r4, r5, r6, lr}
 8000e06:	4e0e      	ldr	r6, [pc, #56]	; (8000e40 <sbrk_aligned+0x3c>)
 8000e08:	460c      	mov	r4, r1
 8000e0a:	6831      	ldr	r1, [r6, #0]
 8000e0c:	4605      	mov	r5, r0
 8000e0e:	b911      	cbnz	r1, 8000e16 <sbrk_aligned+0x12>
 8000e10:	f000 fbc0 	bl	8001594 <_sbrk_r>
 8000e14:	6030      	str	r0, [r6, #0]
 8000e16:	4621      	mov	r1, r4
 8000e18:	4628      	mov	r0, r5
 8000e1a:	f000 fbbb 	bl	8001594 <_sbrk_r>
 8000e1e:	1c43      	adds	r3, r0, #1
 8000e20:	d00a      	beq.n	8000e38 <sbrk_aligned+0x34>
 8000e22:	1cc4      	adds	r4, r0, #3
 8000e24:	f024 0403 	bic.w	r4, r4, #3
 8000e28:	42a0      	cmp	r0, r4
 8000e2a:	d007      	beq.n	8000e3c <sbrk_aligned+0x38>
 8000e2c:	1a21      	subs	r1, r4, r0
 8000e2e:	4628      	mov	r0, r5
 8000e30:	f000 fbb0 	bl	8001594 <_sbrk_r>
 8000e34:	3001      	adds	r0, #1
 8000e36:	d101      	bne.n	8000e3c <sbrk_aligned+0x38>
 8000e38:	f04f 34ff 	mov.w	r4, #4294967295
 8000e3c:	4620      	mov	r0, r4
 8000e3e:	bd70      	pop	{r4, r5, r6, pc}
 8000e40:	20000224 	.word	0x20000224

08000e44 <_malloc_r>:
 8000e44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e48:	1ccd      	adds	r5, r1, #3
 8000e4a:	f025 0503 	bic.w	r5, r5, #3
 8000e4e:	3508      	adds	r5, #8
 8000e50:	2d0c      	cmp	r5, #12
 8000e52:	bf38      	it	cc
 8000e54:	250c      	movcc	r5, #12
 8000e56:	2d00      	cmp	r5, #0
 8000e58:	4607      	mov	r7, r0
 8000e5a:	db01      	blt.n	8000e60 <_malloc_r+0x1c>
 8000e5c:	42a9      	cmp	r1, r5
 8000e5e:	d905      	bls.n	8000e6c <_malloc_r+0x28>
 8000e60:	230c      	movs	r3, #12
 8000e62:	603b      	str	r3, [r7, #0]
 8000e64:	2600      	movs	r6, #0
 8000e66:	4630      	mov	r0, r6
 8000e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e6c:	4e2e      	ldr	r6, [pc, #184]	; (8000f28 <_malloc_r+0xe4>)
 8000e6e:	f000 fc3b 	bl	80016e8 <__malloc_lock>
 8000e72:	6833      	ldr	r3, [r6, #0]
 8000e74:	461c      	mov	r4, r3
 8000e76:	bb34      	cbnz	r4, 8000ec6 <_malloc_r+0x82>
 8000e78:	4629      	mov	r1, r5
 8000e7a:	4638      	mov	r0, r7
 8000e7c:	f7ff ffc2 	bl	8000e04 <sbrk_aligned>
 8000e80:	1c43      	adds	r3, r0, #1
 8000e82:	4604      	mov	r4, r0
 8000e84:	d14d      	bne.n	8000f22 <_malloc_r+0xde>
 8000e86:	6834      	ldr	r4, [r6, #0]
 8000e88:	4626      	mov	r6, r4
 8000e8a:	2e00      	cmp	r6, #0
 8000e8c:	d140      	bne.n	8000f10 <_malloc_r+0xcc>
 8000e8e:	6823      	ldr	r3, [r4, #0]
 8000e90:	4631      	mov	r1, r6
 8000e92:	4638      	mov	r0, r7
 8000e94:	eb04 0803 	add.w	r8, r4, r3
 8000e98:	f000 fb7c 	bl	8001594 <_sbrk_r>
 8000e9c:	4580      	cmp	r8, r0
 8000e9e:	d13a      	bne.n	8000f16 <_malloc_r+0xd2>
 8000ea0:	6821      	ldr	r1, [r4, #0]
 8000ea2:	3503      	adds	r5, #3
 8000ea4:	1a6d      	subs	r5, r5, r1
 8000ea6:	f025 0503 	bic.w	r5, r5, #3
 8000eaa:	3508      	adds	r5, #8
 8000eac:	2d0c      	cmp	r5, #12
 8000eae:	bf38      	it	cc
 8000eb0:	250c      	movcc	r5, #12
 8000eb2:	4629      	mov	r1, r5
 8000eb4:	4638      	mov	r0, r7
 8000eb6:	f7ff ffa5 	bl	8000e04 <sbrk_aligned>
 8000eba:	3001      	adds	r0, #1
 8000ebc:	d02b      	beq.n	8000f16 <_malloc_r+0xd2>
 8000ebe:	6823      	ldr	r3, [r4, #0]
 8000ec0:	442b      	add	r3, r5
 8000ec2:	6023      	str	r3, [r4, #0]
 8000ec4:	e00e      	b.n	8000ee4 <_malloc_r+0xa0>
 8000ec6:	6822      	ldr	r2, [r4, #0]
 8000ec8:	1b52      	subs	r2, r2, r5
 8000eca:	d41e      	bmi.n	8000f0a <_malloc_r+0xc6>
 8000ecc:	2a0b      	cmp	r2, #11
 8000ece:	d916      	bls.n	8000efe <_malloc_r+0xba>
 8000ed0:	1961      	adds	r1, r4, r5
 8000ed2:	42a3      	cmp	r3, r4
 8000ed4:	6025      	str	r5, [r4, #0]
 8000ed6:	bf18      	it	ne
 8000ed8:	6059      	strne	r1, [r3, #4]
 8000eda:	6863      	ldr	r3, [r4, #4]
 8000edc:	bf08      	it	eq
 8000ede:	6031      	streq	r1, [r6, #0]
 8000ee0:	5162      	str	r2, [r4, r5]
 8000ee2:	604b      	str	r3, [r1, #4]
 8000ee4:	4638      	mov	r0, r7
 8000ee6:	f104 060b 	add.w	r6, r4, #11
 8000eea:	f000 fc03 	bl	80016f4 <__malloc_unlock>
 8000eee:	f026 0607 	bic.w	r6, r6, #7
 8000ef2:	1d23      	adds	r3, r4, #4
 8000ef4:	1af2      	subs	r2, r6, r3
 8000ef6:	d0b6      	beq.n	8000e66 <_malloc_r+0x22>
 8000ef8:	1b9b      	subs	r3, r3, r6
 8000efa:	50a3      	str	r3, [r4, r2]
 8000efc:	e7b3      	b.n	8000e66 <_malloc_r+0x22>
 8000efe:	6862      	ldr	r2, [r4, #4]
 8000f00:	42a3      	cmp	r3, r4
 8000f02:	bf0c      	ite	eq
 8000f04:	6032      	streq	r2, [r6, #0]
 8000f06:	605a      	strne	r2, [r3, #4]
 8000f08:	e7ec      	b.n	8000ee4 <_malloc_r+0xa0>
 8000f0a:	4623      	mov	r3, r4
 8000f0c:	6864      	ldr	r4, [r4, #4]
 8000f0e:	e7b2      	b.n	8000e76 <_malloc_r+0x32>
 8000f10:	4634      	mov	r4, r6
 8000f12:	6876      	ldr	r6, [r6, #4]
 8000f14:	e7b9      	b.n	8000e8a <_malloc_r+0x46>
 8000f16:	230c      	movs	r3, #12
 8000f18:	603b      	str	r3, [r7, #0]
 8000f1a:	4638      	mov	r0, r7
 8000f1c:	f000 fbea 	bl	80016f4 <__malloc_unlock>
 8000f20:	e7a1      	b.n	8000e66 <_malloc_r+0x22>
 8000f22:	6025      	str	r5, [r4, #0]
 8000f24:	e7de      	b.n	8000ee4 <_malloc_r+0xa0>
 8000f26:	bf00      	nop
 8000f28:	20000220 	.word	0x20000220

08000f2c <__sfputc_r>:
 8000f2c:	6893      	ldr	r3, [r2, #8]
 8000f2e:	3b01      	subs	r3, #1
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	b410      	push	{r4}
 8000f34:	6093      	str	r3, [r2, #8]
 8000f36:	da07      	bge.n	8000f48 <__sfputc_r+0x1c>
 8000f38:	6994      	ldr	r4, [r2, #24]
 8000f3a:	42a3      	cmp	r3, r4
 8000f3c:	db01      	blt.n	8000f42 <__sfputc_r+0x16>
 8000f3e:	290a      	cmp	r1, #10
 8000f40:	d102      	bne.n	8000f48 <__sfputc_r+0x1c>
 8000f42:	bc10      	pop	{r4}
 8000f44:	f7ff bc38 	b.w	80007b8 <__swbuf_r>
 8000f48:	6813      	ldr	r3, [r2, #0]
 8000f4a:	1c58      	adds	r0, r3, #1
 8000f4c:	6010      	str	r0, [r2, #0]
 8000f4e:	7019      	strb	r1, [r3, #0]
 8000f50:	4608      	mov	r0, r1
 8000f52:	bc10      	pop	{r4}
 8000f54:	4770      	bx	lr

08000f56 <__sfputs_r>:
 8000f56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f58:	4606      	mov	r6, r0
 8000f5a:	460f      	mov	r7, r1
 8000f5c:	4614      	mov	r4, r2
 8000f5e:	18d5      	adds	r5, r2, r3
 8000f60:	42ac      	cmp	r4, r5
 8000f62:	d101      	bne.n	8000f68 <__sfputs_r+0x12>
 8000f64:	2000      	movs	r0, #0
 8000f66:	e007      	b.n	8000f78 <__sfputs_r+0x22>
 8000f68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f6c:	463a      	mov	r2, r7
 8000f6e:	4630      	mov	r0, r6
 8000f70:	f7ff ffdc 	bl	8000f2c <__sfputc_r>
 8000f74:	1c43      	adds	r3, r0, #1
 8000f76:	d1f3      	bne.n	8000f60 <__sfputs_r+0xa>
 8000f78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000f7c <_vfiprintf_r>:
 8000f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f80:	460d      	mov	r5, r1
 8000f82:	b09d      	sub	sp, #116	; 0x74
 8000f84:	4614      	mov	r4, r2
 8000f86:	4698      	mov	r8, r3
 8000f88:	4606      	mov	r6, r0
 8000f8a:	b118      	cbz	r0, 8000f94 <_vfiprintf_r+0x18>
 8000f8c:	6983      	ldr	r3, [r0, #24]
 8000f8e:	b90b      	cbnz	r3, 8000f94 <_vfiprintf_r+0x18>
 8000f90:	f7ff fde8 	bl	8000b64 <__sinit>
 8000f94:	4b89      	ldr	r3, [pc, #548]	; (80011bc <_vfiprintf_r+0x240>)
 8000f96:	429d      	cmp	r5, r3
 8000f98:	d11b      	bne.n	8000fd2 <_vfiprintf_r+0x56>
 8000f9a:	6875      	ldr	r5, [r6, #4]
 8000f9c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f9e:	07d9      	lsls	r1, r3, #31
 8000fa0:	d405      	bmi.n	8000fae <_vfiprintf_r+0x32>
 8000fa2:	89ab      	ldrh	r3, [r5, #12]
 8000fa4:	059a      	lsls	r2, r3, #22
 8000fa6:	d402      	bmi.n	8000fae <_vfiprintf_r+0x32>
 8000fa8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000faa:	f7ff fe79 	bl	8000ca0 <__retarget_lock_acquire_recursive>
 8000fae:	89ab      	ldrh	r3, [r5, #12]
 8000fb0:	071b      	lsls	r3, r3, #28
 8000fb2:	d501      	bpl.n	8000fb8 <_vfiprintf_r+0x3c>
 8000fb4:	692b      	ldr	r3, [r5, #16]
 8000fb6:	b9eb      	cbnz	r3, 8000ff4 <_vfiprintf_r+0x78>
 8000fb8:	4629      	mov	r1, r5
 8000fba:	4630      	mov	r0, r6
 8000fbc:	f7ff fc4e 	bl	800085c <__swsetup_r>
 8000fc0:	b1c0      	cbz	r0, 8000ff4 <_vfiprintf_r+0x78>
 8000fc2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fc4:	07dc      	lsls	r4, r3, #31
 8000fc6:	d50e      	bpl.n	8000fe6 <_vfiprintf_r+0x6a>
 8000fc8:	f04f 30ff 	mov.w	r0, #4294967295
 8000fcc:	b01d      	add	sp, #116	; 0x74
 8000fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000fd2:	4b7b      	ldr	r3, [pc, #492]	; (80011c0 <_vfiprintf_r+0x244>)
 8000fd4:	429d      	cmp	r5, r3
 8000fd6:	d101      	bne.n	8000fdc <_vfiprintf_r+0x60>
 8000fd8:	68b5      	ldr	r5, [r6, #8]
 8000fda:	e7df      	b.n	8000f9c <_vfiprintf_r+0x20>
 8000fdc:	4b79      	ldr	r3, [pc, #484]	; (80011c4 <_vfiprintf_r+0x248>)
 8000fde:	429d      	cmp	r5, r3
 8000fe0:	bf08      	it	eq
 8000fe2:	68f5      	ldreq	r5, [r6, #12]
 8000fe4:	e7da      	b.n	8000f9c <_vfiprintf_r+0x20>
 8000fe6:	89ab      	ldrh	r3, [r5, #12]
 8000fe8:	0598      	lsls	r0, r3, #22
 8000fea:	d4ed      	bmi.n	8000fc8 <_vfiprintf_r+0x4c>
 8000fec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fee:	f7ff fe58 	bl	8000ca2 <__retarget_lock_release_recursive>
 8000ff2:	e7e9      	b.n	8000fc8 <_vfiprintf_r+0x4c>
 8000ff4:	2300      	movs	r3, #0
 8000ff6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ff8:	2320      	movs	r3, #32
 8000ffa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ffe:	f8cd 800c 	str.w	r8, [sp, #12]
 8001002:	2330      	movs	r3, #48	; 0x30
 8001004:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80011c8 <_vfiprintf_r+0x24c>
 8001008:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800100c:	f04f 0901 	mov.w	r9, #1
 8001010:	4623      	mov	r3, r4
 8001012:	469a      	mov	sl, r3
 8001014:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001018:	b10a      	cbz	r2, 800101e <_vfiprintf_r+0xa2>
 800101a:	2a25      	cmp	r2, #37	; 0x25
 800101c:	d1f9      	bne.n	8001012 <_vfiprintf_r+0x96>
 800101e:	ebba 0b04 	subs.w	fp, sl, r4
 8001022:	d00b      	beq.n	800103c <_vfiprintf_r+0xc0>
 8001024:	465b      	mov	r3, fp
 8001026:	4622      	mov	r2, r4
 8001028:	4629      	mov	r1, r5
 800102a:	4630      	mov	r0, r6
 800102c:	f7ff ff93 	bl	8000f56 <__sfputs_r>
 8001030:	3001      	adds	r0, #1
 8001032:	f000 80aa 	beq.w	800118a <_vfiprintf_r+0x20e>
 8001036:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001038:	445a      	add	r2, fp
 800103a:	9209      	str	r2, [sp, #36]	; 0x24
 800103c:	f89a 3000 	ldrb.w	r3, [sl]
 8001040:	2b00      	cmp	r3, #0
 8001042:	f000 80a2 	beq.w	800118a <_vfiprintf_r+0x20e>
 8001046:	2300      	movs	r3, #0
 8001048:	f04f 32ff 	mov.w	r2, #4294967295
 800104c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001050:	f10a 0a01 	add.w	sl, sl, #1
 8001054:	9304      	str	r3, [sp, #16]
 8001056:	9307      	str	r3, [sp, #28]
 8001058:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800105c:	931a      	str	r3, [sp, #104]	; 0x68
 800105e:	4654      	mov	r4, sl
 8001060:	2205      	movs	r2, #5
 8001062:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001066:	4858      	ldr	r0, [pc, #352]	; (80011c8 <_vfiprintf_r+0x24c>)
 8001068:	f7ff f8d2 	bl	8000210 <memchr>
 800106c:	9a04      	ldr	r2, [sp, #16]
 800106e:	b9d8      	cbnz	r0, 80010a8 <_vfiprintf_r+0x12c>
 8001070:	06d1      	lsls	r1, r2, #27
 8001072:	bf44      	itt	mi
 8001074:	2320      	movmi	r3, #32
 8001076:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800107a:	0713      	lsls	r3, r2, #28
 800107c:	bf44      	itt	mi
 800107e:	232b      	movmi	r3, #43	; 0x2b
 8001080:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001084:	f89a 3000 	ldrb.w	r3, [sl]
 8001088:	2b2a      	cmp	r3, #42	; 0x2a
 800108a:	d015      	beq.n	80010b8 <_vfiprintf_r+0x13c>
 800108c:	9a07      	ldr	r2, [sp, #28]
 800108e:	4654      	mov	r4, sl
 8001090:	2000      	movs	r0, #0
 8001092:	f04f 0c0a 	mov.w	ip, #10
 8001096:	4621      	mov	r1, r4
 8001098:	f811 3b01 	ldrb.w	r3, [r1], #1
 800109c:	3b30      	subs	r3, #48	; 0x30
 800109e:	2b09      	cmp	r3, #9
 80010a0:	d94e      	bls.n	8001140 <_vfiprintf_r+0x1c4>
 80010a2:	b1b0      	cbz	r0, 80010d2 <_vfiprintf_r+0x156>
 80010a4:	9207      	str	r2, [sp, #28]
 80010a6:	e014      	b.n	80010d2 <_vfiprintf_r+0x156>
 80010a8:	eba0 0308 	sub.w	r3, r0, r8
 80010ac:	fa09 f303 	lsl.w	r3, r9, r3
 80010b0:	4313      	orrs	r3, r2
 80010b2:	9304      	str	r3, [sp, #16]
 80010b4:	46a2      	mov	sl, r4
 80010b6:	e7d2      	b.n	800105e <_vfiprintf_r+0xe2>
 80010b8:	9b03      	ldr	r3, [sp, #12]
 80010ba:	1d19      	adds	r1, r3, #4
 80010bc:	681b      	ldr	r3, [r3, #0]
 80010be:	9103      	str	r1, [sp, #12]
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	bfbb      	ittet	lt
 80010c4:	425b      	neglt	r3, r3
 80010c6:	f042 0202 	orrlt.w	r2, r2, #2
 80010ca:	9307      	strge	r3, [sp, #28]
 80010cc:	9307      	strlt	r3, [sp, #28]
 80010ce:	bfb8      	it	lt
 80010d0:	9204      	strlt	r2, [sp, #16]
 80010d2:	7823      	ldrb	r3, [r4, #0]
 80010d4:	2b2e      	cmp	r3, #46	; 0x2e
 80010d6:	d10c      	bne.n	80010f2 <_vfiprintf_r+0x176>
 80010d8:	7863      	ldrb	r3, [r4, #1]
 80010da:	2b2a      	cmp	r3, #42	; 0x2a
 80010dc:	d135      	bne.n	800114a <_vfiprintf_r+0x1ce>
 80010de:	9b03      	ldr	r3, [sp, #12]
 80010e0:	1d1a      	adds	r2, r3, #4
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	9203      	str	r2, [sp, #12]
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	bfb8      	it	lt
 80010ea:	f04f 33ff 	movlt.w	r3, #4294967295
 80010ee:	3402      	adds	r4, #2
 80010f0:	9305      	str	r3, [sp, #20]
 80010f2:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 80011cc <_vfiprintf_r+0x250>
 80010f6:	7821      	ldrb	r1, [r4, #0]
 80010f8:	2203      	movs	r2, #3
 80010fa:	4650      	mov	r0, sl
 80010fc:	f7ff f888 	bl	8000210 <memchr>
 8001100:	b140      	cbz	r0, 8001114 <_vfiprintf_r+0x198>
 8001102:	2340      	movs	r3, #64	; 0x40
 8001104:	eba0 000a 	sub.w	r0, r0, sl
 8001108:	fa03 f000 	lsl.w	r0, r3, r0
 800110c:	9b04      	ldr	r3, [sp, #16]
 800110e:	4303      	orrs	r3, r0
 8001110:	3401      	adds	r4, #1
 8001112:	9304      	str	r3, [sp, #16]
 8001114:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001118:	482d      	ldr	r0, [pc, #180]	; (80011d0 <_vfiprintf_r+0x254>)
 800111a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800111e:	2206      	movs	r2, #6
 8001120:	f7ff f876 	bl	8000210 <memchr>
 8001124:	2800      	cmp	r0, #0
 8001126:	d03f      	beq.n	80011a8 <_vfiprintf_r+0x22c>
 8001128:	4b2a      	ldr	r3, [pc, #168]	; (80011d4 <_vfiprintf_r+0x258>)
 800112a:	bb1b      	cbnz	r3, 8001174 <_vfiprintf_r+0x1f8>
 800112c:	9b03      	ldr	r3, [sp, #12]
 800112e:	3307      	adds	r3, #7
 8001130:	f023 0307 	bic.w	r3, r3, #7
 8001134:	3308      	adds	r3, #8
 8001136:	9303      	str	r3, [sp, #12]
 8001138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800113a:	443b      	add	r3, r7
 800113c:	9309      	str	r3, [sp, #36]	; 0x24
 800113e:	e767      	b.n	8001010 <_vfiprintf_r+0x94>
 8001140:	fb0c 3202 	mla	r2, ip, r2, r3
 8001144:	460c      	mov	r4, r1
 8001146:	2001      	movs	r0, #1
 8001148:	e7a5      	b.n	8001096 <_vfiprintf_r+0x11a>
 800114a:	2300      	movs	r3, #0
 800114c:	3401      	adds	r4, #1
 800114e:	9305      	str	r3, [sp, #20]
 8001150:	4619      	mov	r1, r3
 8001152:	f04f 0c0a 	mov.w	ip, #10
 8001156:	4620      	mov	r0, r4
 8001158:	f810 2b01 	ldrb.w	r2, [r0], #1
 800115c:	3a30      	subs	r2, #48	; 0x30
 800115e:	2a09      	cmp	r2, #9
 8001160:	d903      	bls.n	800116a <_vfiprintf_r+0x1ee>
 8001162:	2b00      	cmp	r3, #0
 8001164:	d0c5      	beq.n	80010f2 <_vfiprintf_r+0x176>
 8001166:	9105      	str	r1, [sp, #20]
 8001168:	e7c3      	b.n	80010f2 <_vfiprintf_r+0x176>
 800116a:	fb0c 2101 	mla	r1, ip, r1, r2
 800116e:	4604      	mov	r4, r0
 8001170:	2301      	movs	r3, #1
 8001172:	e7f0      	b.n	8001156 <_vfiprintf_r+0x1da>
 8001174:	ab03      	add	r3, sp, #12
 8001176:	9300      	str	r3, [sp, #0]
 8001178:	462a      	mov	r2, r5
 800117a:	4b17      	ldr	r3, [pc, #92]	; (80011d8 <_vfiprintf_r+0x25c>)
 800117c:	a904      	add	r1, sp, #16
 800117e:	4630      	mov	r0, r6
 8001180:	f3af 8000 	nop.w
 8001184:	4607      	mov	r7, r0
 8001186:	1c78      	adds	r0, r7, #1
 8001188:	d1d6      	bne.n	8001138 <_vfiprintf_r+0x1bc>
 800118a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800118c:	07d9      	lsls	r1, r3, #31
 800118e:	d405      	bmi.n	800119c <_vfiprintf_r+0x220>
 8001190:	89ab      	ldrh	r3, [r5, #12]
 8001192:	059a      	lsls	r2, r3, #22
 8001194:	d402      	bmi.n	800119c <_vfiprintf_r+0x220>
 8001196:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001198:	f7ff fd83 	bl	8000ca2 <__retarget_lock_release_recursive>
 800119c:	89ab      	ldrh	r3, [r5, #12]
 800119e:	065b      	lsls	r3, r3, #25
 80011a0:	f53f af12 	bmi.w	8000fc8 <_vfiprintf_r+0x4c>
 80011a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80011a6:	e711      	b.n	8000fcc <_vfiprintf_r+0x50>
 80011a8:	ab03      	add	r3, sp, #12
 80011aa:	9300      	str	r3, [sp, #0]
 80011ac:	462a      	mov	r2, r5
 80011ae:	4b0a      	ldr	r3, [pc, #40]	; (80011d8 <_vfiprintf_r+0x25c>)
 80011b0:	a904      	add	r1, sp, #16
 80011b2:	4630      	mov	r0, r6
 80011b4:	f000 f880 	bl	80012b8 <_printf_i>
 80011b8:	e7e4      	b.n	8001184 <_vfiprintf_r+0x208>
 80011ba:	bf00      	nop
 80011bc:	08001838 	.word	0x08001838
 80011c0:	08001858 	.word	0x08001858
 80011c4:	08001818 	.word	0x08001818
 80011c8:	08001878 	.word	0x08001878
 80011cc:	0800187e 	.word	0x0800187e
 80011d0:	08001882 	.word	0x08001882
 80011d4:	00000000 	.word	0x00000000
 80011d8:	08000f57 	.word	0x08000f57

080011dc <_printf_common>:
 80011dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80011e0:	4616      	mov	r6, r2
 80011e2:	4699      	mov	r9, r3
 80011e4:	688a      	ldr	r2, [r1, #8]
 80011e6:	690b      	ldr	r3, [r1, #16]
 80011e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80011ec:	4293      	cmp	r3, r2
 80011ee:	bfb8      	it	lt
 80011f0:	4613      	movlt	r3, r2
 80011f2:	6033      	str	r3, [r6, #0]
 80011f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80011f8:	4607      	mov	r7, r0
 80011fa:	460c      	mov	r4, r1
 80011fc:	b10a      	cbz	r2, 8001202 <_printf_common+0x26>
 80011fe:	3301      	adds	r3, #1
 8001200:	6033      	str	r3, [r6, #0]
 8001202:	6823      	ldr	r3, [r4, #0]
 8001204:	0699      	lsls	r1, r3, #26
 8001206:	bf42      	ittt	mi
 8001208:	6833      	ldrmi	r3, [r6, #0]
 800120a:	3302      	addmi	r3, #2
 800120c:	6033      	strmi	r3, [r6, #0]
 800120e:	6825      	ldr	r5, [r4, #0]
 8001210:	f015 0506 	ands.w	r5, r5, #6
 8001214:	d106      	bne.n	8001224 <_printf_common+0x48>
 8001216:	f104 0a19 	add.w	sl, r4, #25
 800121a:	68e3      	ldr	r3, [r4, #12]
 800121c:	6832      	ldr	r2, [r6, #0]
 800121e:	1a9b      	subs	r3, r3, r2
 8001220:	42ab      	cmp	r3, r5
 8001222:	dc26      	bgt.n	8001272 <_printf_common+0x96>
 8001224:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001228:	1e13      	subs	r3, r2, #0
 800122a:	6822      	ldr	r2, [r4, #0]
 800122c:	bf18      	it	ne
 800122e:	2301      	movne	r3, #1
 8001230:	0692      	lsls	r2, r2, #26
 8001232:	d42b      	bmi.n	800128c <_printf_common+0xb0>
 8001234:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001238:	4649      	mov	r1, r9
 800123a:	4638      	mov	r0, r7
 800123c:	47c0      	blx	r8
 800123e:	3001      	adds	r0, #1
 8001240:	d01e      	beq.n	8001280 <_printf_common+0xa4>
 8001242:	6823      	ldr	r3, [r4, #0]
 8001244:	68e5      	ldr	r5, [r4, #12]
 8001246:	6832      	ldr	r2, [r6, #0]
 8001248:	f003 0306 	and.w	r3, r3, #6
 800124c:	2b04      	cmp	r3, #4
 800124e:	bf08      	it	eq
 8001250:	1aad      	subeq	r5, r5, r2
 8001252:	68a3      	ldr	r3, [r4, #8]
 8001254:	6922      	ldr	r2, [r4, #16]
 8001256:	bf0c      	ite	eq
 8001258:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800125c:	2500      	movne	r5, #0
 800125e:	4293      	cmp	r3, r2
 8001260:	bfc4      	itt	gt
 8001262:	1a9b      	subgt	r3, r3, r2
 8001264:	18ed      	addgt	r5, r5, r3
 8001266:	2600      	movs	r6, #0
 8001268:	341a      	adds	r4, #26
 800126a:	42b5      	cmp	r5, r6
 800126c:	d11a      	bne.n	80012a4 <_printf_common+0xc8>
 800126e:	2000      	movs	r0, #0
 8001270:	e008      	b.n	8001284 <_printf_common+0xa8>
 8001272:	2301      	movs	r3, #1
 8001274:	4652      	mov	r2, sl
 8001276:	4649      	mov	r1, r9
 8001278:	4638      	mov	r0, r7
 800127a:	47c0      	blx	r8
 800127c:	3001      	adds	r0, #1
 800127e:	d103      	bne.n	8001288 <_printf_common+0xac>
 8001280:	f04f 30ff 	mov.w	r0, #4294967295
 8001284:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001288:	3501      	adds	r5, #1
 800128a:	e7c6      	b.n	800121a <_printf_common+0x3e>
 800128c:	18e1      	adds	r1, r4, r3
 800128e:	1c5a      	adds	r2, r3, #1
 8001290:	2030      	movs	r0, #48	; 0x30
 8001292:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001296:	4422      	add	r2, r4
 8001298:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800129c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80012a0:	3302      	adds	r3, #2
 80012a2:	e7c7      	b.n	8001234 <_printf_common+0x58>
 80012a4:	2301      	movs	r3, #1
 80012a6:	4622      	mov	r2, r4
 80012a8:	4649      	mov	r1, r9
 80012aa:	4638      	mov	r0, r7
 80012ac:	47c0      	blx	r8
 80012ae:	3001      	adds	r0, #1
 80012b0:	d0e6      	beq.n	8001280 <_printf_common+0xa4>
 80012b2:	3601      	adds	r6, #1
 80012b4:	e7d9      	b.n	800126a <_printf_common+0x8e>
	...

080012b8 <_printf_i>:
 80012b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80012bc:	7e0f      	ldrb	r7, [r1, #24]
 80012be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80012c0:	2f78      	cmp	r7, #120	; 0x78
 80012c2:	4691      	mov	r9, r2
 80012c4:	4680      	mov	r8, r0
 80012c6:	460c      	mov	r4, r1
 80012c8:	469a      	mov	sl, r3
 80012ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80012ce:	d807      	bhi.n	80012e0 <_printf_i+0x28>
 80012d0:	2f62      	cmp	r7, #98	; 0x62
 80012d2:	d80a      	bhi.n	80012ea <_printf_i+0x32>
 80012d4:	2f00      	cmp	r7, #0
 80012d6:	f000 80d8 	beq.w	800148a <_printf_i+0x1d2>
 80012da:	2f58      	cmp	r7, #88	; 0x58
 80012dc:	f000 80a3 	beq.w	8001426 <_printf_i+0x16e>
 80012e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80012e8:	e03a      	b.n	8001360 <_printf_i+0xa8>
 80012ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80012ee:	2b15      	cmp	r3, #21
 80012f0:	d8f6      	bhi.n	80012e0 <_printf_i+0x28>
 80012f2:	a101      	add	r1, pc, #4	; (adr r1, 80012f8 <_printf_i+0x40>)
 80012f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80012f8:	08001351 	.word	0x08001351
 80012fc:	08001365 	.word	0x08001365
 8001300:	080012e1 	.word	0x080012e1
 8001304:	080012e1 	.word	0x080012e1
 8001308:	080012e1 	.word	0x080012e1
 800130c:	080012e1 	.word	0x080012e1
 8001310:	08001365 	.word	0x08001365
 8001314:	080012e1 	.word	0x080012e1
 8001318:	080012e1 	.word	0x080012e1
 800131c:	080012e1 	.word	0x080012e1
 8001320:	080012e1 	.word	0x080012e1
 8001324:	08001471 	.word	0x08001471
 8001328:	08001395 	.word	0x08001395
 800132c:	08001453 	.word	0x08001453
 8001330:	080012e1 	.word	0x080012e1
 8001334:	080012e1 	.word	0x080012e1
 8001338:	08001493 	.word	0x08001493
 800133c:	080012e1 	.word	0x080012e1
 8001340:	08001395 	.word	0x08001395
 8001344:	080012e1 	.word	0x080012e1
 8001348:	080012e1 	.word	0x080012e1
 800134c:	0800145b 	.word	0x0800145b
 8001350:	682b      	ldr	r3, [r5, #0]
 8001352:	1d1a      	adds	r2, r3, #4
 8001354:	681b      	ldr	r3, [r3, #0]
 8001356:	602a      	str	r2, [r5, #0]
 8001358:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800135c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001360:	2301      	movs	r3, #1
 8001362:	e0a3      	b.n	80014ac <_printf_i+0x1f4>
 8001364:	6820      	ldr	r0, [r4, #0]
 8001366:	6829      	ldr	r1, [r5, #0]
 8001368:	0606      	lsls	r6, r0, #24
 800136a:	f101 0304 	add.w	r3, r1, #4
 800136e:	d50a      	bpl.n	8001386 <_printf_i+0xce>
 8001370:	680e      	ldr	r6, [r1, #0]
 8001372:	602b      	str	r3, [r5, #0]
 8001374:	2e00      	cmp	r6, #0
 8001376:	da03      	bge.n	8001380 <_printf_i+0xc8>
 8001378:	232d      	movs	r3, #45	; 0x2d
 800137a:	4276      	negs	r6, r6
 800137c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001380:	485e      	ldr	r0, [pc, #376]	; (80014fc <_printf_i+0x244>)
 8001382:	230a      	movs	r3, #10
 8001384:	e019      	b.n	80013ba <_printf_i+0x102>
 8001386:	680e      	ldr	r6, [r1, #0]
 8001388:	602b      	str	r3, [r5, #0]
 800138a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800138e:	bf18      	it	ne
 8001390:	b236      	sxthne	r6, r6
 8001392:	e7ef      	b.n	8001374 <_printf_i+0xbc>
 8001394:	682b      	ldr	r3, [r5, #0]
 8001396:	6820      	ldr	r0, [r4, #0]
 8001398:	1d19      	adds	r1, r3, #4
 800139a:	6029      	str	r1, [r5, #0]
 800139c:	0601      	lsls	r1, r0, #24
 800139e:	d501      	bpl.n	80013a4 <_printf_i+0xec>
 80013a0:	681e      	ldr	r6, [r3, #0]
 80013a2:	e002      	b.n	80013aa <_printf_i+0xf2>
 80013a4:	0646      	lsls	r6, r0, #25
 80013a6:	d5fb      	bpl.n	80013a0 <_printf_i+0xe8>
 80013a8:	881e      	ldrh	r6, [r3, #0]
 80013aa:	4854      	ldr	r0, [pc, #336]	; (80014fc <_printf_i+0x244>)
 80013ac:	2f6f      	cmp	r7, #111	; 0x6f
 80013ae:	bf0c      	ite	eq
 80013b0:	2308      	moveq	r3, #8
 80013b2:	230a      	movne	r3, #10
 80013b4:	2100      	movs	r1, #0
 80013b6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80013ba:	6865      	ldr	r5, [r4, #4]
 80013bc:	60a5      	str	r5, [r4, #8]
 80013be:	2d00      	cmp	r5, #0
 80013c0:	bfa2      	ittt	ge
 80013c2:	6821      	ldrge	r1, [r4, #0]
 80013c4:	f021 0104 	bicge.w	r1, r1, #4
 80013c8:	6021      	strge	r1, [r4, #0]
 80013ca:	b90e      	cbnz	r6, 80013d0 <_printf_i+0x118>
 80013cc:	2d00      	cmp	r5, #0
 80013ce:	d04d      	beq.n	800146c <_printf_i+0x1b4>
 80013d0:	4615      	mov	r5, r2
 80013d2:	fbb6 f1f3 	udiv	r1, r6, r3
 80013d6:	fb03 6711 	mls	r7, r3, r1, r6
 80013da:	5dc7      	ldrb	r7, [r0, r7]
 80013dc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80013e0:	4637      	mov	r7, r6
 80013e2:	42bb      	cmp	r3, r7
 80013e4:	460e      	mov	r6, r1
 80013e6:	d9f4      	bls.n	80013d2 <_printf_i+0x11a>
 80013e8:	2b08      	cmp	r3, #8
 80013ea:	d10b      	bne.n	8001404 <_printf_i+0x14c>
 80013ec:	6823      	ldr	r3, [r4, #0]
 80013ee:	07de      	lsls	r6, r3, #31
 80013f0:	d508      	bpl.n	8001404 <_printf_i+0x14c>
 80013f2:	6923      	ldr	r3, [r4, #16]
 80013f4:	6861      	ldr	r1, [r4, #4]
 80013f6:	4299      	cmp	r1, r3
 80013f8:	bfde      	ittt	le
 80013fa:	2330      	movle	r3, #48	; 0x30
 80013fc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001400:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001404:	1b52      	subs	r2, r2, r5
 8001406:	6122      	str	r2, [r4, #16]
 8001408:	f8cd a000 	str.w	sl, [sp]
 800140c:	464b      	mov	r3, r9
 800140e:	aa03      	add	r2, sp, #12
 8001410:	4621      	mov	r1, r4
 8001412:	4640      	mov	r0, r8
 8001414:	f7ff fee2 	bl	80011dc <_printf_common>
 8001418:	3001      	adds	r0, #1
 800141a:	d14c      	bne.n	80014b6 <_printf_i+0x1fe>
 800141c:	f04f 30ff 	mov.w	r0, #4294967295
 8001420:	b004      	add	sp, #16
 8001422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001426:	4835      	ldr	r0, [pc, #212]	; (80014fc <_printf_i+0x244>)
 8001428:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800142c:	6829      	ldr	r1, [r5, #0]
 800142e:	6823      	ldr	r3, [r4, #0]
 8001430:	f851 6b04 	ldr.w	r6, [r1], #4
 8001434:	6029      	str	r1, [r5, #0]
 8001436:	061d      	lsls	r5, r3, #24
 8001438:	d514      	bpl.n	8001464 <_printf_i+0x1ac>
 800143a:	07df      	lsls	r7, r3, #31
 800143c:	bf44      	itt	mi
 800143e:	f043 0320 	orrmi.w	r3, r3, #32
 8001442:	6023      	strmi	r3, [r4, #0]
 8001444:	b91e      	cbnz	r6, 800144e <_printf_i+0x196>
 8001446:	6823      	ldr	r3, [r4, #0]
 8001448:	f023 0320 	bic.w	r3, r3, #32
 800144c:	6023      	str	r3, [r4, #0]
 800144e:	2310      	movs	r3, #16
 8001450:	e7b0      	b.n	80013b4 <_printf_i+0xfc>
 8001452:	6823      	ldr	r3, [r4, #0]
 8001454:	f043 0320 	orr.w	r3, r3, #32
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	2378      	movs	r3, #120	; 0x78
 800145c:	4828      	ldr	r0, [pc, #160]	; (8001500 <_printf_i+0x248>)
 800145e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001462:	e7e3      	b.n	800142c <_printf_i+0x174>
 8001464:	0659      	lsls	r1, r3, #25
 8001466:	bf48      	it	mi
 8001468:	b2b6      	uxthmi	r6, r6
 800146a:	e7e6      	b.n	800143a <_printf_i+0x182>
 800146c:	4615      	mov	r5, r2
 800146e:	e7bb      	b.n	80013e8 <_printf_i+0x130>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	6826      	ldr	r6, [r4, #0]
 8001474:	6961      	ldr	r1, [r4, #20]
 8001476:	1d18      	adds	r0, r3, #4
 8001478:	6028      	str	r0, [r5, #0]
 800147a:	0635      	lsls	r5, r6, #24
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	d501      	bpl.n	8001484 <_printf_i+0x1cc>
 8001480:	6019      	str	r1, [r3, #0]
 8001482:	e002      	b.n	800148a <_printf_i+0x1d2>
 8001484:	0670      	lsls	r0, r6, #25
 8001486:	d5fb      	bpl.n	8001480 <_printf_i+0x1c8>
 8001488:	8019      	strh	r1, [r3, #0]
 800148a:	2300      	movs	r3, #0
 800148c:	6123      	str	r3, [r4, #16]
 800148e:	4615      	mov	r5, r2
 8001490:	e7ba      	b.n	8001408 <_printf_i+0x150>
 8001492:	682b      	ldr	r3, [r5, #0]
 8001494:	1d1a      	adds	r2, r3, #4
 8001496:	602a      	str	r2, [r5, #0]
 8001498:	681d      	ldr	r5, [r3, #0]
 800149a:	6862      	ldr	r2, [r4, #4]
 800149c:	2100      	movs	r1, #0
 800149e:	4628      	mov	r0, r5
 80014a0:	f7fe feb6 	bl	8000210 <memchr>
 80014a4:	b108      	cbz	r0, 80014aa <_printf_i+0x1f2>
 80014a6:	1b40      	subs	r0, r0, r5
 80014a8:	6060      	str	r0, [r4, #4]
 80014aa:	6863      	ldr	r3, [r4, #4]
 80014ac:	6123      	str	r3, [r4, #16]
 80014ae:	2300      	movs	r3, #0
 80014b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80014b4:	e7a8      	b.n	8001408 <_printf_i+0x150>
 80014b6:	6923      	ldr	r3, [r4, #16]
 80014b8:	462a      	mov	r2, r5
 80014ba:	4649      	mov	r1, r9
 80014bc:	4640      	mov	r0, r8
 80014be:	47d0      	blx	sl
 80014c0:	3001      	adds	r0, #1
 80014c2:	d0ab      	beq.n	800141c <_printf_i+0x164>
 80014c4:	6823      	ldr	r3, [r4, #0]
 80014c6:	079b      	lsls	r3, r3, #30
 80014c8:	d413      	bmi.n	80014f2 <_printf_i+0x23a>
 80014ca:	68e0      	ldr	r0, [r4, #12]
 80014cc:	9b03      	ldr	r3, [sp, #12]
 80014ce:	4298      	cmp	r0, r3
 80014d0:	bfb8      	it	lt
 80014d2:	4618      	movlt	r0, r3
 80014d4:	e7a4      	b.n	8001420 <_printf_i+0x168>
 80014d6:	2301      	movs	r3, #1
 80014d8:	4632      	mov	r2, r6
 80014da:	4649      	mov	r1, r9
 80014dc:	4640      	mov	r0, r8
 80014de:	47d0      	blx	sl
 80014e0:	3001      	adds	r0, #1
 80014e2:	d09b      	beq.n	800141c <_printf_i+0x164>
 80014e4:	3501      	adds	r5, #1
 80014e6:	68e3      	ldr	r3, [r4, #12]
 80014e8:	9903      	ldr	r1, [sp, #12]
 80014ea:	1a5b      	subs	r3, r3, r1
 80014ec:	42ab      	cmp	r3, r5
 80014ee:	dcf2      	bgt.n	80014d6 <_printf_i+0x21e>
 80014f0:	e7eb      	b.n	80014ca <_printf_i+0x212>
 80014f2:	2500      	movs	r5, #0
 80014f4:	f104 0619 	add.w	r6, r4, #25
 80014f8:	e7f5      	b.n	80014e6 <_printf_i+0x22e>
 80014fa:	bf00      	nop
 80014fc:	08001889 	.word	0x08001889
 8001500:	0800189a 	.word	0x0800189a

08001504 <_putc_r>:
 8001504:	b570      	push	{r4, r5, r6, lr}
 8001506:	460d      	mov	r5, r1
 8001508:	4614      	mov	r4, r2
 800150a:	4606      	mov	r6, r0
 800150c:	b118      	cbz	r0, 8001516 <_putc_r+0x12>
 800150e:	6983      	ldr	r3, [r0, #24]
 8001510:	b90b      	cbnz	r3, 8001516 <_putc_r+0x12>
 8001512:	f7ff fb27 	bl	8000b64 <__sinit>
 8001516:	4b1c      	ldr	r3, [pc, #112]	; (8001588 <_putc_r+0x84>)
 8001518:	429c      	cmp	r4, r3
 800151a:	d124      	bne.n	8001566 <_putc_r+0x62>
 800151c:	6874      	ldr	r4, [r6, #4]
 800151e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001520:	07d8      	lsls	r0, r3, #31
 8001522:	d405      	bmi.n	8001530 <_putc_r+0x2c>
 8001524:	89a3      	ldrh	r3, [r4, #12]
 8001526:	0599      	lsls	r1, r3, #22
 8001528:	d402      	bmi.n	8001530 <_putc_r+0x2c>
 800152a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800152c:	f7ff fbb8 	bl	8000ca0 <__retarget_lock_acquire_recursive>
 8001530:	68a3      	ldr	r3, [r4, #8]
 8001532:	3b01      	subs	r3, #1
 8001534:	2b00      	cmp	r3, #0
 8001536:	60a3      	str	r3, [r4, #8]
 8001538:	da05      	bge.n	8001546 <_putc_r+0x42>
 800153a:	69a2      	ldr	r2, [r4, #24]
 800153c:	4293      	cmp	r3, r2
 800153e:	db1c      	blt.n	800157a <_putc_r+0x76>
 8001540:	b2eb      	uxtb	r3, r5
 8001542:	2b0a      	cmp	r3, #10
 8001544:	d019      	beq.n	800157a <_putc_r+0x76>
 8001546:	6823      	ldr	r3, [r4, #0]
 8001548:	1c5a      	adds	r2, r3, #1
 800154a:	6022      	str	r2, [r4, #0]
 800154c:	701d      	strb	r5, [r3, #0]
 800154e:	b2ed      	uxtb	r5, r5
 8001550:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001552:	07da      	lsls	r2, r3, #31
 8001554:	d405      	bmi.n	8001562 <_putc_r+0x5e>
 8001556:	89a3      	ldrh	r3, [r4, #12]
 8001558:	059b      	lsls	r3, r3, #22
 800155a:	d402      	bmi.n	8001562 <_putc_r+0x5e>
 800155c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800155e:	f7ff fba0 	bl	8000ca2 <__retarget_lock_release_recursive>
 8001562:	4628      	mov	r0, r5
 8001564:	bd70      	pop	{r4, r5, r6, pc}
 8001566:	4b09      	ldr	r3, [pc, #36]	; (800158c <_putc_r+0x88>)
 8001568:	429c      	cmp	r4, r3
 800156a:	d101      	bne.n	8001570 <_putc_r+0x6c>
 800156c:	68b4      	ldr	r4, [r6, #8]
 800156e:	e7d6      	b.n	800151e <_putc_r+0x1a>
 8001570:	4b07      	ldr	r3, [pc, #28]	; (8001590 <_putc_r+0x8c>)
 8001572:	429c      	cmp	r4, r3
 8001574:	bf08      	it	eq
 8001576:	68f4      	ldreq	r4, [r6, #12]
 8001578:	e7d1      	b.n	800151e <_putc_r+0x1a>
 800157a:	4629      	mov	r1, r5
 800157c:	4622      	mov	r2, r4
 800157e:	4630      	mov	r0, r6
 8001580:	f7ff f91a 	bl	80007b8 <__swbuf_r>
 8001584:	4605      	mov	r5, r0
 8001586:	e7e3      	b.n	8001550 <_putc_r+0x4c>
 8001588:	08001838 	.word	0x08001838
 800158c:	08001858 	.word	0x08001858
 8001590:	08001818 	.word	0x08001818

08001594 <_sbrk_r>:
 8001594:	b538      	push	{r3, r4, r5, lr}
 8001596:	4d06      	ldr	r5, [pc, #24]	; (80015b0 <_sbrk_r+0x1c>)
 8001598:	2300      	movs	r3, #0
 800159a:	4604      	mov	r4, r0
 800159c:	4608      	mov	r0, r1
 800159e:	602b      	str	r3, [r5, #0]
 80015a0:	f7fe ffd6 	bl	8000550 <_sbrk>
 80015a4:	1c43      	adds	r3, r0, #1
 80015a6:	d102      	bne.n	80015ae <_sbrk_r+0x1a>
 80015a8:	682b      	ldr	r3, [r5, #0]
 80015aa:	b103      	cbz	r3, 80015ae <_sbrk_r+0x1a>
 80015ac:	6023      	str	r3, [r4, #0]
 80015ae:	bd38      	pop	{r3, r4, r5, pc}
 80015b0:	20000228 	.word	0x20000228

080015b4 <__sread>:
 80015b4:	b510      	push	{r4, lr}
 80015b6:	460c      	mov	r4, r1
 80015b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015bc:	f000 f8a0 	bl	8001700 <_read_r>
 80015c0:	2800      	cmp	r0, #0
 80015c2:	bfab      	itete	ge
 80015c4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80015c6:	89a3      	ldrhlt	r3, [r4, #12]
 80015c8:	181b      	addge	r3, r3, r0
 80015ca:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80015ce:	bfac      	ite	ge
 80015d0:	6563      	strge	r3, [r4, #84]	; 0x54
 80015d2:	81a3      	strhlt	r3, [r4, #12]
 80015d4:	bd10      	pop	{r4, pc}

080015d6 <__swrite>:
 80015d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80015da:	461f      	mov	r7, r3
 80015dc:	898b      	ldrh	r3, [r1, #12]
 80015de:	05db      	lsls	r3, r3, #23
 80015e0:	4605      	mov	r5, r0
 80015e2:	460c      	mov	r4, r1
 80015e4:	4616      	mov	r6, r2
 80015e6:	d505      	bpl.n	80015f4 <__swrite+0x1e>
 80015e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015ec:	2302      	movs	r3, #2
 80015ee:	2200      	movs	r2, #0
 80015f0:	f000 f868 	bl	80016c4 <_lseek_r>
 80015f4:	89a3      	ldrh	r3, [r4, #12]
 80015f6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80015fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80015fe:	81a3      	strh	r3, [r4, #12]
 8001600:	4632      	mov	r2, r6
 8001602:	463b      	mov	r3, r7
 8001604:	4628      	mov	r0, r5
 8001606:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800160a:	f000 b817 	b.w	800163c <_write_r>

0800160e <__sseek>:
 800160e:	b510      	push	{r4, lr}
 8001610:	460c      	mov	r4, r1
 8001612:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001616:	f000 f855 	bl	80016c4 <_lseek_r>
 800161a:	1c43      	adds	r3, r0, #1
 800161c:	89a3      	ldrh	r3, [r4, #12]
 800161e:	bf15      	itete	ne
 8001620:	6560      	strne	r0, [r4, #84]	; 0x54
 8001622:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001626:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800162a:	81a3      	strheq	r3, [r4, #12]
 800162c:	bf18      	it	ne
 800162e:	81a3      	strhne	r3, [r4, #12]
 8001630:	bd10      	pop	{r4, pc}

08001632 <__sclose>:
 8001632:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001636:	f000 b813 	b.w	8001660 <_close_r>
	...

0800163c <_write_r>:
 800163c:	b538      	push	{r3, r4, r5, lr}
 800163e:	4d07      	ldr	r5, [pc, #28]	; (800165c <_write_r+0x20>)
 8001640:	4604      	mov	r4, r0
 8001642:	4608      	mov	r0, r1
 8001644:	4611      	mov	r1, r2
 8001646:	2200      	movs	r2, #0
 8001648:	602a      	str	r2, [r5, #0]
 800164a:	461a      	mov	r2, r3
 800164c:	f7fe ff33 	bl	80004b6 <_write>
 8001650:	1c43      	adds	r3, r0, #1
 8001652:	d102      	bne.n	800165a <_write_r+0x1e>
 8001654:	682b      	ldr	r3, [r5, #0]
 8001656:	b103      	cbz	r3, 800165a <_write_r+0x1e>
 8001658:	6023      	str	r3, [r4, #0]
 800165a:	bd38      	pop	{r3, r4, r5, pc}
 800165c:	20000228 	.word	0x20000228

08001660 <_close_r>:
 8001660:	b538      	push	{r3, r4, r5, lr}
 8001662:	4d06      	ldr	r5, [pc, #24]	; (800167c <_close_r+0x1c>)
 8001664:	2300      	movs	r3, #0
 8001666:	4604      	mov	r4, r0
 8001668:	4608      	mov	r0, r1
 800166a:	602b      	str	r3, [r5, #0]
 800166c:	f7fe ff3f 	bl	80004ee <_close>
 8001670:	1c43      	adds	r3, r0, #1
 8001672:	d102      	bne.n	800167a <_close_r+0x1a>
 8001674:	682b      	ldr	r3, [r5, #0]
 8001676:	b103      	cbz	r3, 800167a <_close_r+0x1a>
 8001678:	6023      	str	r3, [r4, #0]
 800167a:	bd38      	pop	{r3, r4, r5, pc}
 800167c:	20000228 	.word	0x20000228

08001680 <_fstat_r>:
 8001680:	b538      	push	{r3, r4, r5, lr}
 8001682:	4d07      	ldr	r5, [pc, #28]	; (80016a0 <_fstat_r+0x20>)
 8001684:	2300      	movs	r3, #0
 8001686:	4604      	mov	r4, r0
 8001688:	4608      	mov	r0, r1
 800168a:	4611      	mov	r1, r2
 800168c:	602b      	str	r3, [r5, #0]
 800168e:	f7fe ff39 	bl	8000504 <_fstat>
 8001692:	1c43      	adds	r3, r0, #1
 8001694:	d102      	bne.n	800169c <_fstat_r+0x1c>
 8001696:	682b      	ldr	r3, [r5, #0]
 8001698:	b103      	cbz	r3, 800169c <_fstat_r+0x1c>
 800169a:	6023      	str	r3, [r4, #0]
 800169c:	bd38      	pop	{r3, r4, r5, pc}
 800169e:	bf00      	nop
 80016a0:	20000228 	.word	0x20000228

080016a4 <_isatty_r>:
 80016a4:	b538      	push	{r3, r4, r5, lr}
 80016a6:	4d06      	ldr	r5, [pc, #24]	; (80016c0 <_isatty_r+0x1c>)
 80016a8:	2300      	movs	r3, #0
 80016aa:	4604      	mov	r4, r0
 80016ac:	4608      	mov	r0, r1
 80016ae:	602b      	str	r3, [r5, #0]
 80016b0:	f7fe ff37 	bl	8000522 <_isatty>
 80016b4:	1c43      	adds	r3, r0, #1
 80016b6:	d102      	bne.n	80016be <_isatty_r+0x1a>
 80016b8:	682b      	ldr	r3, [r5, #0]
 80016ba:	b103      	cbz	r3, 80016be <_isatty_r+0x1a>
 80016bc:	6023      	str	r3, [r4, #0]
 80016be:	bd38      	pop	{r3, r4, r5, pc}
 80016c0:	20000228 	.word	0x20000228

080016c4 <_lseek_r>:
 80016c4:	b538      	push	{r3, r4, r5, lr}
 80016c6:	4d07      	ldr	r5, [pc, #28]	; (80016e4 <_lseek_r+0x20>)
 80016c8:	4604      	mov	r4, r0
 80016ca:	4608      	mov	r0, r1
 80016cc:	4611      	mov	r1, r2
 80016ce:	2200      	movs	r2, #0
 80016d0:	602a      	str	r2, [r5, #0]
 80016d2:	461a      	mov	r2, r3
 80016d4:	f7fe ff2f 	bl	8000536 <_lseek>
 80016d8:	1c43      	adds	r3, r0, #1
 80016da:	d102      	bne.n	80016e2 <_lseek_r+0x1e>
 80016dc:	682b      	ldr	r3, [r5, #0]
 80016de:	b103      	cbz	r3, 80016e2 <_lseek_r+0x1e>
 80016e0:	6023      	str	r3, [r4, #0]
 80016e2:	bd38      	pop	{r3, r4, r5, pc}
 80016e4:	20000228 	.word	0x20000228

080016e8 <__malloc_lock>:
 80016e8:	4801      	ldr	r0, [pc, #4]	; (80016f0 <__malloc_lock+0x8>)
 80016ea:	f7ff bad9 	b.w	8000ca0 <__retarget_lock_acquire_recursive>
 80016ee:	bf00      	nop
 80016f0:	2000021c 	.word	0x2000021c

080016f4 <__malloc_unlock>:
 80016f4:	4801      	ldr	r0, [pc, #4]	; (80016fc <__malloc_unlock+0x8>)
 80016f6:	f7ff bad4 	b.w	8000ca2 <__retarget_lock_release_recursive>
 80016fa:	bf00      	nop
 80016fc:	2000021c 	.word	0x2000021c

08001700 <_read_r>:
 8001700:	b538      	push	{r3, r4, r5, lr}
 8001702:	4d07      	ldr	r5, [pc, #28]	; (8001720 <_read_r+0x20>)
 8001704:	4604      	mov	r4, r0
 8001706:	4608      	mov	r0, r1
 8001708:	4611      	mov	r1, r2
 800170a:	2200      	movs	r2, #0
 800170c:	602a      	str	r2, [r5, #0]
 800170e:	461a      	mov	r2, r3
 8001710:	f7fe feb4 	bl	800047c <_read>
 8001714:	1c43      	adds	r3, r0, #1
 8001716:	d102      	bne.n	800171e <_read_r+0x1e>
 8001718:	682b      	ldr	r3, [r5, #0]
 800171a:	b103      	cbz	r3, 800171e <_read_r+0x1e>
 800171c:	6023      	str	r3, [r4, #0]
 800171e:	bd38      	pop	{r3, r4, r5, pc}
 8001720:	20000228 	.word	0x20000228

08001724 <_init>:
 8001724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001726:	bf00      	nop
 8001728:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800172a:	bc08      	pop	{r3}
 800172c:	469e      	mov	lr, r3
 800172e:	4770      	bx	lr

08001730 <_fini>:
 8001730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001732:	bf00      	nop
 8001734:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001736:	bc08      	pop	{r3}
 8001738:	469e      	mov	lr, r3
 800173a:	4770      	bx	lr
