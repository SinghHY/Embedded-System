
unionBitExract.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000159c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000130  0800176c  0800176c  0001176c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800189c  0800189c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800189c  0800189c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800189c  0800189c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800189c  0800189c  0001189c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080018a0  080018a0  000118a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080018a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001908  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001908  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a3c  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000038a  00000000  00000000  00020aca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00020e58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e0  00000000  00000000  00020f70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002aa9  00000000  00000000  00021050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001356  00000000  00000000  00023af9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009364  00000000  00000000  00024e4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e1b3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c70  00000000  00000000  0002e204  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001754 	.word	0x08001754

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001754 	.word	0x08001754

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:

};


int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0

   union Packet packet;
   packet.packetValue = 0xEF;
 80002b6:	23ef      	movs	r3, #239	; 0xef
 80002b8:	607b      	str	r3, [r7, #4]

   printf("crc      :%#x\n",packet.packetFields.crc);
 80002ba:	793b      	ldrb	r3, [r7, #4]
 80002bc:	f3c3 0301 	ubfx	r3, r3, #0, #2
 80002c0:	b2db      	uxtb	r3, r3
 80002c2:	4619      	mov	r1, r3
 80002c4:	4825      	ldr	r0, [pc, #148]	; (800035c <main+0xac>)
 80002c6:	f000 f98f 	bl	80005e8 <iprintf>
   printf("status   :%#x\n",packet.packetFields.status);
 80002ca:	793b      	ldrb	r3, [r7, #4]
 80002cc:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80002d0:	b2db      	uxtb	r3, r3
 80002d2:	4619      	mov	r1, r3
 80002d4:	4822      	ldr	r0, [pc, #136]	; (8000360 <main+0xb0>)
 80002d6:	f000 f987 	bl	80005e8 <iprintf>
   printf("payload  :%#x\n",packet.packetFields.payload);
 80002da:	88bb      	ldrh	r3, [r7, #4]
 80002dc:	f3c3 03cb 	ubfx	r3, r3, #3, #12
 80002e0:	b29b      	uxth	r3, r3
 80002e2:	4619      	mov	r1, r3
 80002e4:	481f      	ldr	r0, [pc, #124]	; (8000364 <main+0xb4>)
 80002e6:	f000 f97f 	bl	80005e8 <iprintf>
   printf("bat      :%#x\n",packet.packetFields.bat);
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	f3c3 33c2 	ubfx	r3, r3, #15, #3
 80002f0:	b2db      	uxtb	r3, r3
 80002f2:	4619      	mov	r1, r3
 80002f4:	481c      	ldr	r0, [pc, #112]	; (8000368 <main+0xb8>)
 80002f6:	f000 f977 	bl	80005e8 <iprintf>
   printf("sensor   :%#x\n",packet.packetFields.sensor);
 80002fa:	79bb      	ldrb	r3, [r7, #6]
 80002fc:	f3c3 0382 	ubfx	r3, r3, #2, #3
 8000300:	b2db      	uxtb	r3, r3
 8000302:	4619      	mov	r1, r3
 8000304:	4819      	ldr	r0, [pc, #100]	; (800036c <main+0xbc>)
 8000306:	f000 f96f 	bl	80005e8 <iprintf>
   printf("longAddr :%#x\n",packet.packetFields.longAddr);
 800030a:	88fb      	ldrh	r3, [r7, #6]
 800030c:	f3c3 1347 	ubfx	r3, r3, #5, #8
 8000310:	b2db      	uxtb	r3, r3
 8000312:	4619      	mov	r1, r3
 8000314:	4816      	ldr	r0, [pc, #88]	; (8000370 <main+0xc0>)
 8000316:	f000 f967 	bl	80005e8 <iprintf>
   printf("shortAddr:%#x\n",packet.packetFields.shortAddr);
 800031a:	79fb      	ldrb	r3, [r7, #7]
 800031c:	f3c3 1341 	ubfx	r3, r3, #5, #2
 8000320:	b2db      	uxtb	r3, r3
 8000322:	4619      	mov	r1, r3
 8000324:	4813      	ldr	r0, [pc, #76]	; (8000374 <main+0xc4>)
 8000326:	f000 f95f 	bl	80005e8 <iprintf>
   printf("addrMode :%#x\n",packet.packetFields.addrMode);
 800032a:	79fb      	ldrb	r3, [r7, #7]
 800032c:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8000330:	b2db      	uxtb	r3, r3
 8000332:	4619      	mov	r1, r3
 8000334:	4810      	ldr	r0, [pc, #64]	; (8000378 <main+0xc8>)
 8000336:	f000 f957 	bl	80005e8 <iprintf>

   printf("Size of union is %I64u\n",sizeof(packet));
 800033a:	2104      	movs	r1, #4
 800033c:	480f      	ldr	r0, [pc, #60]	; (800037c <main+0xcc>)
 800033e:	f000 f953 	bl	80005e8 <iprintf>



   while(getchar() != '\n');
 8000342:	bf00      	nop
 8000344:	f000 f912 	bl	800056c <getchar>
 8000348:	4603      	mov	r3, r0
 800034a:	2b0a      	cmp	r3, #10
 800034c:	d1fa      	bne.n	8000344 <main+0x94>
   getchar();
 800034e:	f000 f90d 	bl	800056c <getchar>

	return 0;
 8000352:	2300      	movs	r3, #0

}
 8000354:	4618      	mov	r0, r3
 8000356:	3708      	adds	r7, #8
 8000358:	46bd      	mov	sp, r7
 800035a:	bd80      	pop	{r7, pc}
 800035c:	0800176c 	.word	0x0800176c
 8000360:	0800177c 	.word	0x0800177c
 8000364:	0800178c 	.word	0x0800178c
 8000368:	0800179c 	.word	0x0800179c
 800036c:	080017ac 	.word	0x080017ac
 8000370:	080017bc 	.word	0x080017bc
 8000374:	080017cc 	.word	0x080017cc
 8000378:	080017dc 	.word	0x080017dc
 800037c:	080017ec 	.word	0x080017ec

08000380 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000380:	b480      	push	{r7}
 8000382:	b083      	sub	sp, #12
 8000384:	af00      	add	r7, sp, #0
 8000386:	4603      	mov	r3, r0
 8000388:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800038a:	4b0e      	ldr	r3, [pc, #56]	; (80003c4 <ITM_SendChar+0x44>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	4a0d      	ldr	r2, [pc, #52]	; (80003c4 <ITM_SendChar+0x44>)
 8000390:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000394:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000396:	4b0c      	ldr	r3, [pc, #48]	; (80003c8 <ITM_SendChar+0x48>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	4a0b      	ldr	r2, [pc, #44]	; (80003c8 <ITM_SendChar+0x48>)
 800039c:	f043 0301 	orr.w	r3, r3, #1
 80003a0:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003a2:	bf00      	nop
 80003a4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	f003 0301 	and.w	r3, r3, #1
 80003ae:	2b00      	cmp	r3, #0
 80003b0:	d0f8      	beq.n	80003a4 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003b2:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003b6:	79fb      	ldrb	r3, [r7, #7]
 80003b8:	6013      	str	r3, [r2, #0]
}
 80003ba:	bf00      	nop
 80003bc:	370c      	adds	r7, #12
 80003be:	46bd      	mov	sp, r7
 80003c0:	bc80      	pop	{r7}
 80003c2:	4770      	bx	lr
 80003c4:	e000edfc 	.word	0xe000edfc
 80003c8:	e0000e00 	.word	0xe0000e00

080003cc <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b086      	sub	sp, #24
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	60f8      	str	r0, [r7, #12]
 80003d4:	60b9      	str	r1, [r7, #8]
 80003d6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d8:	2300      	movs	r3, #0
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	e00a      	b.n	80003f4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003de:	f3af 8000 	nop.w
 80003e2:	4601      	mov	r1, r0
 80003e4:	68bb      	ldr	r3, [r7, #8]
 80003e6:	1c5a      	adds	r2, r3, #1
 80003e8:	60ba      	str	r2, [r7, #8]
 80003ea:	b2ca      	uxtb	r2, r1
 80003ec:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	3301      	adds	r3, #1
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	697a      	ldr	r2, [r7, #20]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	dbf0      	blt.n	80003de <_read+0x12>
  }

  return len;
 80003fc:	687b      	ldr	r3, [r7, #4]
}
 80003fe:	4618      	mov	r0, r3
 8000400:	3718      	adds	r7, #24
 8000402:	46bd      	mov	sp, r7
 8000404:	bd80      	pop	{r7, pc}

08000406 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000406:	b580      	push	{r7, lr}
 8000408:	b086      	sub	sp, #24
 800040a:	af00      	add	r7, sp, #0
 800040c:	60f8      	str	r0, [r7, #12]
 800040e:	60b9      	str	r1, [r7, #8]
 8000410:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000412:	2300      	movs	r3, #0
 8000414:	617b      	str	r3, [r7, #20]
 8000416:	e009      	b.n	800042c <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 8000418:	68bb      	ldr	r3, [r7, #8]
 800041a:	1c5a      	adds	r2, r3, #1
 800041c:	60ba      	str	r2, [r7, #8]
 800041e:	781b      	ldrb	r3, [r3, #0]
 8000420:	4618      	mov	r0, r3
 8000422:	f7ff ffad 	bl	8000380 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000426:	697b      	ldr	r3, [r7, #20]
 8000428:	3301      	adds	r3, #1
 800042a:	617b      	str	r3, [r7, #20]
 800042c:	697a      	ldr	r2, [r7, #20]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	429a      	cmp	r2, r3
 8000432:	dbf1      	blt.n	8000418 <_write+0x12>
  }
  return len;
 8000434:	687b      	ldr	r3, [r7, #4]
}
 8000436:	4618      	mov	r0, r3
 8000438:	3718      	adds	r7, #24
 800043a:	46bd      	mov	sp, r7
 800043c:	bd80      	pop	{r7, pc}

0800043e <_close>:

int _close(int file)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000446:	f04f 33ff 	mov.w	r3, #4294967295
}
 800044a:	4618      	mov	r0, r3
 800044c:	370c      	adds	r7, #12
 800044e:	46bd      	mov	sp, r7
 8000450:	bc80      	pop	{r7}
 8000452:	4770      	bx	lr

08000454 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000454:	b480      	push	{r7}
 8000456:	b083      	sub	sp, #12
 8000458:	af00      	add	r7, sp, #0
 800045a:	6078      	str	r0, [r7, #4]
 800045c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800045e:	683b      	ldr	r3, [r7, #0]
 8000460:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000464:	605a      	str	r2, [r3, #4]
  return 0;
 8000466:	2300      	movs	r3, #0
}
 8000468:	4618      	mov	r0, r3
 800046a:	370c      	adds	r7, #12
 800046c:	46bd      	mov	sp, r7
 800046e:	bc80      	pop	{r7}
 8000470:	4770      	bx	lr

08000472 <_isatty>:

int _isatty(int file)
{
 8000472:	b480      	push	{r7}
 8000474:	b083      	sub	sp, #12
 8000476:	af00      	add	r7, sp, #0
 8000478:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800047a:	2301      	movs	r3, #1
}
 800047c:	4618      	mov	r0, r3
 800047e:	370c      	adds	r7, #12
 8000480:	46bd      	mov	sp, r7
 8000482:	bc80      	pop	{r7}
 8000484:	4770      	bx	lr

08000486 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000486:	b480      	push	{r7}
 8000488:	b085      	sub	sp, #20
 800048a:	af00      	add	r7, sp, #0
 800048c:	60f8      	str	r0, [r7, #12]
 800048e:	60b9      	str	r1, [r7, #8]
 8000490:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000492:	2300      	movs	r3, #0
}
 8000494:	4618      	mov	r0, r3
 8000496:	3714      	adds	r7, #20
 8000498:	46bd      	mov	sp, r7
 800049a:	bc80      	pop	{r7}
 800049c:	4770      	bx	lr
	...

080004a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b086      	sub	sp, #24
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004a8:	4a14      	ldr	r2, [pc, #80]	; (80004fc <_sbrk+0x5c>)
 80004aa:	4b15      	ldr	r3, [pc, #84]	; (8000500 <_sbrk+0x60>)
 80004ac:	1ad3      	subs	r3, r2, r3
 80004ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004b0:	697b      	ldr	r3, [r7, #20]
 80004b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004b4:	4b13      	ldr	r3, [pc, #76]	; (8000504 <_sbrk+0x64>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	2b00      	cmp	r3, #0
 80004ba:	d102      	bne.n	80004c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004bc:	4b11      	ldr	r3, [pc, #68]	; (8000504 <_sbrk+0x64>)
 80004be:	4a12      	ldr	r2, [pc, #72]	; (8000508 <_sbrk+0x68>)
 80004c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004c2:	4b10      	ldr	r3, [pc, #64]	; (8000504 <_sbrk+0x64>)
 80004c4:	681a      	ldr	r2, [r3, #0]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	4413      	add	r3, r2
 80004ca:	693a      	ldr	r2, [r7, #16]
 80004cc:	429a      	cmp	r2, r3
 80004ce:	d207      	bcs.n	80004e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004d0:	f000 f846 	bl	8000560 <__errno>
 80004d4:	4603      	mov	r3, r0
 80004d6:	220c      	movs	r2, #12
 80004d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004da:	f04f 33ff 	mov.w	r3, #4294967295
 80004de:	e009      	b.n	80004f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004e0:	4b08      	ldr	r3, [pc, #32]	; (8000504 <_sbrk+0x64>)
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004e6:	4b07      	ldr	r3, [pc, #28]	; (8000504 <_sbrk+0x64>)
 80004e8:	681a      	ldr	r2, [r3, #0]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4413      	add	r3, r2
 80004ee:	4a05      	ldr	r2, [pc, #20]	; (8000504 <_sbrk+0x64>)
 80004f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004f2:	68fb      	ldr	r3, [r7, #12]
}
 80004f4:	4618      	mov	r0, r3
 80004f6:	3718      	adds	r7, #24
 80004f8:	46bd      	mov	sp, r7
 80004fa:	bd80      	pop	{r7, pc}
 80004fc:	20020000 	.word	0x20020000
 8000500:	00000400 	.word	0x00000400
 8000504:	20000080 	.word	0x20000080
 8000508:	20000098 	.word	0x20000098

0800050c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800050c:	480d      	ldr	r0, [pc, #52]	; (8000544 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800050e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000510:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000514:	480c      	ldr	r0, [pc, #48]	; (8000548 <LoopForever+0x6>)
  ldr r1, =_edata
 8000516:	490d      	ldr	r1, [pc, #52]	; (800054c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000518:	4a0d      	ldr	r2, [pc, #52]	; (8000550 <LoopForever+0xe>)
  movs r3, #0
 800051a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800051c:	e002      	b.n	8000524 <LoopCopyDataInit>

0800051e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800051e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000520:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000522:	3304      	adds	r3, #4

08000524 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000524:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000526:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000528:	d3f9      	bcc.n	800051e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800052a:	4a0a      	ldr	r2, [pc, #40]	; (8000554 <LoopForever+0x12>)
  ldr r4, =_ebss
 800052c:	4c0a      	ldr	r4, [pc, #40]	; (8000558 <LoopForever+0x16>)
  movs r3, #0
 800052e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000530:	e001      	b.n	8000536 <LoopFillZerobss>

08000532 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000532:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000534:	3204      	adds	r2, #4

08000536 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000536:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000538:	d3fb      	bcc.n	8000532 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800053a:	f000 f829 	bl	8000590 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800053e:	f7ff feb7 	bl	80002b0 <main>

08000542 <LoopForever>:

LoopForever:
  b LoopForever
 8000542:	e7fe      	b.n	8000542 <LoopForever>
  ldr   r0, =_estack
 8000544:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000548:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800054c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000550:	080018a4 	.word	0x080018a4
  ldr r2, =_sbss
 8000554:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000558:	20000094 	.word	0x20000094

0800055c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800055c:	e7fe      	b.n	800055c <ADC_IRQHandler>
	...

08000560 <__errno>:
 8000560:	4b01      	ldr	r3, [pc, #4]	; (8000568 <__errno+0x8>)
 8000562:	6818      	ldr	r0, [r3, #0]
 8000564:	4770      	bx	lr
 8000566:	bf00      	nop
 8000568:	20000000 	.word	0x20000000

0800056c <getchar>:
 800056c:	4b07      	ldr	r3, [pc, #28]	; (800058c <getchar+0x20>)
 800056e:	b510      	push	{r4, lr}
 8000570:	681c      	ldr	r4, [r3, #0]
 8000572:	b124      	cbz	r4, 800057e <getchar+0x12>
 8000574:	69a3      	ldr	r3, [r4, #24]
 8000576:	b913      	cbnz	r3, 800057e <getchar+0x12>
 8000578:	4620      	mov	r0, r4
 800057a:	f000 f8a5 	bl	80006c8 <__sinit>
 800057e:	6861      	ldr	r1, [r4, #4]
 8000580:	4620      	mov	r0, r4
 8000582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000586:	f000 b959 	b.w	800083c <_getc_r>
 800058a:	bf00      	nop
 800058c:	20000000 	.word	0x20000000

08000590 <__libc_init_array>:
 8000590:	b570      	push	{r4, r5, r6, lr}
 8000592:	4d0d      	ldr	r5, [pc, #52]	; (80005c8 <__libc_init_array+0x38>)
 8000594:	4c0d      	ldr	r4, [pc, #52]	; (80005cc <__libc_init_array+0x3c>)
 8000596:	1b64      	subs	r4, r4, r5
 8000598:	10a4      	asrs	r4, r4, #2
 800059a:	2600      	movs	r6, #0
 800059c:	42a6      	cmp	r6, r4
 800059e:	d109      	bne.n	80005b4 <__libc_init_array+0x24>
 80005a0:	4d0b      	ldr	r5, [pc, #44]	; (80005d0 <__libc_init_array+0x40>)
 80005a2:	4c0c      	ldr	r4, [pc, #48]	; (80005d4 <__libc_init_array+0x44>)
 80005a4:	f001 f8d6 	bl	8001754 <_init>
 80005a8:	1b64      	subs	r4, r4, r5
 80005aa:	10a4      	asrs	r4, r4, #2
 80005ac:	2600      	movs	r6, #0
 80005ae:	42a6      	cmp	r6, r4
 80005b0:	d105      	bne.n	80005be <__libc_init_array+0x2e>
 80005b2:	bd70      	pop	{r4, r5, r6, pc}
 80005b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005b8:	4798      	blx	r3
 80005ba:	3601      	adds	r6, #1
 80005bc:	e7ee      	b.n	800059c <__libc_init_array+0xc>
 80005be:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c2:	4798      	blx	r3
 80005c4:	3601      	adds	r6, #1
 80005c6:	e7f2      	b.n	80005ae <__libc_init_array+0x1e>
 80005c8:	0800189c 	.word	0x0800189c
 80005cc:	0800189c 	.word	0x0800189c
 80005d0:	0800189c 	.word	0x0800189c
 80005d4:	080018a0 	.word	0x080018a0

080005d8 <memset>:
 80005d8:	4402      	add	r2, r0
 80005da:	4603      	mov	r3, r0
 80005dc:	4293      	cmp	r3, r2
 80005de:	d100      	bne.n	80005e2 <memset+0xa>
 80005e0:	4770      	bx	lr
 80005e2:	f803 1b01 	strb.w	r1, [r3], #1
 80005e6:	e7f9      	b.n	80005dc <memset+0x4>

080005e8 <iprintf>:
 80005e8:	b40f      	push	{r0, r1, r2, r3}
 80005ea:	4b0a      	ldr	r3, [pc, #40]	; (8000614 <iprintf+0x2c>)
 80005ec:	b513      	push	{r0, r1, r4, lr}
 80005ee:	681c      	ldr	r4, [r3, #0]
 80005f0:	b124      	cbz	r4, 80005fc <iprintf+0x14>
 80005f2:	69a3      	ldr	r3, [r4, #24]
 80005f4:	b913      	cbnz	r3, 80005fc <iprintf+0x14>
 80005f6:	4620      	mov	r0, r4
 80005f8:	f000 f866 	bl	80006c8 <__sinit>
 80005fc:	ab05      	add	r3, sp, #20
 80005fe:	9a04      	ldr	r2, [sp, #16]
 8000600:	68a1      	ldr	r1, [r4, #8]
 8000602:	9301      	str	r3, [sp, #4]
 8000604:	4620      	mov	r0, r4
 8000606:	f000 fa19 	bl	8000a3c <_vfiprintf_r>
 800060a:	b002      	add	sp, #8
 800060c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000610:	b004      	add	sp, #16
 8000612:	4770      	bx	lr
 8000614:	20000000 	.word	0x20000000

08000618 <std>:
 8000618:	2300      	movs	r3, #0
 800061a:	b510      	push	{r4, lr}
 800061c:	4604      	mov	r4, r0
 800061e:	e9c0 3300 	strd	r3, r3, [r0]
 8000622:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000626:	6083      	str	r3, [r0, #8]
 8000628:	8181      	strh	r1, [r0, #12]
 800062a:	6643      	str	r3, [r0, #100]	; 0x64
 800062c:	81c2      	strh	r2, [r0, #14]
 800062e:	6183      	str	r3, [r0, #24]
 8000630:	4619      	mov	r1, r3
 8000632:	2208      	movs	r2, #8
 8000634:	305c      	adds	r0, #92	; 0x5c
 8000636:	f7ff ffcf 	bl	80005d8 <memset>
 800063a:	4b05      	ldr	r3, [pc, #20]	; (8000650 <std+0x38>)
 800063c:	6263      	str	r3, [r4, #36]	; 0x24
 800063e:	4b05      	ldr	r3, [pc, #20]	; (8000654 <std+0x3c>)
 8000640:	62a3      	str	r3, [r4, #40]	; 0x28
 8000642:	4b05      	ldr	r3, [pc, #20]	; (8000658 <std+0x40>)
 8000644:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000646:	4b05      	ldr	r3, [pc, #20]	; (800065c <std+0x44>)
 8000648:	6224      	str	r4, [r4, #32]
 800064a:	6323      	str	r3, [r4, #48]	; 0x30
 800064c:	bd10      	pop	{r4, pc}
 800064e:	bf00      	nop
 8000650:	0800103d 	.word	0x0800103d
 8000654:	0800105f 	.word	0x0800105f
 8000658:	08001097 	.word	0x08001097
 800065c:	080010bb 	.word	0x080010bb

08000660 <_cleanup_r>:
 8000660:	4901      	ldr	r1, [pc, #4]	; (8000668 <_cleanup_r+0x8>)
 8000662:	f000 b8cc 	b.w	80007fe <_fwalk_reent>
 8000666:	bf00      	nop
 8000668:	0800138d 	.word	0x0800138d

0800066c <__sfmoreglue>:
 800066c:	b570      	push	{r4, r5, r6, lr}
 800066e:	2268      	movs	r2, #104	; 0x68
 8000670:	1e4d      	subs	r5, r1, #1
 8000672:	4355      	muls	r5, r2
 8000674:	460e      	mov	r6, r1
 8000676:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800067a:	f000 f943 	bl	8000904 <_malloc_r>
 800067e:	4604      	mov	r4, r0
 8000680:	b140      	cbz	r0, 8000694 <__sfmoreglue+0x28>
 8000682:	2100      	movs	r1, #0
 8000684:	e9c0 1600 	strd	r1, r6, [r0]
 8000688:	300c      	adds	r0, #12
 800068a:	60a0      	str	r0, [r4, #8]
 800068c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000690:	f7ff ffa2 	bl	80005d8 <memset>
 8000694:	4620      	mov	r0, r4
 8000696:	bd70      	pop	{r4, r5, r6, pc}

08000698 <__sfp_lock_acquire>:
 8000698:	4801      	ldr	r0, [pc, #4]	; (80006a0 <__sfp_lock_acquire+0x8>)
 800069a:	f000 b910 	b.w	80008be <__retarget_lock_acquire_recursive>
 800069e:	bf00      	nop
 80006a0:	20000085 	.word	0x20000085

080006a4 <__sfp_lock_release>:
 80006a4:	4801      	ldr	r0, [pc, #4]	; (80006ac <__sfp_lock_release+0x8>)
 80006a6:	f000 b90b 	b.w	80008c0 <__retarget_lock_release_recursive>
 80006aa:	bf00      	nop
 80006ac:	20000085 	.word	0x20000085

080006b0 <__sinit_lock_acquire>:
 80006b0:	4801      	ldr	r0, [pc, #4]	; (80006b8 <__sinit_lock_acquire+0x8>)
 80006b2:	f000 b904 	b.w	80008be <__retarget_lock_acquire_recursive>
 80006b6:	bf00      	nop
 80006b8:	20000086 	.word	0x20000086

080006bc <__sinit_lock_release>:
 80006bc:	4801      	ldr	r0, [pc, #4]	; (80006c4 <__sinit_lock_release+0x8>)
 80006be:	f000 b8ff 	b.w	80008c0 <__retarget_lock_release_recursive>
 80006c2:	bf00      	nop
 80006c4:	20000086 	.word	0x20000086

080006c8 <__sinit>:
 80006c8:	b510      	push	{r4, lr}
 80006ca:	4604      	mov	r4, r0
 80006cc:	f7ff fff0 	bl	80006b0 <__sinit_lock_acquire>
 80006d0:	69a3      	ldr	r3, [r4, #24]
 80006d2:	b11b      	cbz	r3, 80006dc <__sinit+0x14>
 80006d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006d8:	f7ff bff0 	b.w	80006bc <__sinit_lock_release>
 80006dc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80006e0:	6523      	str	r3, [r4, #80]	; 0x50
 80006e2:	4b13      	ldr	r3, [pc, #76]	; (8000730 <__sinit+0x68>)
 80006e4:	4a13      	ldr	r2, [pc, #76]	; (8000734 <__sinit+0x6c>)
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	62a2      	str	r2, [r4, #40]	; 0x28
 80006ea:	42a3      	cmp	r3, r4
 80006ec:	bf04      	itt	eq
 80006ee:	2301      	moveq	r3, #1
 80006f0:	61a3      	streq	r3, [r4, #24]
 80006f2:	4620      	mov	r0, r4
 80006f4:	f000 f820 	bl	8000738 <__sfp>
 80006f8:	6060      	str	r0, [r4, #4]
 80006fa:	4620      	mov	r0, r4
 80006fc:	f000 f81c 	bl	8000738 <__sfp>
 8000700:	60a0      	str	r0, [r4, #8]
 8000702:	4620      	mov	r0, r4
 8000704:	f000 f818 	bl	8000738 <__sfp>
 8000708:	2200      	movs	r2, #0
 800070a:	60e0      	str	r0, [r4, #12]
 800070c:	2104      	movs	r1, #4
 800070e:	6860      	ldr	r0, [r4, #4]
 8000710:	f7ff ff82 	bl	8000618 <std>
 8000714:	68a0      	ldr	r0, [r4, #8]
 8000716:	2201      	movs	r2, #1
 8000718:	2109      	movs	r1, #9
 800071a:	f7ff ff7d 	bl	8000618 <std>
 800071e:	68e0      	ldr	r0, [r4, #12]
 8000720:	2202      	movs	r2, #2
 8000722:	2112      	movs	r1, #18
 8000724:	f7ff ff78 	bl	8000618 <std>
 8000728:	2301      	movs	r3, #1
 800072a:	61a3      	str	r3, [r4, #24]
 800072c:	e7d2      	b.n	80006d4 <__sinit+0xc>
 800072e:	bf00      	nop
 8000730:	08001804 	.word	0x08001804
 8000734:	08000661 	.word	0x08000661

08000738 <__sfp>:
 8000738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073a:	4607      	mov	r7, r0
 800073c:	f7ff ffac 	bl	8000698 <__sfp_lock_acquire>
 8000740:	4b1e      	ldr	r3, [pc, #120]	; (80007bc <__sfp+0x84>)
 8000742:	681e      	ldr	r6, [r3, #0]
 8000744:	69b3      	ldr	r3, [r6, #24]
 8000746:	b913      	cbnz	r3, 800074e <__sfp+0x16>
 8000748:	4630      	mov	r0, r6
 800074a:	f7ff ffbd 	bl	80006c8 <__sinit>
 800074e:	3648      	adds	r6, #72	; 0x48
 8000750:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000754:	3b01      	subs	r3, #1
 8000756:	d503      	bpl.n	8000760 <__sfp+0x28>
 8000758:	6833      	ldr	r3, [r6, #0]
 800075a:	b30b      	cbz	r3, 80007a0 <__sfp+0x68>
 800075c:	6836      	ldr	r6, [r6, #0]
 800075e:	e7f7      	b.n	8000750 <__sfp+0x18>
 8000760:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000764:	b9d5      	cbnz	r5, 800079c <__sfp+0x64>
 8000766:	4b16      	ldr	r3, [pc, #88]	; (80007c0 <__sfp+0x88>)
 8000768:	60e3      	str	r3, [r4, #12]
 800076a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800076e:	6665      	str	r5, [r4, #100]	; 0x64
 8000770:	f000 f8a4 	bl	80008bc <__retarget_lock_init_recursive>
 8000774:	f7ff ff96 	bl	80006a4 <__sfp_lock_release>
 8000778:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800077c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000780:	6025      	str	r5, [r4, #0]
 8000782:	61a5      	str	r5, [r4, #24]
 8000784:	2208      	movs	r2, #8
 8000786:	4629      	mov	r1, r5
 8000788:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800078c:	f7ff ff24 	bl	80005d8 <memset>
 8000790:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000794:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000798:	4620      	mov	r0, r4
 800079a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800079c:	3468      	adds	r4, #104	; 0x68
 800079e:	e7d9      	b.n	8000754 <__sfp+0x1c>
 80007a0:	2104      	movs	r1, #4
 80007a2:	4638      	mov	r0, r7
 80007a4:	f7ff ff62 	bl	800066c <__sfmoreglue>
 80007a8:	4604      	mov	r4, r0
 80007aa:	6030      	str	r0, [r6, #0]
 80007ac:	2800      	cmp	r0, #0
 80007ae:	d1d5      	bne.n	800075c <__sfp+0x24>
 80007b0:	f7ff ff78 	bl	80006a4 <__sfp_lock_release>
 80007b4:	230c      	movs	r3, #12
 80007b6:	603b      	str	r3, [r7, #0]
 80007b8:	e7ee      	b.n	8000798 <__sfp+0x60>
 80007ba:	bf00      	nop
 80007bc:	08001804 	.word	0x08001804
 80007c0:	ffff0001 	.word	0xffff0001

080007c4 <_fwalk>:
 80007c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007c8:	460f      	mov	r7, r1
 80007ca:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007ce:	2600      	movs	r6, #0
 80007d0:	e9d4 8501 	ldrd	r8, r5, [r4, #4]
 80007d4:	f1b8 0801 	subs.w	r8, r8, #1
 80007d8:	d505      	bpl.n	80007e6 <_fwalk+0x22>
 80007da:	6824      	ldr	r4, [r4, #0]
 80007dc:	2c00      	cmp	r4, #0
 80007de:	d1f7      	bne.n	80007d0 <_fwalk+0xc>
 80007e0:	4630      	mov	r0, r6
 80007e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007e6:	89ab      	ldrh	r3, [r5, #12]
 80007e8:	2b01      	cmp	r3, #1
 80007ea:	d906      	bls.n	80007fa <_fwalk+0x36>
 80007ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007f0:	3301      	adds	r3, #1
 80007f2:	d002      	beq.n	80007fa <_fwalk+0x36>
 80007f4:	4628      	mov	r0, r5
 80007f6:	47b8      	blx	r7
 80007f8:	4306      	orrs	r6, r0
 80007fa:	3568      	adds	r5, #104	; 0x68
 80007fc:	e7ea      	b.n	80007d4 <_fwalk+0x10>

080007fe <_fwalk_reent>:
 80007fe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000802:	4606      	mov	r6, r0
 8000804:	4688      	mov	r8, r1
 8000806:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800080a:	2700      	movs	r7, #0
 800080c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000810:	f1b9 0901 	subs.w	r9, r9, #1
 8000814:	d505      	bpl.n	8000822 <_fwalk_reent+0x24>
 8000816:	6824      	ldr	r4, [r4, #0]
 8000818:	2c00      	cmp	r4, #0
 800081a:	d1f7      	bne.n	800080c <_fwalk_reent+0xe>
 800081c:	4638      	mov	r0, r7
 800081e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000822:	89ab      	ldrh	r3, [r5, #12]
 8000824:	2b01      	cmp	r3, #1
 8000826:	d907      	bls.n	8000838 <_fwalk_reent+0x3a>
 8000828:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800082c:	3301      	adds	r3, #1
 800082e:	d003      	beq.n	8000838 <_fwalk_reent+0x3a>
 8000830:	4629      	mov	r1, r5
 8000832:	4630      	mov	r0, r6
 8000834:	47c0      	blx	r8
 8000836:	4307      	orrs	r7, r0
 8000838:	3568      	adds	r5, #104	; 0x68
 800083a:	e7e9      	b.n	8000810 <_fwalk_reent+0x12>

0800083c <_getc_r>:
 800083c:	b538      	push	{r3, r4, r5, lr}
 800083e:	460c      	mov	r4, r1
 8000840:	4605      	mov	r5, r0
 8000842:	b118      	cbz	r0, 800084c <_getc_r+0x10>
 8000844:	6983      	ldr	r3, [r0, #24]
 8000846:	b90b      	cbnz	r3, 800084c <_getc_r+0x10>
 8000848:	f7ff ff3e 	bl	80006c8 <__sinit>
 800084c:	4b18      	ldr	r3, [pc, #96]	; (80008b0 <_getc_r+0x74>)
 800084e:	429c      	cmp	r4, r3
 8000850:	d11e      	bne.n	8000890 <_getc_r+0x54>
 8000852:	686c      	ldr	r4, [r5, #4]
 8000854:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000856:	07d8      	lsls	r0, r3, #31
 8000858:	d405      	bmi.n	8000866 <_getc_r+0x2a>
 800085a:	89a3      	ldrh	r3, [r4, #12]
 800085c:	0599      	lsls	r1, r3, #22
 800085e:	d402      	bmi.n	8000866 <_getc_r+0x2a>
 8000860:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000862:	f000 f82c 	bl	80008be <__retarget_lock_acquire_recursive>
 8000866:	6863      	ldr	r3, [r4, #4]
 8000868:	3b01      	subs	r3, #1
 800086a:	2b00      	cmp	r3, #0
 800086c:	6063      	str	r3, [r4, #4]
 800086e:	da19      	bge.n	80008a4 <_getc_r+0x68>
 8000870:	4628      	mov	r0, r5
 8000872:	4621      	mov	r1, r4
 8000874:	f000 fba6 	bl	8000fc4 <__srget_r>
 8000878:	4605      	mov	r5, r0
 800087a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800087c:	07da      	lsls	r2, r3, #31
 800087e:	d405      	bmi.n	800088c <_getc_r+0x50>
 8000880:	89a3      	ldrh	r3, [r4, #12]
 8000882:	059b      	lsls	r3, r3, #22
 8000884:	d402      	bmi.n	800088c <_getc_r+0x50>
 8000886:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000888:	f000 f81a 	bl	80008c0 <__retarget_lock_release_recursive>
 800088c:	4628      	mov	r0, r5
 800088e:	bd38      	pop	{r3, r4, r5, pc}
 8000890:	4b08      	ldr	r3, [pc, #32]	; (80008b4 <_getc_r+0x78>)
 8000892:	429c      	cmp	r4, r3
 8000894:	d101      	bne.n	800089a <_getc_r+0x5e>
 8000896:	68ac      	ldr	r4, [r5, #8]
 8000898:	e7dc      	b.n	8000854 <_getc_r+0x18>
 800089a:	4b07      	ldr	r3, [pc, #28]	; (80008b8 <_getc_r+0x7c>)
 800089c:	429c      	cmp	r4, r3
 800089e:	bf08      	it	eq
 80008a0:	68ec      	ldreq	r4, [r5, #12]
 80008a2:	e7d7      	b.n	8000854 <_getc_r+0x18>
 80008a4:	6823      	ldr	r3, [r4, #0]
 80008a6:	1c5a      	adds	r2, r3, #1
 80008a8:	6022      	str	r2, [r4, #0]
 80008aa:	781d      	ldrb	r5, [r3, #0]
 80008ac:	e7e5      	b.n	800087a <_getc_r+0x3e>
 80008ae:	bf00      	nop
 80008b0:	08001828 	.word	0x08001828
 80008b4:	08001848 	.word	0x08001848
 80008b8:	08001808 	.word	0x08001808

080008bc <__retarget_lock_init_recursive>:
 80008bc:	4770      	bx	lr

080008be <__retarget_lock_acquire_recursive>:
 80008be:	4770      	bx	lr

080008c0 <__retarget_lock_release_recursive>:
 80008c0:	4770      	bx	lr
	...

080008c4 <sbrk_aligned>:
 80008c4:	b570      	push	{r4, r5, r6, lr}
 80008c6:	4e0e      	ldr	r6, [pc, #56]	; (8000900 <sbrk_aligned+0x3c>)
 80008c8:	460c      	mov	r4, r1
 80008ca:	6831      	ldr	r1, [r6, #0]
 80008cc:	4605      	mov	r5, r0
 80008ce:	b911      	cbnz	r1, 80008d6 <sbrk_aligned+0x12>
 80008d0:	f000 fba4 	bl	800101c <_sbrk_r>
 80008d4:	6030      	str	r0, [r6, #0]
 80008d6:	4621      	mov	r1, r4
 80008d8:	4628      	mov	r0, r5
 80008da:	f000 fb9f 	bl	800101c <_sbrk_r>
 80008de:	1c43      	adds	r3, r0, #1
 80008e0:	d00a      	beq.n	80008f8 <sbrk_aligned+0x34>
 80008e2:	1cc4      	adds	r4, r0, #3
 80008e4:	f024 0403 	bic.w	r4, r4, #3
 80008e8:	42a0      	cmp	r0, r4
 80008ea:	d007      	beq.n	80008fc <sbrk_aligned+0x38>
 80008ec:	1a21      	subs	r1, r4, r0
 80008ee:	4628      	mov	r0, r5
 80008f0:	f000 fb94 	bl	800101c <_sbrk_r>
 80008f4:	3001      	adds	r0, #1
 80008f6:	d101      	bne.n	80008fc <sbrk_aligned+0x38>
 80008f8:	f04f 34ff 	mov.w	r4, #4294967295
 80008fc:	4620      	mov	r0, r4
 80008fe:	bd70      	pop	{r4, r5, r6, pc}
 8000900:	2000008c 	.word	0x2000008c

08000904 <_malloc_r>:
 8000904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000908:	1ccd      	adds	r5, r1, #3
 800090a:	f025 0503 	bic.w	r5, r5, #3
 800090e:	3508      	adds	r5, #8
 8000910:	2d0c      	cmp	r5, #12
 8000912:	bf38      	it	cc
 8000914:	250c      	movcc	r5, #12
 8000916:	2d00      	cmp	r5, #0
 8000918:	4607      	mov	r7, r0
 800091a:	db01      	blt.n	8000920 <_malloc_r+0x1c>
 800091c:	42a9      	cmp	r1, r5
 800091e:	d905      	bls.n	800092c <_malloc_r+0x28>
 8000920:	230c      	movs	r3, #12
 8000922:	603b      	str	r3, [r7, #0]
 8000924:	2600      	movs	r6, #0
 8000926:	4630      	mov	r0, r6
 8000928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800092c:	4e2e      	ldr	r6, [pc, #184]	; (80009e8 <_malloc_r+0xe4>)
 800092e:	f000 fdf3 	bl	8001518 <__malloc_lock>
 8000932:	6833      	ldr	r3, [r6, #0]
 8000934:	461c      	mov	r4, r3
 8000936:	bb34      	cbnz	r4, 8000986 <_malloc_r+0x82>
 8000938:	4629      	mov	r1, r5
 800093a:	4638      	mov	r0, r7
 800093c:	f7ff ffc2 	bl	80008c4 <sbrk_aligned>
 8000940:	1c43      	adds	r3, r0, #1
 8000942:	4604      	mov	r4, r0
 8000944:	d14d      	bne.n	80009e2 <_malloc_r+0xde>
 8000946:	6834      	ldr	r4, [r6, #0]
 8000948:	4626      	mov	r6, r4
 800094a:	2e00      	cmp	r6, #0
 800094c:	d140      	bne.n	80009d0 <_malloc_r+0xcc>
 800094e:	6823      	ldr	r3, [r4, #0]
 8000950:	4631      	mov	r1, r6
 8000952:	4638      	mov	r0, r7
 8000954:	eb04 0803 	add.w	r8, r4, r3
 8000958:	f000 fb60 	bl	800101c <_sbrk_r>
 800095c:	4580      	cmp	r8, r0
 800095e:	d13a      	bne.n	80009d6 <_malloc_r+0xd2>
 8000960:	6821      	ldr	r1, [r4, #0]
 8000962:	3503      	adds	r5, #3
 8000964:	1a6d      	subs	r5, r5, r1
 8000966:	f025 0503 	bic.w	r5, r5, #3
 800096a:	3508      	adds	r5, #8
 800096c:	2d0c      	cmp	r5, #12
 800096e:	bf38      	it	cc
 8000970:	250c      	movcc	r5, #12
 8000972:	4629      	mov	r1, r5
 8000974:	4638      	mov	r0, r7
 8000976:	f7ff ffa5 	bl	80008c4 <sbrk_aligned>
 800097a:	3001      	adds	r0, #1
 800097c:	d02b      	beq.n	80009d6 <_malloc_r+0xd2>
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	442b      	add	r3, r5
 8000982:	6023      	str	r3, [r4, #0]
 8000984:	e00e      	b.n	80009a4 <_malloc_r+0xa0>
 8000986:	6822      	ldr	r2, [r4, #0]
 8000988:	1b52      	subs	r2, r2, r5
 800098a:	d41e      	bmi.n	80009ca <_malloc_r+0xc6>
 800098c:	2a0b      	cmp	r2, #11
 800098e:	d916      	bls.n	80009be <_malloc_r+0xba>
 8000990:	1961      	adds	r1, r4, r5
 8000992:	42a3      	cmp	r3, r4
 8000994:	6025      	str	r5, [r4, #0]
 8000996:	bf18      	it	ne
 8000998:	6059      	strne	r1, [r3, #4]
 800099a:	6863      	ldr	r3, [r4, #4]
 800099c:	bf08      	it	eq
 800099e:	6031      	streq	r1, [r6, #0]
 80009a0:	5162      	str	r2, [r4, r5]
 80009a2:	604b      	str	r3, [r1, #4]
 80009a4:	4638      	mov	r0, r7
 80009a6:	f104 060b 	add.w	r6, r4, #11
 80009aa:	f000 fdbb 	bl	8001524 <__malloc_unlock>
 80009ae:	f026 0607 	bic.w	r6, r6, #7
 80009b2:	1d23      	adds	r3, r4, #4
 80009b4:	1af2      	subs	r2, r6, r3
 80009b6:	d0b6      	beq.n	8000926 <_malloc_r+0x22>
 80009b8:	1b9b      	subs	r3, r3, r6
 80009ba:	50a3      	str	r3, [r4, r2]
 80009bc:	e7b3      	b.n	8000926 <_malloc_r+0x22>
 80009be:	6862      	ldr	r2, [r4, #4]
 80009c0:	42a3      	cmp	r3, r4
 80009c2:	bf0c      	ite	eq
 80009c4:	6032      	streq	r2, [r6, #0]
 80009c6:	605a      	strne	r2, [r3, #4]
 80009c8:	e7ec      	b.n	80009a4 <_malloc_r+0xa0>
 80009ca:	4623      	mov	r3, r4
 80009cc:	6864      	ldr	r4, [r4, #4]
 80009ce:	e7b2      	b.n	8000936 <_malloc_r+0x32>
 80009d0:	4634      	mov	r4, r6
 80009d2:	6876      	ldr	r6, [r6, #4]
 80009d4:	e7b9      	b.n	800094a <_malloc_r+0x46>
 80009d6:	230c      	movs	r3, #12
 80009d8:	603b      	str	r3, [r7, #0]
 80009da:	4638      	mov	r0, r7
 80009dc:	f000 fda2 	bl	8001524 <__malloc_unlock>
 80009e0:	e7a1      	b.n	8000926 <_malloc_r+0x22>
 80009e2:	6025      	str	r5, [r4, #0]
 80009e4:	e7de      	b.n	80009a4 <_malloc_r+0xa0>
 80009e6:	bf00      	nop
 80009e8:	20000088 	.word	0x20000088

080009ec <__sfputc_r>:
 80009ec:	6893      	ldr	r3, [r2, #8]
 80009ee:	3b01      	subs	r3, #1
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	b410      	push	{r4}
 80009f4:	6093      	str	r3, [r2, #8]
 80009f6:	da07      	bge.n	8000a08 <__sfputc_r+0x1c>
 80009f8:	6994      	ldr	r4, [r2, #24]
 80009fa:	42a3      	cmp	r3, r4
 80009fc:	db01      	blt.n	8000a02 <__sfputc_r+0x16>
 80009fe:	290a      	cmp	r1, #10
 8000a00:	d102      	bne.n	8000a08 <__sfputc_r+0x1c>
 8000a02:	bc10      	pop	{r4}
 8000a04:	f000 bb5e 	b.w	80010c4 <__swbuf_r>
 8000a08:	6813      	ldr	r3, [r2, #0]
 8000a0a:	1c58      	adds	r0, r3, #1
 8000a0c:	6010      	str	r0, [r2, #0]
 8000a0e:	7019      	strb	r1, [r3, #0]
 8000a10:	4608      	mov	r0, r1
 8000a12:	bc10      	pop	{r4}
 8000a14:	4770      	bx	lr

08000a16 <__sfputs_r>:
 8000a16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a18:	4606      	mov	r6, r0
 8000a1a:	460f      	mov	r7, r1
 8000a1c:	4614      	mov	r4, r2
 8000a1e:	18d5      	adds	r5, r2, r3
 8000a20:	42ac      	cmp	r4, r5
 8000a22:	d101      	bne.n	8000a28 <__sfputs_r+0x12>
 8000a24:	2000      	movs	r0, #0
 8000a26:	e007      	b.n	8000a38 <__sfputs_r+0x22>
 8000a28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a2c:	463a      	mov	r2, r7
 8000a2e:	4630      	mov	r0, r6
 8000a30:	f7ff ffdc 	bl	80009ec <__sfputc_r>
 8000a34:	1c43      	adds	r3, r0, #1
 8000a36:	d1f3      	bne.n	8000a20 <__sfputs_r+0xa>
 8000a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a3c <_vfiprintf_r>:
 8000a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a40:	460d      	mov	r5, r1
 8000a42:	b09d      	sub	sp, #116	; 0x74
 8000a44:	4614      	mov	r4, r2
 8000a46:	4698      	mov	r8, r3
 8000a48:	4606      	mov	r6, r0
 8000a4a:	b118      	cbz	r0, 8000a54 <_vfiprintf_r+0x18>
 8000a4c:	6983      	ldr	r3, [r0, #24]
 8000a4e:	b90b      	cbnz	r3, 8000a54 <_vfiprintf_r+0x18>
 8000a50:	f7ff fe3a 	bl	80006c8 <__sinit>
 8000a54:	4b89      	ldr	r3, [pc, #548]	; (8000c7c <_vfiprintf_r+0x240>)
 8000a56:	429d      	cmp	r5, r3
 8000a58:	d11b      	bne.n	8000a92 <_vfiprintf_r+0x56>
 8000a5a:	6875      	ldr	r5, [r6, #4]
 8000a5c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a5e:	07d9      	lsls	r1, r3, #31
 8000a60:	d405      	bmi.n	8000a6e <_vfiprintf_r+0x32>
 8000a62:	89ab      	ldrh	r3, [r5, #12]
 8000a64:	059a      	lsls	r2, r3, #22
 8000a66:	d402      	bmi.n	8000a6e <_vfiprintf_r+0x32>
 8000a68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a6a:	f7ff ff28 	bl	80008be <__retarget_lock_acquire_recursive>
 8000a6e:	89ab      	ldrh	r3, [r5, #12]
 8000a70:	071b      	lsls	r3, r3, #28
 8000a72:	d501      	bpl.n	8000a78 <_vfiprintf_r+0x3c>
 8000a74:	692b      	ldr	r3, [r5, #16]
 8000a76:	b9eb      	cbnz	r3, 8000ab4 <_vfiprintf_r+0x78>
 8000a78:	4629      	mov	r1, r5
 8000a7a:	4630      	mov	r0, r6
 8000a7c:	f000 fb86 	bl	800118c <__swsetup_r>
 8000a80:	b1c0      	cbz	r0, 8000ab4 <_vfiprintf_r+0x78>
 8000a82:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a84:	07dc      	lsls	r4, r3, #31
 8000a86:	d50e      	bpl.n	8000aa6 <_vfiprintf_r+0x6a>
 8000a88:	f04f 30ff 	mov.w	r0, #4294967295
 8000a8c:	b01d      	add	sp, #116	; 0x74
 8000a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a92:	4b7b      	ldr	r3, [pc, #492]	; (8000c80 <_vfiprintf_r+0x244>)
 8000a94:	429d      	cmp	r5, r3
 8000a96:	d101      	bne.n	8000a9c <_vfiprintf_r+0x60>
 8000a98:	68b5      	ldr	r5, [r6, #8]
 8000a9a:	e7df      	b.n	8000a5c <_vfiprintf_r+0x20>
 8000a9c:	4b79      	ldr	r3, [pc, #484]	; (8000c84 <_vfiprintf_r+0x248>)
 8000a9e:	429d      	cmp	r5, r3
 8000aa0:	bf08      	it	eq
 8000aa2:	68f5      	ldreq	r5, [r6, #12]
 8000aa4:	e7da      	b.n	8000a5c <_vfiprintf_r+0x20>
 8000aa6:	89ab      	ldrh	r3, [r5, #12]
 8000aa8:	0598      	lsls	r0, r3, #22
 8000aaa:	d4ed      	bmi.n	8000a88 <_vfiprintf_r+0x4c>
 8000aac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aae:	f7ff ff07 	bl	80008c0 <__retarget_lock_release_recursive>
 8000ab2:	e7e9      	b.n	8000a88 <_vfiprintf_r+0x4c>
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ab8:	2320      	movs	r3, #32
 8000aba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000abe:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ac2:	2330      	movs	r3, #48	; 0x30
 8000ac4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000c88 <_vfiprintf_r+0x24c>
 8000ac8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000acc:	f04f 0901 	mov.w	r9, #1
 8000ad0:	4623      	mov	r3, r4
 8000ad2:	469a      	mov	sl, r3
 8000ad4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ad8:	b10a      	cbz	r2, 8000ade <_vfiprintf_r+0xa2>
 8000ada:	2a25      	cmp	r2, #37	; 0x25
 8000adc:	d1f9      	bne.n	8000ad2 <_vfiprintf_r+0x96>
 8000ade:	ebba 0b04 	subs.w	fp, sl, r4
 8000ae2:	d00b      	beq.n	8000afc <_vfiprintf_r+0xc0>
 8000ae4:	465b      	mov	r3, fp
 8000ae6:	4622      	mov	r2, r4
 8000ae8:	4629      	mov	r1, r5
 8000aea:	4630      	mov	r0, r6
 8000aec:	f7ff ff93 	bl	8000a16 <__sfputs_r>
 8000af0:	3001      	adds	r0, #1
 8000af2:	f000 80aa 	beq.w	8000c4a <_vfiprintf_r+0x20e>
 8000af6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000af8:	445a      	add	r2, fp
 8000afa:	9209      	str	r2, [sp, #36]	; 0x24
 8000afc:	f89a 3000 	ldrb.w	r3, [sl]
 8000b00:	2b00      	cmp	r3, #0
 8000b02:	f000 80a2 	beq.w	8000c4a <_vfiprintf_r+0x20e>
 8000b06:	2300      	movs	r3, #0
 8000b08:	f04f 32ff 	mov.w	r2, #4294967295
 8000b0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b10:	f10a 0a01 	add.w	sl, sl, #1
 8000b14:	9304      	str	r3, [sp, #16]
 8000b16:	9307      	str	r3, [sp, #28]
 8000b18:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b1c:	931a      	str	r3, [sp, #104]	; 0x68
 8000b1e:	4654      	mov	r4, sl
 8000b20:	2205      	movs	r2, #5
 8000b22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b26:	4858      	ldr	r0, [pc, #352]	; (8000c88 <_vfiprintf_r+0x24c>)
 8000b28:	f7ff fb72 	bl	8000210 <memchr>
 8000b2c:	9a04      	ldr	r2, [sp, #16]
 8000b2e:	b9d8      	cbnz	r0, 8000b68 <_vfiprintf_r+0x12c>
 8000b30:	06d1      	lsls	r1, r2, #27
 8000b32:	bf44      	itt	mi
 8000b34:	2320      	movmi	r3, #32
 8000b36:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b3a:	0713      	lsls	r3, r2, #28
 8000b3c:	bf44      	itt	mi
 8000b3e:	232b      	movmi	r3, #43	; 0x2b
 8000b40:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b44:	f89a 3000 	ldrb.w	r3, [sl]
 8000b48:	2b2a      	cmp	r3, #42	; 0x2a
 8000b4a:	d015      	beq.n	8000b78 <_vfiprintf_r+0x13c>
 8000b4c:	9a07      	ldr	r2, [sp, #28]
 8000b4e:	4654      	mov	r4, sl
 8000b50:	2000      	movs	r0, #0
 8000b52:	f04f 0c0a 	mov.w	ip, #10
 8000b56:	4621      	mov	r1, r4
 8000b58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b5c:	3b30      	subs	r3, #48	; 0x30
 8000b5e:	2b09      	cmp	r3, #9
 8000b60:	d94e      	bls.n	8000c00 <_vfiprintf_r+0x1c4>
 8000b62:	b1b0      	cbz	r0, 8000b92 <_vfiprintf_r+0x156>
 8000b64:	9207      	str	r2, [sp, #28]
 8000b66:	e014      	b.n	8000b92 <_vfiprintf_r+0x156>
 8000b68:	eba0 0308 	sub.w	r3, r0, r8
 8000b6c:	fa09 f303 	lsl.w	r3, r9, r3
 8000b70:	4313      	orrs	r3, r2
 8000b72:	9304      	str	r3, [sp, #16]
 8000b74:	46a2      	mov	sl, r4
 8000b76:	e7d2      	b.n	8000b1e <_vfiprintf_r+0xe2>
 8000b78:	9b03      	ldr	r3, [sp, #12]
 8000b7a:	1d19      	adds	r1, r3, #4
 8000b7c:	681b      	ldr	r3, [r3, #0]
 8000b7e:	9103      	str	r1, [sp, #12]
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	bfbb      	ittet	lt
 8000b84:	425b      	neglt	r3, r3
 8000b86:	f042 0202 	orrlt.w	r2, r2, #2
 8000b8a:	9307      	strge	r3, [sp, #28]
 8000b8c:	9307      	strlt	r3, [sp, #28]
 8000b8e:	bfb8      	it	lt
 8000b90:	9204      	strlt	r2, [sp, #16]
 8000b92:	7823      	ldrb	r3, [r4, #0]
 8000b94:	2b2e      	cmp	r3, #46	; 0x2e
 8000b96:	d10c      	bne.n	8000bb2 <_vfiprintf_r+0x176>
 8000b98:	7863      	ldrb	r3, [r4, #1]
 8000b9a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b9c:	d135      	bne.n	8000c0a <_vfiprintf_r+0x1ce>
 8000b9e:	9b03      	ldr	r3, [sp, #12]
 8000ba0:	1d1a      	adds	r2, r3, #4
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	9203      	str	r2, [sp, #12]
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	bfb8      	it	lt
 8000baa:	f04f 33ff 	movlt.w	r3, #4294967295
 8000bae:	3402      	adds	r4, #2
 8000bb0:	9305      	str	r3, [sp, #20]
 8000bb2:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000c8c <_vfiprintf_r+0x250>
 8000bb6:	7821      	ldrb	r1, [r4, #0]
 8000bb8:	2203      	movs	r2, #3
 8000bba:	4650      	mov	r0, sl
 8000bbc:	f7ff fb28 	bl	8000210 <memchr>
 8000bc0:	b140      	cbz	r0, 8000bd4 <_vfiprintf_r+0x198>
 8000bc2:	2340      	movs	r3, #64	; 0x40
 8000bc4:	eba0 000a 	sub.w	r0, r0, sl
 8000bc8:	fa03 f000 	lsl.w	r0, r3, r0
 8000bcc:	9b04      	ldr	r3, [sp, #16]
 8000bce:	4303      	orrs	r3, r0
 8000bd0:	3401      	adds	r4, #1
 8000bd2:	9304      	str	r3, [sp, #16]
 8000bd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bd8:	482d      	ldr	r0, [pc, #180]	; (8000c90 <_vfiprintf_r+0x254>)
 8000bda:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bde:	2206      	movs	r2, #6
 8000be0:	f7ff fb16 	bl	8000210 <memchr>
 8000be4:	2800      	cmp	r0, #0
 8000be6:	d03f      	beq.n	8000c68 <_vfiprintf_r+0x22c>
 8000be8:	4b2a      	ldr	r3, [pc, #168]	; (8000c94 <_vfiprintf_r+0x258>)
 8000bea:	bb1b      	cbnz	r3, 8000c34 <_vfiprintf_r+0x1f8>
 8000bec:	9b03      	ldr	r3, [sp, #12]
 8000bee:	3307      	adds	r3, #7
 8000bf0:	f023 0307 	bic.w	r3, r3, #7
 8000bf4:	3308      	adds	r3, #8
 8000bf6:	9303      	str	r3, [sp, #12]
 8000bf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bfa:	443b      	add	r3, r7
 8000bfc:	9309      	str	r3, [sp, #36]	; 0x24
 8000bfe:	e767      	b.n	8000ad0 <_vfiprintf_r+0x94>
 8000c00:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c04:	460c      	mov	r4, r1
 8000c06:	2001      	movs	r0, #1
 8000c08:	e7a5      	b.n	8000b56 <_vfiprintf_r+0x11a>
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	3401      	adds	r4, #1
 8000c0e:	9305      	str	r3, [sp, #20]
 8000c10:	4619      	mov	r1, r3
 8000c12:	f04f 0c0a 	mov.w	ip, #10
 8000c16:	4620      	mov	r0, r4
 8000c18:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c1c:	3a30      	subs	r2, #48	; 0x30
 8000c1e:	2a09      	cmp	r2, #9
 8000c20:	d903      	bls.n	8000c2a <_vfiprintf_r+0x1ee>
 8000c22:	2b00      	cmp	r3, #0
 8000c24:	d0c5      	beq.n	8000bb2 <_vfiprintf_r+0x176>
 8000c26:	9105      	str	r1, [sp, #20]
 8000c28:	e7c3      	b.n	8000bb2 <_vfiprintf_r+0x176>
 8000c2a:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c2e:	4604      	mov	r4, r0
 8000c30:	2301      	movs	r3, #1
 8000c32:	e7f0      	b.n	8000c16 <_vfiprintf_r+0x1da>
 8000c34:	ab03      	add	r3, sp, #12
 8000c36:	9300      	str	r3, [sp, #0]
 8000c38:	462a      	mov	r2, r5
 8000c3a:	4b17      	ldr	r3, [pc, #92]	; (8000c98 <_vfiprintf_r+0x25c>)
 8000c3c:	a904      	add	r1, sp, #16
 8000c3e:	4630      	mov	r0, r6
 8000c40:	f3af 8000 	nop.w
 8000c44:	4607      	mov	r7, r0
 8000c46:	1c78      	adds	r0, r7, #1
 8000c48:	d1d6      	bne.n	8000bf8 <_vfiprintf_r+0x1bc>
 8000c4a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c4c:	07d9      	lsls	r1, r3, #31
 8000c4e:	d405      	bmi.n	8000c5c <_vfiprintf_r+0x220>
 8000c50:	89ab      	ldrh	r3, [r5, #12]
 8000c52:	059a      	lsls	r2, r3, #22
 8000c54:	d402      	bmi.n	8000c5c <_vfiprintf_r+0x220>
 8000c56:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c58:	f7ff fe32 	bl	80008c0 <__retarget_lock_release_recursive>
 8000c5c:	89ab      	ldrh	r3, [r5, #12]
 8000c5e:	065b      	lsls	r3, r3, #25
 8000c60:	f53f af12 	bmi.w	8000a88 <_vfiprintf_r+0x4c>
 8000c64:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c66:	e711      	b.n	8000a8c <_vfiprintf_r+0x50>
 8000c68:	ab03      	add	r3, sp, #12
 8000c6a:	9300      	str	r3, [sp, #0]
 8000c6c:	462a      	mov	r2, r5
 8000c6e:	4b0a      	ldr	r3, [pc, #40]	; (8000c98 <_vfiprintf_r+0x25c>)
 8000c70:	a904      	add	r1, sp, #16
 8000c72:	4630      	mov	r0, r6
 8000c74:	f000 f880 	bl	8000d78 <_printf_i>
 8000c78:	e7e4      	b.n	8000c44 <_vfiprintf_r+0x208>
 8000c7a:	bf00      	nop
 8000c7c:	08001828 	.word	0x08001828
 8000c80:	08001848 	.word	0x08001848
 8000c84:	08001808 	.word	0x08001808
 8000c88:	08001868 	.word	0x08001868
 8000c8c:	0800186e 	.word	0x0800186e
 8000c90:	08001872 	.word	0x08001872
 8000c94:	00000000 	.word	0x00000000
 8000c98:	08000a17 	.word	0x08000a17

08000c9c <_printf_common>:
 8000c9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca0:	4616      	mov	r6, r2
 8000ca2:	4699      	mov	r9, r3
 8000ca4:	688a      	ldr	r2, [r1, #8]
 8000ca6:	690b      	ldr	r3, [r1, #16]
 8000ca8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000cac:	4293      	cmp	r3, r2
 8000cae:	bfb8      	it	lt
 8000cb0:	4613      	movlt	r3, r2
 8000cb2:	6033      	str	r3, [r6, #0]
 8000cb4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000cb8:	4607      	mov	r7, r0
 8000cba:	460c      	mov	r4, r1
 8000cbc:	b10a      	cbz	r2, 8000cc2 <_printf_common+0x26>
 8000cbe:	3301      	adds	r3, #1
 8000cc0:	6033      	str	r3, [r6, #0]
 8000cc2:	6823      	ldr	r3, [r4, #0]
 8000cc4:	0699      	lsls	r1, r3, #26
 8000cc6:	bf42      	ittt	mi
 8000cc8:	6833      	ldrmi	r3, [r6, #0]
 8000cca:	3302      	addmi	r3, #2
 8000ccc:	6033      	strmi	r3, [r6, #0]
 8000cce:	6825      	ldr	r5, [r4, #0]
 8000cd0:	f015 0506 	ands.w	r5, r5, #6
 8000cd4:	d106      	bne.n	8000ce4 <_printf_common+0x48>
 8000cd6:	f104 0a19 	add.w	sl, r4, #25
 8000cda:	68e3      	ldr	r3, [r4, #12]
 8000cdc:	6832      	ldr	r2, [r6, #0]
 8000cde:	1a9b      	subs	r3, r3, r2
 8000ce0:	42ab      	cmp	r3, r5
 8000ce2:	dc26      	bgt.n	8000d32 <_printf_common+0x96>
 8000ce4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ce8:	1e13      	subs	r3, r2, #0
 8000cea:	6822      	ldr	r2, [r4, #0]
 8000cec:	bf18      	it	ne
 8000cee:	2301      	movne	r3, #1
 8000cf0:	0692      	lsls	r2, r2, #26
 8000cf2:	d42b      	bmi.n	8000d4c <_printf_common+0xb0>
 8000cf4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cf8:	4649      	mov	r1, r9
 8000cfa:	4638      	mov	r0, r7
 8000cfc:	47c0      	blx	r8
 8000cfe:	3001      	adds	r0, #1
 8000d00:	d01e      	beq.n	8000d40 <_printf_common+0xa4>
 8000d02:	6823      	ldr	r3, [r4, #0]
 8000d04:	68e5      	ldr	r5, [r4, #12]
 8000d06:	6832      	ldr	r2, [r6, #0]
 8000d08:	f003 0306 	and.w	r3, r3, #6
 8000d0c:	2b04      	cmp	r3, #4
 8000d0e:	bf08      	it	eq
 8000d10:	1aad      	subeq	r5, r5, r2
 8000d12:	68a3      	ldr	r3, [r4, #8]
 8000d14:	6922      	ldr	r2, [r4, #16]
 8000d16:	bf0c      	ite	eq
 8000d18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d1c:	2500      	movne	r5, #0
 8000d1e:	4293      	cmp	r3, r2
 8000d20:	bfc4      	itt	gt
 8000d22:	1a9b      	subgt	r3, r3, r2
 8000d24:	18ed      	addgt	r5, r5, r3
 8000d26:	2600      	movs	r6, #0
 8000d28:	341a      	adds	r4, #26
 8000d2a:	42b5      	cmp	r5, r6
 8000d2c:	d11a      	bne.n	8000d64 <_printf_common+0xc8>
 8000d2e:	2000      	movs	r0, #0
 8000d30:	e008      	b.n	8000d44 <_printf_common+0xa8>
 8000d32:	2301      	movs	r3, #1
 8000d34:	4652      	mov	r2, sl
 8000d36:	4649      	mov	r1, r9
 8000d38:	4638      	mov	r0, r7
 8000d3a:	47c0      	blx	r8
 8000d3c:	3001      	adds	r0, #1
 8000d3e:	d103      	bne.n	8000d48 <_printf_common+0xac>
 8000d40:	f04f 30ff 	mov.w	r0, #4294967295
 8000d44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d48:	3501      	adds	r5, #1
 8000d4a:	e7c6      	b.n	8000cda <_printf_common+0x3e>
 8000d4c:	18e1      	adds	r1, r4, r3
 8000d4e:	1c5a      	adds	r2, r3, #1
 8000d50:	2030      	movs	r0, #48	; 0x30
 8000d52:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d56:	4422      	add	r2, r4
 8000d58:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d5c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d60:	3302      	adds	r3, #2
 8000d62:	e7c7      	b.n	8000cf4 <_printf_common+0x58>
 8000d64:	2301      	movs	r3, #1
 8000d66:	4622      	mov	r2, r4
 8000d68:	4649      	mov	r1, r9
 8000d6a:	4638      	mov	r0, r7
 8000d6c:	47c0      	blx	r8
 8000d6e:	3001      	adds	r0, #1
 8000d70:	d0e6      	beq.n	8000d40 <_printf_common+0xa4>
 8000d72:	3601      	adds	r6, #1
 8000d74:	e7d9      	b.n	8000d2a <_printf_common+0x8e>
	...

08000d78 <_printf_i>:
 8000d78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d7c:	7e0f      	ldrb	r7, [r1, #24]
 8000d7e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d80:	2f78      	cmp	r7, #120	; 0x78
 8000d82:	4691      	mov	r9, r2
 8000d84:	4680      	mov	r8, r0
 8000d86:	460c      	mov	r4, r1
 8000d88:	469a      	mov	sl, r3
 8000d8a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d8e:	d807      	bhi.n	8000da0 <_printf_i+0x28>
 8000d90:	2f62      	cmp	r7, #98	; 0x62
 8000d92:	d80a      	bhi.n	8000daa <_printf_i+0x32>
 8000d94:	2f00      	cmp	r7, #0
 8000d96:	f000 80d8 	beq.w	8000f4a <_printf_i+0x1d2>
 8000d9a:	2f58      	cmp	r7, #88	; 0x58
 8000d9c:	f000 80a3 	beq.w	8000ee6 <_printf_i+0x16e>
 8000da0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000da4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000da8:	e03a      	b.n	8000e20 <_printf_i+0xa8>
 8000daa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000dae:	2b15      	cmp	r3, #21
 8000db0:	d8f6      	bhi.n	8000da0 <_printf_i+0x28>
 8000db2:	a101      	add	r1, pc, #4	; (adr r1, 8000db8 <_printf_i+0x40>)
 8000db4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000db8:	08000e11 	.word	0x08000e11
 8000dbc:	08000e25 	.word	0x08000e25
 8000dc0:	08000da1 	.word	0x08000da1
 8000dc4:	08000da1 	.word	0x08000da1
 8000dc8:	08000da1 	.word	0x08000da1
 8000dcc:	08000da1 	.word	0x08000da1
 8000dd0:	08000e25 	.word	0x08000e25
 8000dd4:	08000da1 	.word	0x08000da1
 8000dd8:	08000da1 	.word	0x08000da1
 8000ddc:	08000da1 	.word	0x08000da1
 8000de0:	08000da1 	.word	0x08000da1
 8000de4:	08000f31 	.word	0x08000f31
 8000de8:	08000e55 	.word	0x08000e55
 8000dec:	08000f13 	.word	0x08000f13
 8000df0:	08000da1 	.word	0x08000da1
 8000df4:	08000da1 	.word	0x08000da1
 8000df8:	08000f53 	.word	0x08000f53
 8000dfc:	08000da1 	.word	0x08000da1
 8000e00:	08000e55 	.word	0x08000e55
 8000e04:	08000da1 	.word	0x08000da1
 8000e08:	08000da1 	.word	0x08000da1
 8000e0c:	08000f1b 	.word	0x08000f1b
 8000e10:	682b      	ldr	r3, [r5, #0]
 8000e12:	1d1a      	adds	r2, r3, #4
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	602a      	str	r2, [r5, #0]
 8000e18:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e1c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e20:	2301      	movs	r3, #1
 8000e22:	e0a3      	b.n	8000f6c <_printf_i+0x1f4>
 8000e24:	6820      	ldr	r0, [r4, #0]
 8000e26:	6829      	ldr	r1, [r5, #0]
 8000e28:	0606      	lsls	r6, r0, #24
 8000e2a:	f101 0304 	add.w	r3, r1, #4
 8000e2e:	d50a      	bpl.n	8000e46 <_printf_i+0xce>
 8000e30:	680e      	ldr	r6, [r1, #0]
 8000e32:	602b      	str	r3, [r5, #0]
 8000e34:	2e00      	cmp	r6, #0
 8000e36:	da03      	bge.n	8000e40 <_printf_i+0xc8>
 8000e38:	232d      	movs	r3, #45	; 0x2d
 8000e3a:	4276      	negs	r6, r6
 8000e3c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e40:	485e      	ldr	r0, [pc, #376]	; (8000fbc <_printf_i+0x244>)
 8000e42:	230a      	movs	r3, #10
 8000e44:	e019      	b.n	8000e7a <_printf_i+0x102>
 8000e46:	680e      	ldr	r6, [r1, #0]
 8000e48:	602b      	str	r3, [r5, #0]
 8000e4a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e4e:	bf18      	it	ne
 8000e50:	b236      	sxthne	r6, r6
 8000e52:	e7ef      	b.n	8000e34 <_printf_i+0xbc>
 8000e54:	682b      	ldr	r3, [r5, #0]
 8000e56:	6820      	ldr	r0, [r4, #0]
 8000e58:	1d19      	adds	r1, r3, #4
 8000e5a:	6029      	str	r1, [r5, #0]
 8000e5c:	0601      	lsls	r1, r0, #24
 8000e5e:	d501      	bpl.n	8000e64 <_printf_i+0xec>
 8000e60:	681e      	ldr	r6, [r3, #0]
 8000e62:	e002      	b.n	8000e6a <_printf_i+0xf2>
 8000e64:	0646      	lsls	r6, r0, #25
 8000e66:	d5fb      	bpl.n	8000e60 <_printf_i+0xe8>
 8000e68:	881e      	ldrh	r6, [r3, #0]
 8000e6a:	4854      	ldr	r0, [pc, #336]	; (8000fbc <_printf_i+0x244>)
 8000e6c:	2f6f      	cmp	r7, #111	; 0x6f
 8000e6e:	bf0c      	ite	eq
 8000e70:	2308      	moveq	r3, #8
 8000e72:	230a      	movne	r3, #10
 8000e74:	2100      	movs	r1, #0
 8000e76:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e7a:	6865      	ldr	r5, [r4, #4]
 8000e7c:	60a5      	str	r5, [r4, #8]
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	bfa2      	ittt	ge
 8000e82:	6821      	ldrge	r1, [r4, #0]
 8000e84:	f021 0104 	bicge.w	r1, r1, #4
 8000e88:	6021      	strge	r1, [r4, #0]
 8000e8a:	b90e      	cbnz	r6, 8000e90 <_printf_i+0x118>
 8000e8c:	2d00      	cmp	r5, #0
 8000e8e:	d04d      	beq.n	8000f2c <_printf_i+0x1b4>
 8000e90:	4615      	mov	r5, r2
 8000e92:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e96:	fb03 6711 	mls	r7, r3, r1, r6
 8000e9a:	5dc7      	ldrb	r7, [r0, r7]
 8000e9c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000ea0:	4637      	mov	r7, r6
 8000ea2:	42bb      	cmp	r3, r7
 8000ea4:	460e      	mov	r6, r1
 8000ea6:	d9f4      	bls.n	8000e92 <_printf_i+0x11a>
 8000ea8:	2b08      	cmp	r3, #8
 8000eaa:	d10b      	bne.n	8000ec4 <_printf_i+0x14c>
 8000eac:	6823      	ldr	r3, [r4, #0]
 8000eae:	07de      	lsls	r6, r3, #31
 8000eb0:	d508      	bpl.n	8000ec4 <_printf_i+0x14c>
 8000eb2:	6923      	ldr	r3, [r4, #16]
 8000eb4:	6861      	ldr	r1, [r4, #4]
 8000eb6:	4299      	cmp	r1, r3
 8000eb8:	bfde      	ittt	le
 8000eba:	2330      	movle	r3, #48	; 0x30
 8000ebc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000ec0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000ec4:	1b52      	subs	r2, r2, r5
 8000ec6:	6122      	str	r2, [r4, #16]
 8000ec8:	f8cd a000 	str.w	sl, [sp]
 8000ecc:	464b      	mov	r3, r9
 8000ece:	aa03      	add	r2, sp, #12
 8000ed0:	4621      	mov	r1, r4
 8000ed2:	4640      	mov	r0, r8
 8000ed4:	f7ff fee2 	bl	8000c9c <_printf_common>
 8000ed8:	3001      	adds	r0, #1
 8000eda:	d14c      	bne.n	8000f76 <_printf_i+0x1fe>
 8000edc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee0:	b004      	add	sp, #16
 8000ee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ee6:	4835      	ldr	r0, [pc, #212]	; (8000fbc <_printf_i+0x244>)
 8000ee8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000eec:	6829      	ldr	r1, [r5, #0]
 8000eee:	6823      	ldr	r3, [r4, #0]
 8000ef0:	f851 6b04 	ldr.w	r6, [r1], #4
 8000ef4:	6029      	str	r1, [r5, #0]
 8000ef6:	061d      	lsls	r5, r3, #24
 8000ef8:	d514      	bpl.n	8000f24 <_printf_i+0x1ac>
 8000efa:	07df      	lsls	r7, r3, #31
 8000efc:	bf44      	itt	mi
 8000efe:	f043 0320 	orrmi.w	r3, r3, #32
 8000f02:	6023      	strmi	r3, [r4, #0]
 8000f04:	b91e      	cbnz	r6, 8000f0e <_printf_i+0x196>
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	f023 0320 	bic.w	r3, r3, #32
 8000f0c:	6023      	str	r3, [r4, #0]
 8000f0e:	2310      	movs	r3, #16
 8000f10:	e7b0      	b.n	8000e74 <_printf_i+0xfc>
 8000f12:	6823      	ldr	r3, [r4, #0]
 8000f14:	f043 0320 	orr.w	r3, r3, #32
 8000f18:	6023      	str	r3, [r4, #0]
 8000f1a:	2378      	movs	r3, #120	; 0x78
 8000f1c:	4828      	ldr	r0, [pc, #160]	; (8000fc0 <_printf_i+0x248>)
 8000f1e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000f22:	e7e3      	b.n	8000eec <_printf_i+0x174>
 8000f24:	0659      	lsls	r1, r3, #25
 8000f26:	bf48      	it	mi
 8000f28:	b2b6      	uxthmi	r6, r6
 8000f2a:	e7e6      	b.n	8000efa <_printf_i+0x182>
 8000f2c:	4615      	mov	r5, r2
 8000f2e:	e7bb      	b.n	8000ea8 <_printf_i+0x130>
 8000f30:	682b      	ldr	r3, [r5, #0]
 8000f32:	6826      	ldr	r6, [r4, #0]
 8000f34:	6961      	ldr	r1, [r4, #20]
 8000f36:	1d18      	adds	r0, r3, #4
 8000f38:	6028      	str	r0, [r5, #0]
 8000f3a:	0635      	lsls	r5, r6, #24
 8000f3c:	681b      	ldr	r3, [r3, #0]
 8000f3e:	d501      	bpl.n	8000f44 <_printf_i+0x1cc>
 8000f40:	6019      	str	r1, [r3, #0]
 8000f42:	e002      	b.n	8000f4a <_printf_i+0x1d2>
 8000f44:	0670      	lsls	r0, r6, #25
 8000f46:	d5fb      	bpl.n	8000f40 <_printf_i+0x1c8>
 8000f48:	8019      	strh	r1, [r3, #0]
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	6123      	str	r3, [r4, #16]
 8000f4e:	4615      	mov	r5, r2
 8000f50:	e7ba      	b.n	8000ec8 <_printf_i+0x150>
 8000f52:	682b      	ldr	r3, [r5, #0]
 8000f54:	1d1a      	adds	r2, r3, #4
 8000f56:	602a      	str	r2, [r5, #0]
 8000f58:	681d      	ldr	r5, [r3, #0]
 8000f5a:	6862      	ldr	r2, [r4, #4]
 8000f5c:	2100      	movs	r1, #0
 8000f5e:	4628      	mov	r0, r5
 8000f60:	f7ff f956 	bl	8000210 <memchr>
 8000f64:	b108      	cbz	r0, 8000f6a <_printf_i+0x1f2>
 8000f66:	1b40      	subs	r0, r0, r5
 8000f68:	6060      	str	r0, [r4, #4]
 8000f6a:	6863      	ldr	r3, [r4, #4]
 8000f6c:	6123      	str	r3, [r4, #16]
 8000f6e:	2300      	movs	r3, #0
 8000f70:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f74:	e7a8      	b.n	8000ec8 <_printf_i+0x150>
 8000f76:	6923      	ldr	r3, [r4, #16]
 8000f78:	462a      	mov	r2, r5
 8000f7a:	4649      	mov	r1, r9
 8000f7c:	4640      	mov	r0, r8
 8000f7e:	47d0      	blx	sl
 8000f80:	3001      	adds	r0, #1
 8000f82:	d0ab      	beq.n	8000edc <_printf_i+0x164>
 8000f84:	6823      	ldr	r3, [r4, #0]
 8000f86:	079b      	lsls	r3, r3, #30
 8000f88:	d413      	bmi.n	8000fb2 <_printf_i+0x23a>
 8000f8a:	68e0      	ldr	r0, [r4, #12]
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	4298      	cmp	r0, r3
 8000f90:	bfb8      	it	lt
 8000f92:	4618      	movlt	r0, r3
 8000f94:	e7a4      	b.n	8000ee0 <_printf_i+0x168>
 8000f96:	2301      	movs	r3, #1
 8000f98:	4632      	mov	r2, r6
 8000f9a:	4649      	mov	r1, r9
 8000f9c:	4640      	mov	r0, r8
 8000f9e:	47d0      	blx	sl
 8000fa0:	3001      	adds	r0, #1
 8000fa2:	d09b      	beq.n	8000edc <_printf_i+0x164>
 8000fa4:	3501      	adds	r5, #1
 8000fa6:	68e3      	ldr	r3, [r4, #12]
 8000fa8:	9903      	ldr	r1, [sp, #12]
 8000faa:	1a5b      	subs	r3, r3, r1
 8000fac:	42ab      	cmp	r3, r5
 8000fae:	dcf2      	bgt.n	8000f96 <_printf_i+0x21e>
 8000fb0:	e7eb      	b.n	8000f8a <_printf_i+0x212>
 8000fb2:	2500      	movs	r5, #0
 8000fb4:	f104 0619 	add.w	r6, r4, #25
 8000fb8:	e7f5      	b.n	8000fa6 <_printf_i+0x22e>
 8000fba:	bf00      	nop
 8000fbc:	08001879 	.word	0x08001879
 8000fc0:	0800188a 	.word	0x0800188a

08000fc4 <__srget_r>:
 8000fc4:	b538      	push	{r3, r4, r5, lr}
 8000fc6:	460c      	mov	r4, r1
 8000fc8:	4605      	mov	r5, r0
 8000fca:	b118      	cbz	r0, 8000fd4 <__srget_r+0x10>
 8000fcc:	6983      	ldr	r3, [r0, #24]
 8000fce:	b90b      	cbnz	r3, 8000fd4 <__srget_r+0x10>
 8000fd0:	f7ff fb7a 	bl	80006c8 <__sinit>
 8000fd4:	4b0e      	ldr	r3, [pc, #56]	; (8001010 <__srget_r+0x4c>)
 8000fd6:	429c      	cmp	r4, r3
 8000fd8:	d10d      	bne.n	8000ff6 <__srget_r+0x32>
 8000fda:	686c      	ldr	r4, [r5, #4]
 8000fdc:	4621      	mov	r1, r4
 8000fde:	4628      	mov	r0, r5
 8000fe0:	f000 fb0c 	bl	80015fc <__srefill_r>
 8000fe4:	b988      	cbnz	r0, 800100a <__srget_r+0x46>
 8000fe6:	6863      	ldr	r3, [r4, #4]
 8000fe8:	3b01      	subs	r3, #1
 8000fea:	6063      	str	r3, [r4, #4]
 8000fec:	6823      	ldr	r3, [r4, #0]
 8000fee:	1c5a      	adds	r2, r3, #1
 8000ff0:	6022      	str	r2, [r4, #0]
 8000ff2:	7818      	ldrb	r0, [r3, #0]
 8000ff4:	bd38      	pop	{r3, r4, r5, pc}
 8000ff6:	4b07      	ldr	r3, [pc, #28]	; (8001014 <__srget_r+0x50>)
 8000ff8:	429c      	cmp	r4, r3
 8000ffa:	d101      	bne.n	8001000 <__srget_r+0x3c>
 8000ffc:	68ac      	ldr	r4, [r5, #8]
 8000ffe:	e7ed      	b.n	8000fdc <__srget_r+0x18>
 8001000:	4b05      	ldr	r3, [pc, #20]	; (8001018 <__srget_r+0x54>)
 8001002:	429c      	cmp	r4, r3
 8001004:	bf08      	it	eq
 8001006:	68ec      	ldreq	r4, [r5, #12]
 8001008:	e7e8      	b.n	8000fdc <__srget_r+0x18>
 800100a:	f04f 30ff 	mov.w	r0, #4294967295
 800100e:	e7f1      	b.n	8000ff4 <__srget_r+0x30>
 8001010:	08001828 	.word	0x08001828
 8001014:	08001848 	.word	0x08001848
 8001018:	08001808 	.word	0x08001808

0800101c <_sbrk_r>:
 800101c:	b538      	push	{r3, r4, r5, lr}
 800101e:	4d06      	ldr	r5, [pc, #24]	; (8001038 <_sbrk_r+0x1c>)
 8001020:	2300      	movs	r3, #0
 8001022:	4604      	mov	r4, r0
 8001024:	4608      	mov	r0, r1
 8001026:	602b      	str	r3, [r5, #0]
 8001028:	f7ff fa3a 	bl	80004a0 <_sbrk>
 800102c:	1c43      	adds	r3, r0, #1
 800102e:	d102      	bne.n	8001036 <_sbrk_r+0x1a>
 8001030:	682b      	ldr	r3, [r5, #0]
 8001032:	b103      	cbz	r3, 8001036 <_sbrk_r+0x1a>
 8001034:	6023      	str	r3, [r4, #0]
 8001036:	bd38      	pop	{r3, r4, r5, pc}
 8001038:	20000090 	.word	0x20000090

0800103c <__sread>:
 800103c:	b510      	push	{r4, lr}
 800103e:	460c      	mov	r4, r1
 8001040:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001044:	f000 fabe 	bl	80015c4 <_read_r>
 8001048:	2800      	cmp	r0, #0
 800104a:	bfab      	itete	ge
 800104c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800104e:	89a3      	ldrhlt	r3, [r4, #12]
 8001050:	181b      	addge	r3, r3, r0
 8001052:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001056:	bfac      	ite	ge
 8001058:	6563      	strge	r3, [r4, #84]	; 0x54
 800105a:	81a3      	strhlt	r3, [r4, #12]
 800105c:	bd10      	pop	{r4, pc}

0800105e <__swrite>:
 800105e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001062:	461f      	mov	r7, r3
 8001064:	898b      	ldrh	r3, [r1, #12]
 8001066:	05db      	lsls	r3, r3, #23
 8001068:	4605      	mov	r5, r0
 800106a:	460c      	mov	r4, r1
 800106c:	4616      	mov	r6, r2
 800106e:	d505      	bpl.n	800107c <__swrite+0x1e>
 8001070:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001074:	2302      	movs	r3, #2
 8001076:	2200      	movs	r2, #0
 8001078:	f000 f9d6 	bl	8001428 <_lseek_r>
 800107c:	89a3      	ldrh	r3, [r4, #12]
 800107e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001082:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001086:	81a3      	strh	r3, [r4, #12]
 8001088:	4632      	mov	r2, r6
 800108a:	463b      	mov	r3, r7
 800108c:	4628      	mov	r0, r5
 800108e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001092:	f000 b869 	b.w	8001168 <_write_r>

08001096 <__sseek>:
 8001096:	b510      	push	{r4, lr}
 8001098:	460c      	mov	r4, r1
 800109a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800109e:	f000 f9c3 	bl	8001428 <_lseek_r>
 80010a2:	1c43      	adds	r3, r0, #1
 80010a4:	89a3      	ldrh	r3, [r4, #12]
 80010a6:	bf15      	itete	ne
 80010a8:	6560      	strne	r0, [r4, #84]	; 0x54
 80010aa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80010ae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80010b2:	81a3      	strheq	r3, [r4, #12]
 80010b4:	bf18      	it	ne
 80010b6:	81a3      	strhne	r3, [r4, #12]
 80010b8:	bd10      	pop	{r4, pc}

080010ba <__sclose>:
 80010ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010be:	f000 b8d3 	b.w	8001268 <_close_r>
	...

080010c4 <__swbuf_r>:
 80010c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010c6:	460e      	mov	r6, r1
 80010c8:	4614      	mov	r4, r2
 80010ca:	4605      	mov	r5, r0
 80010cc:	b118      	cbz	r0, 80010d6 <__swbuf_r+0x12>
 80010ce:	6983      	ldr	r3, [r0, #24]
 80010d0:	b90b      	cbnz	r3, 80010d6 <__swbuf_r+0x12>
 80010d2:	f7ff faf9 	bl	80006c8 <__sinit>
 80010d6:	4b21      	ldr	r3, [pc, #132]	; (800115c <__swbuf_r+0x98>)
 80010d8:	429c      	cmp	r4, r3
 80010da:	d12b      	bne.n	8001134 <__swbuf_r+0x70>
 80010dc:	686c      	ldr	r4, [r5, #4]
 80010de:	69a3      	ldr	r3, [r4, #24]
 80010e0:	60a3      	str	r3, [r4, #8]
 80010e2:	89a3      	ldrh	r3, [r4, #12]
 80010e4:	071a      	lsls	r2, r3, #28
 80010e6:	d52f      	bpl.n	8001148 <__swbuf_r+0x84>
 80010e8:	6923      	ldr	r3, [r4, #16]
 80010ea:	b36b      	cbz	r3, 8001148 <__swbuf_r+0x84>
 80010ec:	6923      	ldr	r3, [r4, #16]
 80010ee:	6820      	ldr	r0, [r4, #0]
 80010f0:	1ac0      	subs	r0, r0, r3
 80010f2:	6963      	ldr	r3, [r4, #20]
 80010f4:	b2f6      	uxtb	r6, r6
 80010f6:	4283      	cmp	r3, r0
 80010f8:	4637      	mov	r7, r6
 80010fa:	dc04      	bgt.n	8001106 <__swbuf_r+0x42>
 80010fc:	4621      	mov	r1, r4
 80010fe:	4628      	mov	r0, r5
 8001100:	f000 f944 	bl	800138c <_fflush_r>
 8001104:	bb30      	cbnz	r0, 8001154 <__swbuf_r+0x90>
 8001106:	68a3      	ldr	r3, [r4, #8]
 8001108:	3b01      	subs	r3, #1
 800110a:	60a3      	str	r3, [r4, #8]
 800110c:	6823      	ldr	r3, [r4, #0]
 800110e:	1c5a      	adds	r2, r3, #1
 8001110:	6022      	str	r2, [r4, #0]
 8001112:	701e      	strb	r6, [r3, #0]
 8001114:	6963      	ldr	r3, [r4, #20]
 8001116:	3001      	adds	r0, #1
 8001118:	4283      	cmp	r3, r0
 800111a:	d004      	beq.n	8001126 <__swbuf_r+0x62>
 800111c:	89a3      	ldrh	r3, [r4, #12]
 800111e:	07db      	lsls	r3, r3, #31
 8001120:	d506      	bpl.n	8001130 <__swbuf_r+0x6c>
 8001122:	2e0a      	cmp	r6, #10
 8001124:	d104      	bne.n	8001130 <__swbuf_r+0x6c>
 8001126:	4621      	mov	r1, r4
 8001128:	4628      	mov	r0, r5
 800112a:	f000 f92f 	bl	800138c <_fflush_r>
 800112e:	b988      	cbnz	r0, 8001154 <__swbuf_r+0x90>
 8001130:	4638      	mov	r0, r7
 8001132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001134:	4b0a      	ldr	r3, [pc, #40]	; (8001160 <__swbuf_r+0x9c>)
 8001136:	429c      	cmp	r4, r3
 8001138:	d101      	bne.n	800113e <__swbuf_r+0x7a>
 800113a:	68ac      	ldr	r4, [r5, #8]
 800113c:	e7cf      	b.n	80010de <__swbuf_r+0x1a>
 800113e:	4b09      	ldr	r3, [pc, #36]	; (8001164 <__swbuf_r+0xa0>)
 8001140:	429c      	cmp	r4, r3
 8001142:	bf08      	it	eq
 8001144:	68ec      	ldreq	r4, [r5, #12]
 8001146:	e7ca      	b.n	80010de <__swbuf_r+0x1a>
 8001148:	4621      	mov	r1, r4
 800114a:	4628      	mov	r0, r5
 800114c:	f000 f81e 	bl	800118c <__swsetup_r>
 8001150:	2800      	cmp	r0, #0
 8001152:	d0cb      	beq.n	80010ec <__swbuf_r+0x28>
 8001154:	f04f 37ff 	mov.w	r7, #4294967295
 8001158:	e7ea      	b.n	8001130 <__swbuf_r+0x6c>
 800115a:	bf00      	nop
 800115c:	08001828 	.word	0x08001828
 8001160:	08001848 	.word	0x08001848
 8001164:	08001808 	.word	0x08001808

08001168 <_write_r>:
 8001168:	b538      	push	{r3, r4, r5, lr}
 800116a:	4d07      	ldr	r5, [pc, #28]	; (8001188 <_write_r+0x20>)
 800116c:	4604      	mov	r4, r0
 800116e:	4608      	mov	r0, r1
 8001170:	4611      	mov	r1, r2
 8001172:	2200      	movs	r2, #0
 8001174:	602a      	str	r2, [r5, #0]
 8001176:	461a      	mov	r2, r3
 8001178:	f7ff f945 	bl	8000406 <_write>
 800117c:	1c43      	adds	r3, r0, #1
 800117e:	d102      	bne.n	8001186 <_write_r+0x1e>
 8001180:	682b      	ldr	r3, [r5, #0]
 8001182:	b103      	cbz	r3, 8001186 <_write_r+0x1e>
 8001184:	6023      	str	r3, [r4, #0]
 8001186:	bd38      	pop	{r3, r4, r5, pc}
 8001188:	20000090 	.word	0x20000090

0800118c <__swsetup_r>:
 800118c:	4b32      	ldr	r3, [pc, #200]	; (8001258 <__swsetup_r+0xcc>)
 800118e:	b570      	push	{r4, r5, r6, lr}
 8001190:	681d      	ldr	r5, [r3, #0]
 8001192:	4606      	mov	r6, r0
 8001194:	460c      	mov	r4, r1
 8001196:	b125      	cbz	r5, 80011a2 <__swsetup_r+0x16>
 8001198:	69ab      	ldr	r3, [r5, #24]
 800119a:	b913      	cbnz	r3, 80011a2 <__swsetup_r+0x16>
 800119c:	4628      	mov	r0, r5
 800119e:	f7ff fa93 	bl	80006c8 <__sinit>
 80011a2:	4b2e      	ldr	r3, [pc, #184]	; (800125c <__swsetup_r+0xd0>)
 80011a4:	429c      	cmp	r4, r3
 80011a6:	d10f      	bne.n	80011c8 <__swsetup_r+0x3c>
 80011a8:	686c      	ldr	r4, [r5, #4]
 80011aa:	89a3      	ldrh	r3, [r4, #12]
 80011ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011b0:	0719      	lsls	r1, r3, #28
 80011b2:	d42c      	bmi.n	800120e <__swsetup_r+0x82>
 80011b4:	06dd      	lsls	r5, r3, #27
 80011b6:	d411      	bmi.n	80011dc <__swsetup_r+0x50>
 80011b8:	2309      	movs	r3, #9
 80011ba:	6033      	str	r3, [r6, #0]
 80011bc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80011c0:	81a3      	strh	r3, [r4, #12]
 80011c2:	f04f 30ff 	mov.w	r0, #4294967295
 80011c6:	e03e      	b.n	8001246 <__swsetup_r+0xba>
 80011c8:	4b25      	ldr	r3, [pc, #148]	; (8001260 <__swsetup_r+0xd4>)
 80011ca:	429c      	cmp	r4, r3
 80011cc:	d101      	bne.n	80011d2 <__swsetup_r+0x46>
 80011ce:	68ac      	ldr	r4, [r5, #8]
 80011d0:	e7eb      	b.n	80011aa <__swsetup_r+0x1e>
 80011d2:	4b24      	ldr	r3, [pc, #144]	; (8001264 <__swsetup_r+0xd8>)
 80011d4:	429c      	cmp	r4, r3
 80011d6:	bf08      	it	eq
 80011d8:	68ec      	ldreq	r4, [r5, #12]
 80011da:	e7e6      	b.n	80011aa <__swsetup_r+0x1e>
 80011dc:	0758      	lsls	r0, r3, #29
 80011de:	d512      	bpl.n	8001206 <__swsetup_r+0x7a>
 80011e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011e2:	b141      	cbz	r1, 80011f6 <__swsetup_r+0x6a>
 80011e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011e8:	4299      	cmp	r1, r3
 80011ea:	d002      	beq.n	80011f2 <__swsetup_r+0x66>
 80011ec:	4630      	mov	r0, r6
 80011ee:	f000 f99f 	bl	8001530 <_free_r>
 80011f2:	2300      	movs	r3, #0
 80011f4:	6363      	str	r3, [r4, #52]	; 0x34
 80011f6:	89a3      	ldrh	r3, [r4, #12]
 80011f8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011fc:	81a3      	strh	r3, [r4, #12]
 80011fe:	2300      	movs	r3, #0
 8001200:	6063      	str	r3, [r4, #4]
 8001202:	6923      	ldr	r3, [r4, #16]
 8001204:	6023      	str	r3, [r4, #0]
 8001206:	89a3      	ldrh	r3, [r4, #12]
 8001208:	f043 0308 	orr.w	r3, r3, #8
 800120c:	81a3      	strh	r3, [r4, #12]
 800120e:	6923      	ldr	r3, [r4, #16]
 8001210:	b94b      	cbnz	r3, 8001226 <__swsetup_r+0x9a>
 8001212:	89a3      	ldrh	r3, [r4, #12]
 8001214:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001218:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800121c:	d003      	beq.n	8001226 <__swsetup_r+0x9a>
 800121e:	4621      	mov	r1, r4
 8001220:	4630      	mov	r0, r6
 8001222:	f000 f939 	bl	8001498 <__smakebuf_r>
 8001226:	89a0      	ldrh	r0, [r4, #12]
 8001228:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800122c:	f010 0301 	ands.w	r3, r0, #1
 8001230:	d00a      	beq.n	8001248 <__swsetup_r+0xbc>
 8001232:	2300      	movs	r3, #0
 8001234:	60a3      	str	r3, [r4, #8]
 8001236:	6963      	ldr	r3, [r4, #20]
 8001238:	425b      	negs	r3, r3
 800123a:	61a3      	str	r3, [r4, #24]
 800123c:	6923      	ldr	r3, [r4, #16]
 800123e:	b943      	cbnz	r3, 8001252 <__swsetup_r+0xc6>
 8001240:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001244:	d1ba      	bne.n	80011bc <__swsetup_r+0x30>
 8001246:	bd70      	pop	{r4, r5, r6, pc}
 8001248:	0781      	lsls	r1, r0, #30
 800124a:	bf58      	it	pl
 800124c:	6963      	ldrpl	r3, [r4, #20]
 800124e:	60a3      	str	r3, [r4, #8]
 8001250:	e7f4      	b.n	800123c <__swsetup_r+0xb0>
 8001252:	2000      	movs	r0, #0
 8001254:	e7f7      	b.n	8001246 <__swsetup_r+0xba>
 8001256:	bf00      	nop
 8001258:	20000000 	.word	0x20000000
 800125c:	08001828 	.word	0x08001828
 8001260:	08001848 	.word	0x08001848
 8001264:	08001808 	.word	0x08001808

08001268 <_close_r>:
 8001268:	b538      	push	{r3, r4, r5, lr}
 800126a:	4d06      	ldr	r5, [pc, #24]	; (8001284 <_close_r+0x1c>)
 800126c:	2300      	movs	r3, #0
 800126e:	4604      	mov	r4, r0
 8001270:	4608      	mov	r0, r1
 8001272:	602b      	str	r3, [r5, #0]
 8001274:	f7ff f8e3 	bl	800043e <_close>
 8001278:	1c43      	adds	r3, r0, #1
 800127a:	d102      	bne.n	8001282 <_close_r+0x1a>
 800127c:	682b      	ldr	r3, [r5, #0]
 800127e:	b103      	cbz	r3, 8001282 <_close_r+0x1a>
 8001280:	6023      	str	r3, [r4, #0]
 8001282:	bd38      	pop	{r3, r4, r5, pc}
 8001284:	20000090 	.word	0x20000090

08001288 <__sflush_r>:
 8001288:	898a      	ldrh	r2, [r1, #12]
 800128a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800128c:	4605      	mov	r5, r0
 800128e:	0710      	lsls	r0, r2, #28
 8001290:	460c      	mov	r4, r1
 8001292:	d457      	bmi.n	8001344 <__sflush_r+0xbc>
 8001294:	684b      	ldr	r3, [r1, #4]
 8001296:	2b00      	cmp	r3, #0
 8001298:	dc04      	bgt.n	80012a4 <__sflush_r+0x1c>
 800129a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800129c:	2b00      	cmp	r3, #0
 800129e:	dc01      	bgt.n	80012a4 <__sflush_r+0x1c>
 80012a0:	2000      	movs	r0, #0
 80012a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80012a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80012a6:	2e00      	cmp	r6, #0
 80012a8:	d0fa      	beq.n	80012a0 <__sflush_r+0x18>
 80012aa:	2300      	movs	r3, #0
 80012ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80012b0:	682f      	ldr	r7, [r5, #0]
 80012b2:	602b      	str	r3, [r5, #0]
 80012b4:	d032      	beq.n	800131c <__sflush_r+0x94>
 80012b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80012b8:	89a3      	ldrh	r3, [r4, #12]
 80012ba:	075a      	lsls	r2, r3, #29
 80012bc:	d505      	bpl.n	80012ca <__sflush_r+0x42>
 80012be:	6863      	ldr	r3, [r4, #4]
 80012c0:	1ac0      	subs	r0, r0, r3
 80012c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80012c4:	b10b      	cbz	r3, 80012ca <__sflush_r+0x42>
 80012c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80012c8:	1ac0      	subs	r0, r0, r3
 80012ca:	2300      	movs	r3, #0
 80012cc:	4602      	mov	r2, r0
 80012ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80012d0:	6a21      	ldr	r1, [r4, #32]
 80012d2:	4628      	mov	r0, r5
 80012d4:	47b0      	blx	r6
 80012d6:	1c43      	adds	r3, r0, #1
 80012d8:	89a3      	ldrh	r3, [r4, #12]
 80012da:	d106      	bne.n	80012ea <__sflush_r+0x62>
 80012dc:	6829      	ldr	r1, [r5, #0]
 80012de:	291d      	cmp	r1, #29
 80012e0:	d82c      	bhi.n	800133c <__sflush_r+0xb4>
 80012e2:	4a29      	ldr	r2, [pc, #164]	; (8001388 <__sflush_r+0x100>)
 80012e4:	40ca      	lsrs	r2, r1
 80012e6:	07d6      	lsls	r6, r2, #31
 80012e8:	d528      	bpl.n	800133c <__sflush_r+0xb4>
 80012ea:	2200      	movs	r2, #0
 80012ec:	6062      	str	r2, [r4, #4]
 80012ee:	04d9      	lsls	r1, r3, #19
 80012f0:	6922      	ldr	r2, [r4, #16]
 80012f2:	6022      	str	r2, [r4, #0]
 80012f4:	d504      	bpl.n	8001300 <__sflush_r+0x78>
 80012f6:	1c42      	adds	r2, r0, #1
 80012f8:	d101      	bne.n	80012fe <__sflush_r+0x76>
 80012fa:	682b      	ldr	r3, [r5, #0]
 80012fc:	b903      	cbnz	r3, 8001300 <__sflush_r+0x78>
 80012fe:	6560      	str	r0, [r4, #84]	; 0x54
 8001300:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001302:	602f      	str	r7, [r5, #0]
 8001304:	2900      	cmp	r1, #0
 8001306:	d0cb      	beq.n	80012a0 <__sflush_r+0x18>
 8001308:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800130c:	4299      	cmp	r1, r3
 800130e:	d002      	beq.n	8001316 <__sflush_r+0x8e>
 8001310:	4628      	mov	r0, r5
 8001312:	f000 f90d 	bl	8001530 <_free_r>
 8001316:	2000      	movs	r0, #0
 8001318:	6360      	str	r0, [r4, #52]	; 0x34
 800131a:	e7c2      	b.n	80012a2 <__sflush_r+0x1a>
 800131c:	6a21      	ldr	r1, [r4, #32]
 800131e:	2301      	movs	r3, #1
 8001320:	4628      	mov	r0, r5
 8001322:	47b0      	blx	r6
 8001324:	1c41      	adds	r1, r0, #1
 8001326:	d1c7      	bne.n	80012b8 <__sflush_r+0x30>
 8001328:	682b      	ldr	r3, [r5, #0]
 800132a:	2b00      	cmp	r3, #0
 800132c:	d0c4      	beq.n	80012b8 <__sflush_r+0x30>
 800132e:	2b1d      	cmp	r3, #29
 8001330:	d001      	beq.n	8001336 <__sflush_r+0xae>
 8001332:	2b16      	cmp	r3, #22
 8001334:	d101      	bne.n	800133a <__sflush_r+0xb2>
 8001336:	602f      	str	r7, [r5, #0]
 8001338:	e7b2      	b.n	80012a0 <__sflush_r+0x18>
 800133a:	89a3      	ldrh	r3, [r4, #12]
 800133c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001340:	81a3      	strh	r3, [r4, #12]
 8001342:	e7ae      	b.n	80012a2 <__sflush_r+0x1a>
 8001344:	690f      	ldr	r7, [r1, #16]
 8001346:	2f00      	cmp	r7, #0
 8001348:	d0aa      	beq.n	80012a0 <__sflush_r+0x18>
 800134a:	0793      	lsls	r3, r2, #30
 800134c:	680e      	ldr	r6, [r1, #0]
 800134e:	bf08      	it	eq
 8001350:	694b      	ldreq	r3, [r1, #20]
 8001352:	600f      	str	r7, [r1, #0]
 8001354:	bf18      	it	ne
 8001356:	2300      	movne	r3, #0
 8001358:	1bf6      	subs	r6, r6, r7
 800135a:	608b      	str	r3, [r1, #8]
 800135c:	2e00      	cmp	r6, #0
 800135e:	dd9f      	ble.n	80012a0 <__sflush_r+0x18>
 8001360:	6a21      	ldr	r1, [r4, #32]
 8001362:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001366:	4633      	mov	r3, r6
 8001368:	463a      	mov	r2, r7
 800136a:	4628      	mov	r0, r5
 800136c:	47e0      	blx	ip
 800136e:	2800      	cmp	r0, #0
 8001370:	dc06      	bgt.n	8001380 <__sflush_r+0xf8>
 8001372:	89a3      	ldrh	r3, [r4, #12]
 8001374:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001378:	81a3      	strh	r3, [r4, #12]
 800137a:	f04f 30ff 	mov.w	r0, #4294967295
 800137e:	e790      	b.n	80012a2 <__sflush_r+0x1a>
 8001380:	4407      	add	r7, r0
 8001382:	1a36      	subs	r6, r6, r0
 8001384:	e7ea      	b.n	800135c <__sflush_r+0xd4>
 8001386:	bf00      	nop
 8001388:	20400001 	.word	0x20400001

0800138c <_fflush_r>:
 800138c:	b538      	push	{r3, r4, r5, lr}
 800138e:	690b      	ldr	r3, [r1, #16]
 8001390:	4605      	mov	r5, r0
 8001392:	460c      	mov	r4, r1
 8001394:	b913      	cbnz	r3, 800139c <_fflush_r+0x10>
 8001396:	2500      	movs	r5, #0
 8001398:	4628      	mov	r0, r5
 800139a:	bd38      	pop	{r3, r4, r5, pc}
 800139c:	b118      	cbz	r0, 80013a6 <_fflush_r+0x1a>
 800139e:	6983      	ldr	r3, [r0, #24]
 80013a0:	b90b      	cbnz	r3, 80013a6 <_fflush_r+0x1a>
 80013a2:	f7ff f991 	bl	80006c8 <__sinit>
 80013a6:	4b14      	ldr	r3, [pc, #80]	; (80013f8 <_fflush_r+0x6c>)
 80013a8:	429c      	cmp	r4, r3
 80013aa:	d11b      	bne.n	80013e4 <_fflush_r+0x58>
 80013ac:	686c      	ldr	r4, [r5, #4]
 80013ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013b2:	2b00      	cmp	r3, #0
 80013b4:	d0ef      	beq.n	8001396 <_fflush_r+0xa>
 80013b6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80013b8:	07d0      	lsls	r0, r2, #31
 80013ba:	d404      	bmi.n	80013c6 <_fflush_r+0x3a>
 80013bc:	0599      	lsls	r1, r3, #22
 80013be:	d402      	bmi.n	80013c6 <_fflush_r+0x3a>
 80013c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013c2:	f7ff fa7c 	bl	80008be <__retarget_lock_acquire_recursive>
 80013c6:	4628      	mov	r0, r5
 80013c8:	4621      	mov	r1, r4
 80013ca:	f7ff ff5d 	bl	8001288 <__sflush_r>
 80013ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013d0:	07da      	lsls	r2, r3, #31
 80013d2:	4605      	mov	r5, r0
 80013d4:	d4e0      	bmi.n	8001398 <_fflush_r+0xc>
 80013d6:	89a3      	ldrh	r3, [r4, #12]
 80013d8:	059b      	lsls	r3, r3, #22
 80013da:	d4dd      	bmi.n	8001398 <_fflush_r+0xc>
 80013dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013de:	f7ff fa6f 	bl	80008c0 <__retarget_lock_release_recursive>
 80013e2:	e7d9      	b.n	8001398 <_fflush_r+0xc>
 80013e4:	4b05      	ldr	r3, [pc, #20]	; (80013fc <_fflush_r+0x70>)
 80013e6:	429c      	cmp	r4, r3
 80013e8:	d101      	bne.n	80013ee <_fflush_r+0x62>
 80013ea:	68ac      	ldr	r4, [r5, #8]
 80013ec:	e7df      	b.n	80013ae <_fflush_r+0x22>
 80013ee:	4b04      	ldr	r3, [pc, #16]	; (8001400 <_fflush_r+0x74>)
 80013f0:	429c      	cmp	r4, r3
 80013f2:	bf08      	it	eq
 80013f4:	68ec      	ldreq	r4, [r5, #12]
 80013f6:	e7da      	b.n	80013ae <_fflush_r+0x22>
 80013f8:	08001828 	.word	0x08001828
 80013fc:	08001848 	.word	0x08001848
 8001400:	08001808 	.word	0x08001808

08001404 <fflush>:
 8001404:	4601      	mov	r1, r0
 8001406:	b920      	cbnz	r0, 8001412 <fflush+0xe>
 8001408:	4b04      	ldr	r3, [pc, #16]	; (800141c <fflush+0x18>)
 800140a:	4905      	ldr	r1, [pc, #20]	; (8001420 <fflush+0x1c>)
 800140c:	6818      	ldr	r0, [r3, #0]
 800140e:	f7ff b9f6 	b.w	80007fe <_fwalk_reent>
 8001412:	4b04      	ldr	r3, [pc, #16]	; (8001424 <fflush+0x20>)
 8001414:	6818      	ldr	r0, [r3, #0]
 8001416:	f7ff bfb9 	b.w	800138c <_fflush_r>
 800141a:	bf00      	nop
 800141c:	08001804 	.word	0x08001804
 8001420:	0800138d 	.word	0x0800138d
 8001424:	20000000 	.word	0x20000000

08001428 <_lseek_r>:
 8001428:	b538      	push	{r3, r4, r5, lr}
 800142a:	4d07      	ldr	r5, [pc, #28]	; (8001448 <_lseek_r+0x20>)
 800142c:	4604      	mov	r4, r0
 800142e:	4608      	mov	r0, r1
 8001430:	4611      	mov	r1, r2
 8001432:	2200      	movs	r2, #0
 8001434:	602a      	str	r2, [r5, #0]
 8001436:	461a      	mov	r2, r3
 8001438:	f7ff f825 	bl	8000486 <_lseek>
 800143c:	1c43      	adds	r3, r0, #1
 800143e:	d102      	bne.n	8001446 <_lseek_r+0x1e>
 8001440:	682b      	ldr	r3, [r5, #0]
 8001442:	b103      	cbz	r3, 8001446 <_lseek_r+0x1e>
 8001444:	6023      	str	r3, [r4, #0]
 8001446:	bd38      	pop	{r3, r4, r5, pc}
 8001448:	20000090 	.word	0x20000090

0800144c <__swhatbuf_r>:
 800144c:	b570      	push	{r4, r5, r6, lr}
 800144e:	460e      	mov	r6, r1
 8001450:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001454:	2900      	cmp	r1, #0
 8001456:	b096      	sub	sp, #88	; 0x58
 8001458:	4614      	mov	r4, r2
 800145a:	461d      	mov	r5, r3
 800145c:	da08      	bge.n	8001470 <__swhatbuf_r+0x24>
 800145e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001462:	2200      	movs	r2, #0
 8001464:	602a      	str	r2, [r5, #0]
 8001466:	061a      	lsls	r2, r3, #24
 8001468:	d410      	bmi.n	800148c <__swhatbuf_r+0x40>
 800146a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800146e:	e00e      	b.n	800148e <__swhatbuf_r+0x42>
 8001470:	466a      	mov	r2, sp
 8001472:	f000 f94d 	bl	8001710 <_fstat_r>
 8001476:	2800      	cmp	r0, #0
 8001478:	dbf1      	blt.n	800145e <__swhatbuf_r+0x12>
 800147a:	9a01      	ldr	r2, [sp, #4]
 800147c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001480:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001484:	425a      	negs	r2, r3
 8001486:	415a      	adcs	r2, r3
 8001488:	602a      	str	r2, [r5, #0]
 800148a:	e7ee      	b.n	800146a <__swhatbuf_r+0x1e>
 800148c:	2340      	movs	r3, #64	; 0x40
 800148e:	2000      	movs	r0, #0
 8001490:	6023      	str	r3, [r4, #0]
 8001492:	b016      	add	sp, #88	; 0x58
 8001494:	bd70      	pop	{r4, r5, r6, pc}
	...

08001498 <__smakebuf_r>:
 8001498:	898b      	ldrh	r3, [r1, #12]
 800149a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800149c:	079d      	lsls	r5, r3, #30
 800149e:	4606      	mov	r6, r0
 80014a0:	460c      	mov	r4, r1
 80014a2:	d507      	bpl.n	80014b4 <__smakebuf_r+0x1c>
 80014a4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80014a8:	6023      	str	r3, [r4, #0]
 80014aa:	6123      	str	r3, [r4, #16]
 80014ac:	2301      	movs	r3, #1
 80014ae:	6163      	str	r3, [r4, #20]
 80014b0:	b002      	add	sp, #8
 80014b2:	bd70      	pop	{r4, r5, r6, pc}
 80014b4:	ab01      	add	r3, sp, #4
 80014b6:	466a      	mov	r2, sp
 80014b8:	f7ff ffc8 	bl	800144c <__swhatbuf_r>
 80014bc:	9900      	ldr	r1, [sp, #0]
 80014be:	4605      	mov	r5, r0
 80014c0:	4630      	mov	r0, r6
 80014c2:	f7ff fa1f 	bl	8000904 <_malloc_r>
 80014c6:	b948      	cbnz	r0, 80014dc <__smakebuf_r+0x44>
 80014c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014cc:	059a      	lsls	r2, r3, #22
 80014ce:	d4ef      	bmi.n	80014b0 <__smakebuf_r+0x18>
 80014d0:	f023 0303 	bic.w	r3, r3, #3
 80014d4:	f043 0302 	orr.w	r3, r3, #2
 80014d8:	81a3      	strh	r3, [r4, #12]
 80014da:	e7e3      	b.n	80014a4 <__smakebuf_r+0xc>
 80014dc:	4b0d      	ldr	r3, [pc, #52]	; (8001514 <__smakebuf_r+0x7c>)
 80014de:	62b3      	str	r3, [r6, #40]	; 0x28
 80014e0:	89a3      	ldrh	r3, [r4, #12]
 80014e2:	6020      	str	r0, [r4, #0]
 80014e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014e8:	81a3      	strh	r3, [r4, #12]
 80014ea:	9b00      	ldr	r3, [sp, #0]
 80014ec:	6163      	str	r3, [r4, #20]
 80014ee:	9b01      	ldr	r3, [sp, #4]
 80014f0:	6120      	str	r0, [r4, #16]
 80014f2:	b15b      	cbz	r3, 800150c <__smakebuf_r+0x74>
 80014f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014f8:	4630      	mov	r0, r6
 80014fa:	f000 f91b 	bl	8001734 <_isatty_r>
 80014fe:	b128      	cbz	r0, 800150c <__smakebuf_r+0x74>
 8001500:	89a3      	ldrh	r3, [r4, #12]
 8001502:	f023 0303 	bic.w	r3, r3, #3
 8001506:	f043 0301 	orr.w	r3, r3, #1
 800150a:	81a3      	strh	r3, [r4, #12]
 800150c:	89a0      	ldrh	r0, [r4, #12]
 800150e:	4305      	orrs	r5, r0
 8001510:	81a5      	strh	r5, [r4, #12]
 8001512:	e7cd      	b.n	80014b0 <__smakebuf_r+0x18>
 8001514:	08000661 	.word	0x08000661

08001518 <__malloc_lock>:
 8001518:	4801      	ldr	r0, [pc, #4]	; (8001520 <__malloc_lock+0x8>)
 800151a:	f7ff b9d0 	b.w	80008be <__retarget_lock_acquire_recursive>
 800151e:	bf00      	nop
 8001520:	20000084 	.word	0x20000084

08001524 <__malloc_unlock>:
 8001524:	4801      	ldr	r0, [pc, #4]	; (800152c <__malloc_unlock+0x8>)
 8001526:	f7ff b9cb 	b.w	80008c0 <__retarget_lock_release_recursive>
 800152a:	bf00      	nop
 800152c:	20000084 	.word	0x20000084

08001530 <_free_r>:
 8001530:	b538      	push	{r3, r4, r5, lr}
 8001532:	4605      	mov	r5, r0
 8001534:	2900      	cmp	r1, #0
 8001536:	d041      	beq.n	80015bc <_free_r+0x8c>
 8001538:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800153c:	1f0c      	subs	r4, r1, #4
 800153e:	2b00      	cmp	r3, #0
 8001540:	bfb8      	it	lt
 8001542:	18e4      	addlt	r4, r4, r3
 8001544:	f7ff ffe8 	bl	8001518 <__malloc_lock>
 8001548:	4a1d      	ldr	r2, [pc, #116]	; (80015c0 <_free_r+0x90>)
 800154a:	6813      	ldr	r3, [r2, #0]
 800154c:	b933      	cbnz	r3, 800155c <_free_r+0x2c>
 800154e:	6063      	str	r3, [r4, #4]
 8001550:	6014      	str	r4, [r2, #0]
 8001552:	4628      	mov	r0, r5
 8001554:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001558:	f7ff bfe4 	b.w	8001524 <__malloc_unlock>
 800155c:	42a3      	cmp	r3, r4
 800155e:	d908      	bls.n	8001572 <_free_r+0x42>
 8001560:	6820      	ldr	r0, [r4, #0]
 8001562:	1821      	adds	r1, r4, r0
 8001564:	428b      	cmp	r3, r1
 8001566:	bf01      	itttt	eq
 8001568:	6819      	ldreq	r1, [r3, #0]
 800156a:	685b      	ldreq	r3, [r3, #4]
 800156c:	1809      	addeq	r1, r1, r0
 800156e:	6021      	streq	r1, [r4, #0]
 8001570:	e7ed      	b.n	800154e <_free_r+0x1e>
 8001572:	461a      	mov	r2, r3
 8001574:	685b      	ldr	r3, [r3, #4]
 8001576:	b10b      	cbz	r3, 800157c <_free_r+0x4c>
 8001578:	42a3      	cmp	r3, r4
 800157a:	d9fa      	bls.n	8001572 <_free_r+0x42>
 800157c:	6811      	ldr	r1, [r2, #0]
 800157e:	1850      	adds	r0, r2, r1
 8001580:	42a0      	cmp	r0, r4
 8001582:	d10b      	bne.n	800159c <_free_r+0x6c>
 8001584:	6820      	ldr	r0, [r4, #0]
 8001586:	4401      	add	r1, r0
 8001588:	1850      	adds	r0, r2, r1
 800158a:	4283      	cmp	r3, r0
 800158c:	6011      	str	r1, [r2, #0]
 800158e:	d1e0      	bne.n	8001552 <_free_r+0x22>
 8001590:	6818      	ldr	r0, [r3, #0]
 8001592:	685b      	ldr	r3, [r3, #4]
 8001594:	6053      	str	r3, [r2, #4]
 8001596:	4401      	add	r1, r0
 8001598:	6011      	str	r1, [r2, #0]
 800159a:	e7da      	b.n	8001552 <_free_r+0x22>
 800159c:	d902      	bls.n	80015a4 <_free_r+0x74>
 800159e:	230c      	movs	r3, #12
 80015a0:	602b      	str	r3, [r5, #0]
 80015a2:	e7d6      	b.n	8001552 <_free_r+0x22>
 80015a4:	6820      	ldr	r0, [r4, #0]
 80015a6:	1821      	adds	r1, r4, r0
 80015a8:	428b      	cmp	r3, r1
 80015aa:	bf04      	itt	eq
 80015ac:	6819      	ldreq	r1, [r3, #0]
 80015ae:	685b      	ldreq	r3, [r3, #4]
 80015b0:	6063      	str	r3, [r4, #4]
 80015b2:	bf04      	itt	eq
 80015b4:	1809      	addeq	r1, r1, r0
 80015b6:	6021      	streq	r1, [r4, #0]
 80015b8:	6054      	str	r4, [r2, #4]
 80015ba:	e7ca      	b.n	8001552 <_free_r+0x22>
 80015bc:	bd38      	pop	{r3, r4, r5, pc}
 80015be:	bf00      	nop
 80015c0:	20000088 	.word	0x20000088

080015c4 <_read_r>:
 80015c4:	b538      	push	{r3, r4, r5, lr}
 80015c6:	4d07      	ldr	r5, [pc, #28]	; (80015e4 <_read_r+0x20>)
 80015c8:	4604      	mov	r4, r0
 80015ca:	4608      	mov	r0, r1
 80015cc:	4611      	mov	r1, r2
 80015ce:	2200      	movs	r2, #0
 80015d0:	602a      	str	r2, [r5, #0]
 80015d2:	461a      	mov	r2, r3
 80015d4:	f7fe fefa 	bl	80003cc <_read>
 80015d8:	1c43      	adds	r3, r0, #1
 80015da:	d102      	bne.n	80015e2 <_read_r+0x1e>
 80015dc:	682b      	ldr	r3, [r5, #0]
 80015de:	b103      	cbz	r3, 80015e2 <_read_r+0x1e>
 80015e0:	6023      	str	r3, [r4, #0]
 80015e2:	bd38      	pop	{r3, r4, r5, pc}
 80015e4:	20000090 	.word	0x20000090

080015e8 <lflush>:
 80015e8:	8983      	ldrh	r3, [r0, #12]
 80015ea:	f003 0309 	and.w	r3, r3, #9
 80015ee:	2b09      	cmp	r3, #9
 80015f0:	d101      	bne.n	80015f6 <lflush+0xe>
 80015f2:	f7ff bf07 	b.w	8001404 <fflush>
 80015f6:	2000      	movs	r0, #0
 80015f8:	4770      	bx	lr
	...

080015fc <__srefill_r>:
 80015fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015fe:	460c      	mov	r4, r1
 8001600:	4605      	mov	r5, r0
 8001602:	b118      	cbz	r0, 800160c <__srefill_r+0x10>
 8001604:	6983      	ldr	r3, [r0, #24]
 8001606:	b90b      	cbnz	r3, 800160c <__srefill_r+0x10>
 8001608:	f7ff f85e 	bl	80006c8 <__sinit>
 800160c:	4b3b      	ldr	r3, [pc, #236]	; (80016fc <__srefill_r+0x100>)
 800160e:	429c      	cmp	r4, r3
 8001610:	d10a      	bne.n	8001628 <__srefill_r+0x2c>
 8001612:	686c      	ldr	r4, [r5, #4]
 8001614:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001618:	2300      	movs	r3, #0
 800161a:	6063      	str	r3, [r4, #4]
 800161c:	89a3      	ldrh	r3, [r4, #12]
 800161e:	069e      	lsls	r6, r3, #26
 8001620:	d50c      	bpl.n	800163c <__srefill_r+0x40>
 8001622:	f04f 30ff 	mov.w	r0, #4294967295
 8001626:	e066      	b.n	80016f6 <__srefill_r+0xfa>
 8001628:	4b35      	ldr	r3, [pc, #212]	; (8001700 <__srefill_r+0x104>)
 800162a:	429c      	cmp	r4, r3
 800162c:	d101      	bne.n	8001632 <__srefill_r+0x36>
 800162e:	68ac      	ldr	r4, [r5, #8]
 8001630:	e7f0      	b.n	8001614 <__srefill_r+0x18>
 8001632:	4b34      	ldr	r3, [pc, #208]	; (8001704 <__srefill_r+0x108>)
 8001634:	429c      	cmp	r4, r3
 8001636:	bf08      	it	eq
 8001638:	68ec      	ldreq	r4, [r5, #12]
 800163a:	e7eb      	b.n	8001614 <__srefill_r+0x18>
 800163c:	0758      	lsls	r0, r3, #29
 800163e:	d448      	bmi.n	80016d2 <__srefill_r+0xd6>
 8001640:	06d9      	lsls	r1, r3, #27
 8001642:	d405      	bmi.n	8001650 <__srefill_r+0x54>
 8001644:	2309      	movs	r3, #9
 8001646:	602b      	str	r3, [r5, #0]
 8001648:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800164c:	81a3      	strh	r3, [r4, #12]
 800164e:	e7e8      	b.n	8001622 <__srefill_r+0x26>
 8001650:	071a      	lsls	r2, r3, #28
 8001652:	d50b      	bpl.n	800166c <__srefill_r+0x70>
 8001654:	4621      	mov	r1, r4
 8001656:	4628      	mov	r0, r5
 8001658:	f7ff fe98 	bl	800138c <_fflush_r>
 800165c:	2800      	cmp	r0, #0
 800165e:	d1e0      	bne.n	8001622 <__srefill_r+0x26>
 8001660:	89a3      	ldrh	r3, [r4, #12]
 8001662:	60a0      	str	r0, [r4, #8]
 8001664:	f023 0308 	bic.w	r3, r3, #8
 8001668:	81a3      	strh	r3, [r4, #12]
 800166a:	61a0      	str	r0, [r4, #24]
 800166c:	89a3      	ldrh	r3, [r4, #12]
 800166e:	f043 0304 	orr.w	r3, r3, #4
 8001672:	81a3      	strh	r3, [r4, #12]
 8001674:	6923      	ldr	r3, [r4, #16]
 8001676:	b91b      	cbnz	r3, 8001680 <__srefill_r+0x84>
 8001678:	4621      	mov	r1, r4
 800167a:	4628      	mov	r0, r5
 800167c:	f7ff ff0c 	bl	8001498 <__smakebuf_r>
 8001680:	89a6      	ldrh	r6, [r4, #12]
 8001682:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8001686:	07b3      	lsls	r3, r6, #30
 8001688:	d00f      	beq.n	80016aa <__srefill_r+0xae>
 800168a:	2301      	movs	r3, #1
 800168c:	81a3      	strh	r3, [r4, #12]
 800168e:	4b1e      	ldr	r3, [pc, #120]	; (8001708 <__srefill_r+0x10c>)
 8001690:	491e      	ldr	r1, [pc, #120]	; (800170c <__srefill_r+0x110>)
 8001692:	6818      	ldr	r0, [r3, #0]
 8001694:	f006 0609 	and.w	r6, r6, #9
 8001698:	f7ff f894 	bl	80007c4 <_fwalk>
 800169c:	2e09      	cmp	r6, #9
 800169e:	81a7      	strh	r7, [r4, #12]
 80016a0:	d103      	bne.n	80016aa <__srefill_r+0xae>
 80016a2:	4621      	mov	r1, r4
 80016a4:	4628      	mov	r0, r5
 80016a6:	f7ff fdef 	bl	8001288 <__sflush_r>
 80016aa:	6922      	ldr	r2, [r4, #16]
 80016ac:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80016ae:	6963      	ldr	r3, [r4, #20]
 80016b0:	6a21      	ldr	r1, [r4, #32]
 80016b2:	6022      	str	r2, [r4, #0]
 80016b4:	4628      	mov	r0, r5
 80016b6:	47b0      	blx	r6
 80016b8:	2800      	cmp	r0, #0
 80016ba:	6060      	str	r0, [r4, #4]
 80016bc:	dc1c      	bgt.n	80016f8 <__srefill_r+0xfc>
 80016be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016c2:	bf17      	itett	ne
 80016c4:	2200      	movne	r2, #0
 80016c6:	f043 0320 	orreq.w	r3, r3, #32
 80016ca:	6062      	strne	r2, [r4, #4]
 80016cc:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80016d0:	e7bc      	b.n	800164c <__srefill_r+0x50>
 80016d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80016d4:	2900      	cmp	r1, #0
 80016d6:	d0cd      	beq.n	8001674 <__srefill_r+0x78>
 80016d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80016dc:	4299      	cmp	r1, r3
 80016de:	d002      	beq.n	80016e6 <__srefill_r+0xea>
 80016e0:	4628      	mov	r0, r5
 80016e2:	f7ff ff25 	bl	8001530 <_free_r>
 80016e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80016e8:	6063      	str	r3, [r4, #4]
 80016ea:	2000      	movs	r0, #0
 80016ec:	6360      	str	r0, [r4, #52]	; 0x34
 80016ee:	2b00      	cmp	r3, #0
 80016f0:	d0c0      	beq.n	8001674 <__srefill_r+0x78>
 80016f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80016f4:	6023      	str	r3, [r4, #0]
 80016f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016f8:	2000      	movs	r0, #0
 80016fa:	e7fc      	b.n	80016f6 <__srefill_r+0xfa>
 80016fc:	08001828 	.word	0x08001828
 8001700:	08001848 	.word	0x08001848
 8001704:	08001808 	.word	0x08001808
 8001708:	08001804 	.word	0x08001804
 800170c:	080015e9 	.word	0x080015e9

08001710 <_fstat_r>:
 8001710:	b538      	push	{r3, r4, r5, lr}
 8001712:	4d07      	ldr	r5, [pc, #28]	; (8001730 <_fstat_r+0x20>)
 8001714:	2300      	movs	r3, #0
 8001716:	4604      	mov	r4, r0
 8001718:	4608      	mov	r0, r1
 800171a:	4611      	mov	r1, r2
 800171c:	602b      	str	r3, [r5, #0]
 800171e:	f7fe fe99 	bl	8000454 <_fstat>
 8001722:	1c43      	adds	r3, r0, #1
 8001724:	d102      	bne.n	800172c <_fstat_r+0x1c>
 8001726:	682b      	ldr	r3, [r5, #0]
 8001728:	b103      	cbz	r3, 800172c <_fstat_r+0x1c>
 800172a:	6023      	str	r3, [r4, #0]
 800172c:	bd38      	pop	{r3, r4, r5, pc}
 800172e:	bf00      	nop
 8001730:	20000090 	.word	0x20000090

08001734 <_isatty_r>:
 8001734:	b538      	push	{r3, r4, r5, lr}
 8001736:	4d06      	ldr	r5, [pc, #24]	; (8001750 <_isatty_r+0x1c>)
 8001738:	2300      	movs	r3, #0
 800173a:	4604      	mov	r4, r0
 800173c:	4608      	mov	r0, r1
 800173e:	602b      	str	r3, [r5, #0]
 8001740:	f7fe fe97 	bl	8000472 <_isatty>
 8001744:	1c43      	adds	r3, r0, #1
 8001746:	d102      	bne.n	800174e <_isatty_r+0x1a>
 8001748:	682b      	ldr	r3, [r5, #0]
 800174a:	b103      	cbz	r3, 800174e <_isatty_r+0x1a>
 800174c:	6023      	str	r3, [r4, #0]
 800174e:	bd38      	pop	{r3, r4, r5, pc}
 8001750:	20000090 	.word	0x20000090

08001754 <_init>:
 8001754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001756:	bf00      	nop
 8001758:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800175a:	bc08      	pop	{r3}
 800175c:	469e      	mov	lr, r3
 800175e:	4770      	bx	lr

08001760 <_fini>:
 8001760:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001762:	bf00      	nop
 8001764:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001766:	bc08      	pop	{r3}
 8001768:	469e      	mov	lr, r3
 800176a:	4770      	bx	lr
