
BitExtract.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001340  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000130  08001510  08001510  00011510  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001640  08001640  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001640  08001640  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001640  08001640  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001640  08001640  00011640  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001644  08001644  00011644  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001648  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080016ac  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080016ac  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a06  00000000  00000000  0002008e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000035b  00000000  00000000  00020a94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000110  00000000  00000000  00020df0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000d8  00000000  00000000  00020f00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bce  00000000  00000000  00020fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001353  00000000  00000000  00023ba6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000092c0  00000000  00000000  00024ef9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e1b9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b38  00000000  00000000  0002e20c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080014f8 	.word	0x080014f8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080014f8 	.word	0x080014f8

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
	};



int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	uint32_t packetValue = 0x000;
 80002b6:	2300      	movs	r3, #0
 80002b8:	607b      	str	r3, [r7, #4]
	struct Packet packet;

	  packet.crc		=	(uint8_t)(packetValue & 0x03);
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	f003 0303 	and.w	r3, r3, #3
 80002c0:	b2da      	uxtb	r2, r3
 80002c2:	783b      	ldrb	r3, [r7, #0]
 80002c4:	f362 0301 	bfi	r3, r2, #0, #2
 80002c8:	703b      	strb	r3, [r7, #0]
	  packet.status		=	(uint8_t)((packetValue >> 2)& 0x01);
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	089b      	lsrs	r3, r3, #2
 80002ce:	f003 0301 	and.w	r3, r3, #1
 80002d2:	b2da      	uxtb	r2, r3
 80002d4:	783b      	ldrb	r3, [r7, #0]
 80002d6:	f362 0382 	bfi	r3, r2, #2, #1
 80002da:	703b      	strb	r3, [r7, #0]
	  packet.payload	=	(uint8_t)((packetValue >> 3)& 0xFF);
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	08db      	lsrs	r3, r3, #3
 80002e0:	b2db      	uxtb	r3, r3
 80002e2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80002e6:	b29a      	uxth	r2, r3
 80002e8:	883b      	ldrh	r3, [r7, #0]
 80002ea:	f362 03ce 	bfi	r3, r2, #3, #12
 80002ee:	803b      	strh	r3, [r7, #0]
	  packet.bat		=	(uint8_t)((packetValue >> 15)& 0x07);
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	0bdb      	lsrs	r3, r3, #15
 80002f4:	f003 0307 	and.w	r3, r3, #7
 80002f8:	b2da      	uxtb	r2, r3
 80002fa:	683b      	ldr	r3, [r7, #0]
 80002fc:	f362 33d1 	bfi	r3, r2, #15, #3
 8000300:	603b      	str	r3, [r7, #0]
	  packet.sensor		=	(uint8_t)((packetValue >> 18)& 0x07);
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	0c9b      	lsrs	r3, r3, #18
 8000306:	f003 0307 	and.w	r3, r3, #7
 800030a:	b2da      	uxtb	r2, r3
 800030c:	78bb      	ldrb	r3, [r7, #2]
 800030e:	f362 0384 	bfi	r3, r2, #2, #3
 8000312:	70bb      	strb	r3, [r7, #2]
	  packet.longAddr	=	(uint8_t)((packetValue >> 21)& 0x0FF);
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	0d5b      	lsrs	r3, r3, #21
 8000318:	b2da      	uxtb	r2, r3
 800031a:	887b      	ldrh	r3, [r7, #2]
 800031c:	f362 134c 	bfi	r3, r2, #5, #8
 8000320:	807b      	strh	r3, [r7, #2]
	  packet.shortAddr	=	(uint8_t)((packetValue >> 29)& 0x03);
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	0f5b      	lsrs	r3, r3, #29
 8000326:	f003 0303 	and.w	r3, r3, #3
 800032a:	b2da      	uxtb	r2, r3
 800032c:	78fb      	ldrb	r3, [r7, #3]
 800032e:	f362 1346 	bfi	r3, r2, #5, #2
 8000332:	70fb      	strb	r3, [r7, #3]
	  packet.addrMode	=	(uint8_t)((packetValue >> 31)& 0x01);
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	0fdb      	lsrs	r3, r3, #31
 8000338:	f003 0301 	and.w	r3, r3, #1
 800033c:	b2da      	uxtb	r2, r3
 800033e:	78fb      	ldrb	r3, [r7, #3]
 8000340:	f362 13c7 	bfi	r3, r2, #7, #1
 8000344:	70fb      	strb	r3, [r7, #3]

	   printf("crc      :%#x\n",packet.crc);
 8000346:	783b      	ldrb	r3, [r7, #0]
 8000348:	f3c3 0301 	ubfx	r3, r3, #0, #2
 800034c:	b2db      	uxtb	r3, r3
 800034e:	4619      	mov	r1, r3
 8000350:	481f      	ldr	r0, [pc, #124]	; (80003d0 <main+0x120>)
 8000352:	f000 f94b 	bl	80005ec <iprintf>
	   printf("status   :%#x\n",packet.status);
 8000356:	783b      	ldrb	r3, [r7, #0]
 8000358:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800035c:	b2db      	uxtb	r3, r3
 800035e:	4619      	mov	r1, r3
 8000360:	481c      	ldr	r0, [pc, #112]	; (80003d4 <main+0x124>)
 8000362:	f000 f943 	bl	80005ec <iprintf>
	   printf("payload  :%#x\n",packet.payload);
 8000366:	883b      	ldrh	r3, [r7, #0]
 8000368:	f3c3 03cb 	ubfx	r3, r3, #3, #12
 800036c:	b29b      	uxth	r3, r3
 800036e:	4619      	mov	r1, r3
 8000370:	4819      	ldr	r0, [pc, #100]	; (80003d8 <main+0x128>)
 8000372:	f000 f93b 	bl	80005ec <iprintf>
	   printf("bat      :%#x\n",packet.bat);
 8000376:	683b      	ldr	r3, [r7, #0]
 8000378:	f3c3 33c2 	ubfx	r3, r3, #15, #3
 800037c:	b2db      	uxtb	r3, r3
 800037e:	4619      	mov	r1, r3
 8000380:	4816      	ldr	r0, [pc, #88]	; (80003dc <main+0x12c>)
 8000382:	f000 f933 	bl	80005ec <iprintf>
	   printf("sensor   :%#x\n",packet.sensor);
 8000386:	78bb      	ldrb	r3, [r7, #2]
 8000388:	f3c3 0382 	ubfx	r3, r3, #2, #3
 800038c:	b2db      	uxtb	r3, r3
 800038e:	4619      	mov	r1, r3
 8000390:	4813      	ldr	r0, [pc, #76]	; (80003e0 <main+0x130>)
 8000392:	f000 f92b 	bl	80005ec <iprintf>
	   printf("longAddr :%#x\n",packet.longAddr);
 8000396:	887b      	ldrh	r3, [r7, #2]
 8000398:	f3c3 1347 	ubfx	r3, r3, #5, #8
 800039c:	b2db      	uxtb	r3, r3
 800039e:	4619      	mov	r1, r3
 80003a0:	4810      	ldr	r0, [pc, #64]	; (80003e4 <main+0x134>)
 80003a2:	f000 f923 	bl	80005ec <iprintf>
	   printf("shortAddr:%#x\n",packet.shortAddr);
 80003a6:	78fb      	ldrb	r3, [r7, #3]
 80003a8:	f3c3 1341 	ubfx	r3, r3, #5, #2
 80003ac:	b2db      	uxtb	r3, r3
 80003ae:	4619      	mov	r1, r3
 80003b0:	480d      	ldr	r0, [pc, #52]	; (80003e8 <main+0x138>)
 80003b2:	f000 f91b 	bl	80005ec <iprintf>
	   printf("addrMode :%#x\n",packet.addrMode);
 80003b6:	78fb      	ldrb	r3, [r7, #3]
 80003b8:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80003bc:	b2db      	uxtb	r3, r3
 80003be:	4619      	mov	r1, r3
 80003c0:	480a      	ldr	r0, [pc, #40]	; (80003ec <main+0x13c>)
 80003c2:	f000 f913 	bl	80005ec <iprintf>

	   printf("Size of union is %I64u\n",sizeof(packet));
 80003c6:	2104      	movs	r1, #4
 80003c8:	4809      	ldr	r0, [pc, #36]	; (80003f0 <main+0x140>)
 80003ca:	f000 f90f 	bl	80005ec <iprintf>



	   while(1){
 80003ce:	e7fe      	b.n	80003ce <main+0x11e>
 80003d0:	08001510 	.word	0x08001510
 80003d4:	08001520 	.word	0x08001520
 80003d8:	08001530 	.word	0x08001530
 80003dc:	08001540 	.word	0x08001540
 80003e0:	08001550 	.word	0x08001550
 80003e4:	08001560 	.word	0x08001560
 80003e8:	08001570 	.word	0x08001570
 80003ec:	08001580 	.word	0x08001580
 80003f0:	08001590 	.word	0x08001590

080003f4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003f4:	b580      	push	{r7, lr}
 80003f6:	b086      	sub	sp, #24
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	60f8      	str	r0, [r7, #12]
 80003fc:	60b9      	str	r1, [r7, #8]
 80003fe:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000400:	2300      	movs	r3, #0
 8000402:	617b      	str	r3, [r7, #20]
 8000404:	e00a      	b.n	800041c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000406:	f3af 8000 	nop.w
 800040a:	4601      	mov	r1, r0
 800040c:	68bb      	ldr	r3, [r7, #8]
 800040e:	1c5a      	adds	r2, r3, #1
 8000410:	60ba      	str	r2, [r7, #8]
 8000412:	b2ca      	uxtb	r2, r1
 8000414:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000416:	697b      	ldr	r3, [r7, #20]
 8000418:	3301      	adds	r3, #1
 800041a:	617b      	str	r3, [r7, #20]
 800041c:	697a      	ldr	r2, [r7, #20]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	429a      	cmp	r2, r3
 8000422:	dbf0      	blt.n	8000406 <_read+0x12>
  }

  return len;
 8000424:	687b      	ldr	r3, [r7, #4]
}
 8000426:	4618      	mov	r0, r3
 8000428:	3718      	adds	r7, #24
 800042a:	46bd      	mov	sp, r7
 800042c:	bd80      	pop	{r7, pc}

0800042e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800042e:	b580      	push	{r7, lr}
 8000430:	b086      	sub	sp, #24
 8000432:	af00      	add	r7, sp, #0
 8000434:	60f8      	str	r0, [r7, #12]
 8000436:	60b9      	str	r1, [r7, #8]
 8000438:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043a:	2300      	movs	r3, #0
 800043c:	617b      	str	r3, [r7, #20]
 800043e:	e009      	b.n	8000454 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000440:	68bb      	ldr	r3, [r7, #8]
 8000442:	1c5a      	adds	r2, r3, #1
 8000444:	60ba      	str	r2, [r7, #8]
 8000446:	781b      	ldrb	r3, [r3, #0]
 8000448:	4618      	mov	r0, r3
 800044a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044e:	697b      	ldr	r3, [r7, #20]
 8000450:	3301      	adds	r3, #1
 8000452:	617b      	str	r3, [r7, #20]
 8000454:	697a      	ldr	r2, [r7, #20]
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	429a      	cmp	r2, r3
 800045a:	dbf1      	blt.n	8000440 <_write+0x12>
  }
  return len;
 800045c:	687b      	ldr	r3, [r7, #4]
}
 800045e:	4618      	mov	r0, r3
 8000460:	3718      	adds	r7, #24
 8000462:	46bd      	mov	sp, r7
 8000464:	bd80      	pop	{r7, pc}

08000466 <_close>:

int _close(int file)
{
 8000466:	b480      	push	{r7}
 8000468:	b083      	sub	sp, #12
 800046a:	af00      	add	r7, sp, #0
 800046c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800046e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000472:	4618      	mov	r0, r3
 8000474:	370c      	adds	r7, #12
 8000476:	46bd      	mov	sp, r7
 8000478:	bc80      	pop	{r7}
 800047a:	4770      	bx	lr

0800047c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800047c:	b480      	push	{r7}
 800047e:	b083      	sub	sp, #12
 8000480:	af00      	add	r7, sp, #0
 8000482:	6078      	str	r0, [r7, #4]
 8000484:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000486:	683b      	ldr	r3, [r7, #0]
 8000488:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800048c:	605a      	str	r2, [r3, #4]
  return 0;
 800048e:	2300      	movs	r3, #0
}
 8000490:	4618      	mov	r0, r3
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	bc80      	pop	{r7}
 8000498:	4770      	bx	lr

0800049a <_isatty>:

int _isatty(int file)
{
 800049a:	b480      	push	{r7}
 800049c:	b083      	sub	sp, #12
 800049e:	af00      	add	r7, sp, #0
 80004a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004a2:	2301      	movs	r3, #1
}
 80004a4:	4618      	mov	r0, r3
 80004a6:	370c      	adds	r7, #12
 80004a8:	46bd      	mov	sp, r7
 80004aa:	bc80      	pop	{r7}
 80004ac:	4770      	bx	lr

080004ae <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ae:	b480      	push	{r7}
 80004b0:	b085      	sub	sp, #20
 80004b2:	af00      	add	r7, sp, #0
 80004b4:	60f8      	str	r0, [r7, #12]
 80004b6:	60b9      	str	r1, [r7, #8]
 80004b8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004ba:	2300      	movs	r3, #0
}
 80004bc:	4618      	mov	r0, r3
 80004be:	3714      	adds	r7, #20
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bc80      	pop	{r7}
 80004c4:	4770      	bx	lr
	...

080004c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b086      	sub	sp, #24
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004d0:	4a14      	ldr	r2, [pc, #80]	; (8000524 <_sbrk+0x5c>)
 80004d2:	4b15      	ldr	r3, [pc, #84]	; (8000528 <_sbrk+0x60>)
 80004d4:	1ad3      	subs	r3, r2, r3
 80004d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d8:	697b      	ldr	r3, [r7, #20]
 80004da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004dc:	4b13      	ldr	r3, [pc, #76]	; (800052c <_sbrk+0x64>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	2b00      	cmp	r3, #0
 80004e2:	d102      	bne.n	80004ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004e4:	4b11      	ldr	r3, [pc, #68]	; (800052c <_sbrk+0x64>)
 80004e6:	4a12      	ldr	r2, [pc, #72]	; (8000530 <_sbrk+0x68>)
 80004e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ea:	4b10      	ldr	r3, [pc, #64]	; (800052c <_sbrk+0x64>)
 80004ec:	681a      	ldr	r2, [r3, #0]
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	4413      	add	r3, r2
 80004f2:	693a      	ldr	r2, [r7, #16]
 80004f4:	429a      	cmp	r2, r3
 80004f6:	d207      	bcs.n	8000508 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f8:	f000 f846 	bl	8000588 <__errno>
 80004fc:	4603      	mov	r3, r0
 80004fe:	220c      	movs	r2, #12
 8000500:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000502:	f04f 33ff 	mov.w	r3, #4294967295
 8000506:	e009      	b.n	800051c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000508:	4b08      	ldr	r3, [pc, #32]	; (800052c <_sbrk+0x64>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800050e:	4b07      	ldr	r3, [pc, #28]	; (800052c <_sbrk+0x64>)
 8000510:	681a      	ldr	r2, [r3, #0]
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	4413      	add	r3, r2
 8000516:	4a05      	ldr	r2, [pc, #20]	; (800052c <_sbrk+0x64>)
 8000518:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800051a:	68fb      	ldr	r3, [r7, #12]
}
 800051c:	4618      	mov	r0, r3
 800051e:	3718      	adds	r7, #24
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}
 8000524:	20020000 	.word	0x20020000
 8000528:	00000400 	.word	0x00000400
 800052c:	20000080 	.word	0x20000080
 8000530:	20000098 	.word	0x20000098

08000534 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000534:	480d      	ldr	r0, [pc, #52]	; (800056c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000536:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000538:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800053c:	480c      	ldr	r0, [pc, #48]	; (8000570 <LoopForever+0x6>)
  ldr r1, =_edata
 800053e:	490d      	ldr	r1, [pc, #52]	; (8000574 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000540:	4a0d      	ldr	r2, [pc, #52]	; (8000578 <LoopForever+0xe>)
  movs r3, #0
 8000542:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000544:	e002      	b.n	800054c <LoopCopyDataInit>

08000546 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000546:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000548:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800054a:	3304      	adds	r3, #4

0800054c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800054c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800054e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000550:	d3f9      	bcc.n	8000546 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000552:	4a0a      	ldr	r2, [pc, #40]	; (800057c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000554:	4c0a      	ldr	r4, [pc, #40]	; (8000580 <LoopForever+0x16>)
  movs r3, #0
 8000556:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000558:	e001      	b.n	800055e <LoopFillZerobss>

0800055a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800055a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800055c:	3204      	adds	r2, #4

0800055e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800055e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000560:	d3fb      	bcc.n	800055a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000562:	f000 f817 	bl	8000594 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000566:	f7ff fea3 	bl	80002b0 <main>

0800056a <LoopForever>:

LoopForever:
  b LoopForever
 800056a:	e7fe      	b.n	800056a <LoopForever>
  ldr   r0, =_estack
 800056c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000570:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000574:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000578:	08001648 	.word	0x08001648
  ldr r2, =_sbss
 800057c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000580:	20000094 	.word	0x20000094

08000584 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000584:	e7fe      	b.n	8000584 <ADC_IRQHandler>
	...

08000588 <__errno>:
 8000588:	4b01      	ldr	r3, [pc, #4]	; (8000590 <__errno+0x8>)
 800058a:	6818      	ldr	r0, [r3, #0]
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop
 8000590:	20000000 	.word	0x20000000

08000594 <__libc_init_array>:
 8000594:	b570      	push	{r4, r5, r6, lr}
 8000596:	4d0d      	ldr	r5, [pc, #52]	; (80005cc <__libc_init_array+0x38>)
 8000598:	4c0d      	ldr	r4, [pc, #52]	; (80005d0 <__libc_init_array+0x3c>)
 800059a:	1b64      	subs	r4, r4, r5
 800059c:	10a4      	asrs	r4, r4, #2
 800059e:	2600      	movs	r6, #0
 80005a0:	42a6      	cmp	r6, r4
 80005a2:	d109      	bne.n	80005b8 <__libc_init_array+0x24>
 80005a4:	4d0b      	ldr	r5, [pc, #44]	; (80005d4 <__libc_init_array+0x40>)
 80005a6:	4c0c      	ldr	r4, [pc, #48]	; (80005d8 <__libc_init_array+0x44>)
 80005a8:	f000 ffa6 	bl	80014f8 <_init>
 80005ac:	1b64      	subs	r4, r4, r5
 80005ae:	10a4      	asrs	r4, r4, #2
 80005b0:	2600      	movs	r6, #0
 80005b2:	42a6      	cmp	r6, r4
 80005b4:	d105      	bne.n	80005c2 <__libc_init_array+0x2e>
 80005b6:	bd70      	pop	{r4, r5, r6, pc}
 80005b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005bc:	4798      	blx	r3
 80005be:	3601      	adds	r6, #1
 80005c0:	e7ee      	b.n	80005a0 <__libc_init_array+0xc>
 80005c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c6:	4798      	blx	r3
 80005c8:	3601      	adds	r6, #1
 80005ca:	e7f2      	b.n	80005b2 <__libc_init_array+0x1e>
 80005cc:	08001640 	.word	0x08001640
 80005d0:	08001640 	.word	0x08001640
 80005d4:	08001640 	.word	0x08001640
 80005d8:	08001644 	.word	0x08001644

080005dc <memset>:
 80005dc:	4402      	add	r2, r0
 80005de:	4603      	mov	r3, r0
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d100      	bne.n	80005e6 <memset+0xa>
 80005e4:	4770      	bx	lr
 80005e6:	f803 1b01 	strb.w	r1, [r3], #1
 80005ea:	e7f9      	b.n	80005e0 <memset+0x4>

080005ec <iprintf>:
 80005ec:	b40f      	push	{r0, r1, r2, r3}
 80005ee:	4b0a      	ldr	r3, [pc, #40]	; (8000618 <iprintf+0x2c>)
 80005f0:	b513      	push	{r0, r1, r4, lr}
 80005f2:	681c      	ldr	r4, [r3, #0]
 80005f4:	b124      	cbz	r4, 8000600 <iprintf+0x14>
 80005f6:	69a3      	ldr	r3, [r4, #24]
 80005f8:	b913      	cbnz	r3, 8000600 <iprintf+0x14>
 80005fa:	4620      	mov	r0, r4
 80005fc:	f000 f866 	bl	80006cc <__sinit>
 8000600:	ab05      	add	r3, sp, #20
 8000602:	9a04      	ldr	r2, [sp, #16]
 8000604:	68a1      	ldr	r1, [r4, #8]
 8000606:	9301      	str	r3, [sp, #4]
 8000608:	4620      	mov	r0, r4
 800060a:	f000 f9bb 	bl	8000984 <_vfiprintf_r>
 800060e:	b002      	add	sp, #8
 8000610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000614:	b004      	add	sp, #16
 8000616:	4770      	bx	lr
 8000618:	20000000 	.word	0x20000000

0800061c <std>:
 800061c:	2300      	movs	r3, #0
 800061e:	b510      	push	{r4, lr}
 8000620:	4604      	mov	r4, r0
 8000622:	e9c0 3300 	strd	r3, r3, [r0]
 8000626:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800062a:	6083      	str	r3, [r0, #8]
 800062c:	8181      	strh	r1, [r0, #12]
 800062e:	6643      	str	r3, [r0, #100]	; 0x64
 8000630:	81c2      	strh	r2, [r0, #14]
 8000632:	6183      	str	r3, [r0, #24]
 8000634:	4619      	mov	r1, r3
 8000636:	2208      	movs	r2, #8
 8000638:	305c      	adds	r0, #92	; 0x5c
 800063a:	f7ff ffcf 	bl	80005dc <memset>
 800063e:	4b05      	ldr	r3, [pc, #20]	; (8000654 <std+0x38>)
 8000640:	6263      	str	r3, [r4, #36]	; 0x24
 8000642:	4b05      	ldr	r3, [pc, #20]	; (8000658 <std+0x3c>)
 8000644:	62a3      	str	r3, [r4, #40]	; 0x28
 8000646:	4b05      	ldr	r3, [pc, #20]	; (800065c <std+0x40>)
 8000648:	62e3      	str	r3, [r4, #44]	; 0x2c
 800064a:	4b05      	ldr	r3, [pc, #20]	; (8000660 <std+0x44>)
 800064c:	6224      	str	r4, [r4, #32]
 800064e:	6323      	str	r3, [r4, #48]	; 0x30
 8000650:	bd10      	pop	{r4, pc}
 8000652:	bf00      	nop
 8000654:	08000f2d 	.word	0x08000f2d
 8000658:	08000f4f 	.word	0x08000f4f
 800065c:	08000f87 	.word	0x08000f87
 8000660:	08000fab 	.word	0x08000fab

08000664 <_cleanup_r>:
 8000664:	4901      	ldr	r1, [pc, #4]	; (800066c <_cleanup_r+0x8>)
 8000666:	f000 b8af 	b.w	80007c8 <_fwalk_reent>
 800066a:	bf00      	nop
 800066c:	0800127d 	.word	0x0800127d

08000670 <__sfmoreglue>:
 8000670:	b570      	push	{r4, r5, r6, lr}
 8000672:	2268      	movs	r2, #104	; 0x68
 8000674:	1e4d      	subs	r5, r1, #1
 8000676:	4355      	muls	r5, r2
 8000678:	460e      	mov	r6, r1
 800067a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800067e:	f000 f8e5 	bl	800084c <_malloc_r>
 8000682:	4604      	mov	r4, r0
 8000684:	b140      	cbz	r0, 8000698 <__sfmoreglue+0x28>
 8000686:	2100      	movs	r1, #0
 8000688:	e9c0 1600 	strd	r1, r6, [r0]
 800068c:	300c      	adds	r0, #12
 800068e:	60a0      	str	r0, [r4, #8]
 8000690:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000694:	f7ff ffa2 	bl	80005dc <memset>
 8000698:	4620      	mov	r0, r4
 800069a:	bd70      	pop	{r4, r5, r6, pc}

0800069c <__sfp_lock_acquire>:
 800069c:	4801      	ldr	r0, [pc, #4]	; (80006a4 <__sfp_lock_acquire+0x8>)
 800069e:	f000 b8b3 	b.w	8000808 <__retarget_lock_acquire_recursive>
 80006a2:	bf00      	nop
 80006a4:	20000085 	.word	0x20000085

080006a8 <__sfp_lock_release>:
 80006a8:	4801      	ldr	r0, [pc, #4]	; (80006b0 <__sfp_lock_release+0x8>)
 80006aa:	f000 b8ae 	b.w	800080a <__retarget_lock_release_recursive>
 80006ae:	bf00      	nop
 80006b0:	20000085 	.word	0x20000085

080006b4 <__sinit_lock_acquire>:
 80006b4:	4801      	ldr	r0, [pc, #4]	; (80006bc <__sinit_lock_acquire+0x8>)
 80006b6:	f000 b8a7 	b.w	8000808 <__retarget_lock_acquire_recursive>
 80006ba:	bf00      	nop
 80006bc:	20000086 	.word	0x20000086

080006c0 <__sinit_lock_release>:
 80006c0:	4801      	ldr	r0, [pc, #4]	; (80006c8 <__sinit_lock_release+0x8>)
 80006c2:	f000 b8a2 	b.w	800080a <__retarget_lock_release_recursive>
 80006c6:	bf00      	nop
 80006c8:	20000086 	.word	0x20000086

080006cc <__sinit>:
 80006cc:	b510      	push	{r4, lr}
 80006ce:	4604      	mov	r4, r0
 80006d0:	f7ff fff0 	bl	80006b4 <__sinit_lock_acquire>
 80006d4:	69a3      	ldr	r3, [r4, #24]
 80006d6:	b11b      	cbz	r3, 80006e0 <__sinit+0x14>
 80006d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006dc:	f7ff bff0 	b.w	80006c0 <__sinit_lock_release>
 80006e0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80006e4:	6523      	str	r3, [r4, #80]	; 0x50
 80006e6:	4b13      	ldr	r3, [pc, #76]	; (8000734 <__sinit+0x68>)
 80006e8:	4a13      	ldr	r2, [pc, #76]	; (8000738 <__sinit+0x6c>)
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	62a2      	str	r2, [r4, #40]	; 0x28
 80006ee:	42a3      	cmp	r3, r4
 80006f0:	bf04      	itt	eq
 80006f2:	2301      	moveq	r3, #1
 80006f4:	61a3      	streq	r3, [r4, #24]
 80006f6:	4620      	mov	r0, r4
 80006f8:	f000 f820 	bl	800073c <__sfp>
 80006fc:	6060      	str	r0, [r4, #4]
 80006fe:	4620      	mov	r0, r4
 8000700:	f000 f81c 	bl	800073c <__sfp>
 8000704:	60a0      	str	r0, [r4, #8]
 8000706:	4620      	mov	r0, r4
 8000708:	f000 f818 	bl	800073c <__sfp>
 800070c:	2200      	movs	r2, #0
 800070e:	60e0      	str	r0, [r4, #12]
 8000710:	2104      	movs	r1, #4
 8000712:	6860      	ldr	r0, [r4, #4]
 8000714:	f7ff ff82 	bl	800061c <std>
 8000718:	68a0      	ldr	r0, [r4, #8]
 800071a:	2201      	movs	r2, #1
 800071c:	2109      	movs	r1, #9
 800071e:	f7ff ff7d 	bl	800061c <std>
 8000722:	68e0      	ldr	r0, [r4, #12]
 8000724:	2202      	movs	r2, #2
 8000726:	2112      	movs	r1, #18
 8000728:	f7ff ff78 	bl	800061c <std>
 800072c:	2301      	movs	r3, #1
 800072e:	61a3      	str	r3, [r4, #24]
 8000730:	e7d2      	b.n	80006d8 <__sinit+0xc>
 8000732:	bf00      	nop
 8000734:	080015a8 	.word	0x080015a8
 8000738:	08000665 	.word	0x08000665

0800073c <__sfp>:
 800073c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073e:	4607      	mov	r7, r0
 8000740:	f7ff ffac 	bl	800069c <__sfp_lock_acquire>
 8000744:	4b1e      	ldr	r3, [pc, #120]	; (80007c0 <__sfp+0x84>)
 8000746:	681e      	ldr	r6, [r3, #0]
 8000748:	69b3      	ldr	r3, [r6, #24]
 800074a:	b913      	cbnz	r3, 8000752 <__sfp+0x16>
 800074c:	4630      	mov	r0, r6
 800074e:	f7ff ffbd 	bl	80006cc <__sinit>
 8000752:	3648      	adds	r6, #72	; 0x48
 8000754:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000758:	3b01      	subs	r3, #1
 800075a:	d503      	bpl.n	8000764 <__sfp+0x28>
 800075c:	6833      	ldr	r3, [r6, #0]
 800075e:	b30b      	cbz	r3, 80007a4 <__sfp+0x68>
 8000760:	6836      	ldr	r6, [r6, #0]
 8000762:	e7f7      	b.n	8000754 <__sfp+0x18>
 8000764:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000768:	b9d5      	cbnz	r5, 80007a0 <__sfp+0x64>
 800076a:	4b16      	ldr	r3, [pc, #88]	; (80007c4 <__sfp+0x88>)
 800076c:	60e3      	str	r3, [r4, #12]
 800076e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000772:	6665      	str	r5, [r4, #100]	; 0x64
 8000774:	f000 f847 	bl	8000806 <__retarget_lock_init_recursive>
 8000778:	f7ff ff96 	bl	80006a8 <__sfp_lock_release>
 800077c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000780:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000784:	6025      	str	r5, [r4, #0]
 8000786:	61a5      	str	r5, [r4, #24]
 8000788:	2208      	movs	r2, #8
 800078a:	4629      	mov	r1, r5
 800078c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000790:	f7ff ff24 	bl	80005dc <memset>
 8000794:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000798:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800079c:	4620      	mov	r0, r4
 800079e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007a0:	3468      	adds	r4, #104	; 0x68
 80007a2:	e7d9      	b.n	8000758 <__sfp+0x1c>
 80007a4:	2104      	movs	r1, #4
 80007a6:	4638      	mov	r0, r7
 80007a8:	f7ff ff62 	bl	8000670 <__sfmoreglue>
 80007ac:	4604      	mov	r4, r0
 80007ae:	6030      	str	r0, [r6, #0]
 80007b0:	2800      	cmp	r0, #0
 80007b2:	d1d5      	bne.n	8000760 <__sfp+0x24>
 80007b4:	f7ff ff78 	bl	80006a8 <__sfp_lock_release>
 80007b8:	230c      	movs	r3, #12
 80007ba:	603b      	str	r3, [r7, #0]
 80007bc:	e7ee      	b.n	800079c <__sfp+0x60>
 80007be:	bf00      	nop
 80007c0:	080015a8 	.word	0x080015a8
 80007c4:	ffff0001 	.word	0xffff0001

080007c8 <_fwalk_reent>:
 80007c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007cc:	4606      	mov	r6, r0
 80007ce:	4688      	mov	r8, r1
 80007d0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007d4:	2700      	movs	r7, #0
 80007d6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007da:	f1b9 0901 	subs.w	r9, r9, #1
 80007de:	d505      	bpl.n	80007ec <_fwalk_reent+0x24>
 80007e0:	6824      	ldr	r4, [r4, #0]
 80007e2:	2c00      	cmp	r4, #0
 80007e4:	d1f7      	bne.n	80007d6 <_fwalk_reent+0xe>
 80007e6:	4638      	mov	r0, r7
 80007e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007ec:	89ab      	ldrh	r3, [r5, #12]
 80007ee:	2b01      	cmp	r3, #1
 80007f0:	d907      	bls.n	8000802 <_fwalk_reent+0x3a>
 80007f2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007f6:	3301      	adds	r3, #1
 80007f8:	d003      	beq.n	8000802 <_fwalk_reent+0x3a>
 80007fa:	4629      	mov	r1, r5
 80007fc:	4630      	mov	r0, r6
 80007fe:	47c0      	blx	r8
 8000800:	4307      	orrs	r7, r0
 8000802:	3568      	adds	r5, #104	; 0x68
 8000804:	e7e9      	b.n	80007da <_fwalk_reent+0x12>

08000806 <__retarget_lock_init_recursive>:
 8000806:	4770      	bx	lr

08000808 <__retarget_lock_acquire_recursive>:
 8000808:	4770      	bx	lr

0800080a <__retarget_lock_release_recursive>:
 800080a:	4770      	bx	lr

0800080c <sbrk_aligned>:
 800080c:	b570      	push	{r4, r5, r6, lr}
 800080e:	4e0e      	ldr	r6, [pc, #56]	; (8000848 <sbrk_aligned+0x3c>)
 8000810:	460c      	mov	r4, r1
 8000812:	6831      	ldr	r1, [r6, #0]
 8000814:	4605      	mov	r5, r0
 8000816:	b911      	cbnz	r1, 800081e <sbrk_aligned+0x12>
 8000818:	f000 fb78 	bl	8000f0c <_sbrk_r>
 800081c:	6030      	str	r0, [r6, #0]
 800081e:	4621      	mov	r1, r4
 8000820:	4628      	mov	r0, r5
 8000822:	f000 fb73 	bl	8000f0c <_sbrk_r>
 8000826:	1c43      	adds	r3, r0, #1
 8000828:	d00a      	beq.n	8000840 <sbrk_aligned+0x34>
 800082a:	1cc4      	adds	r4, r0, #3
 800082c:	f024 0403 	bic.w	r4, r4, #3
 8000830:	42a0      	cmp	r0, r4
 8000832:	d007      	beq.n	8000844 <sbrk_aligned+0x38>
 8000834:	1a21      	subs	r1, r4, r0
 8000836:	4628      	mov	r0, r5
 8000838:	f000 fb68 	bl	8000f0c <_sbrk_r>
 800083c:	3001      	adds	r0, #1
 800083e:	d101      	bne.n	8000844 <sbrk_aligned+0x38>
 8000840:	f04f 34ff 	mov.w	r4, #4294967295
 8000844:	4620      	mov	r0, r4
 8000846:	bd70      	pop	{r4, r5, r6, pc}
 8000848:	2000008c 	.word	0x2000008c

0800084c <_malloc_r>:
 800084c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000850:	1ccd      	adds	r5, r1, #3
 8000852:	f025 0503 	bic.w	r5, r5, #3
 8000856:	3508      	adds	r5, #8
 8000858:	2d0c      	cmp	r5, #12
 800085a:	bf38      	it	cc
 800085c:	250c      	movcc	r5, #12
 800085e:	2d00      	cmp	r5, #0
 8000860:	4607      	mov	r7, r0
 8000862:	db01      	blt.n	8000868 <_malloc_r+0x1c>
 8000864:	42a9      	cmp	r1, r5
 8000866:	d905      	bls.n	8000874 <_malloc_r+0x28>
 8000868:	230c      	movs	r3, #12
 800086a:	603b      	str	r3, [r7, #0]
 800086c:	2600      	movs	r6, #0
 800086e:	4630      	mov	r0, r6
 8000870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000874:	4e2e      	ldr	r6, [pc, #184]	; (8000930 <_malloc_r+0xe4>)
 8000876:	f000 fdb5 	bl	80013e4 <__malloc_lock>
 800087a:	6833      	ldr	r3, [r6, #0]
 800087c:	461c      	mov	r4, r3
 800087e:	bb34      	cbnz	r4, 80008ce <_malloc_r+0x82>
 8000880:	4629      	mov	r1, r5
 8000882:	4638      	mov	r0, r7
 8000884:	f7ff ffc2 	bl	800080c <sbrk_aligned>
 8000888:	1c43      	adds	r3, r0, #1
 800088a:	4604      	mov	r4, r0
 800088c:	d14d      	bne.n	800092a <_malloc_r+0xde>
 800088e:	6834      	ldr	r4, [r6, #0]
 8000890:	4626      	mov	r6, r4
 8000892:	2e00      	cmp	r6, #0
 8000894:	d140      	bne.n	8000918 <_malloc_r+0xcc>
 8000896:	6823      	ldr	r3, [r4, #0]
 8000898:	4631      	mov	r1, r6
 800089a:	4638      	mov	r0, r7
 800089c:	eb04 0803 	add.w	r8, r4, r3
 80008a0:	f000 fb34 	bl	8000f0c <_sbrk_r>
 80008a4:	4580      	cmp	r8, r0
 80008a6:	d13a      	bne.n	800091e <_malloc_r+0xd2>
 80008a8:	6821      	ldr	r1, [r4, #0]
 80008aa:	3503      	adds	r5, #3
 80008ac:	1a6d      	subs	r5, r5, r1
 80008ae:	f025 0503 	bic.w	r5, r5, #3
 80008b2:	3508      	adds	r5, #8
 80008b4:	2d0c      	cmp	r5, #12
 80008b6:	bf38      	it	cc
 80008b8:	250c      	movcc	r5, #12
 80008ba:	4629      	mov	r1, r5
 80008bc:	4638      	mov	r0, r7
 80008be:	f7ff ffa5 	bl	800080c <sbrk_aligned>
 80008c2:	3001      	adds	r0, #1
 80008c4:	d02b      	beq.n	800091e <_malloc_r+0xd2>
 80008c6:	6823      	ldr	r3, [r4, #0]
 80008c8:	442b      	add	r3, r5
 80008ca:	6023      	str	r3, [r4, #0]
 80008cc:	e00e      	b.n	80008ec <_malloc_r+0xa0>
 80008ce:	6822      	ldr	r2, [r4, #0]
 80008d0:	1b52      	subs	r2, r2, r5
 80008d2:	d41e      	bmi.n	8000912 <_malloc_r+0xc6>
 80008d4:	2a0b      	cmp	r2, #11
 80008d6:	d916      	bls.n	8000906 <_malloc_r+0xba>
 80008d8:	1961      	adds	r1, r4, r5
 80008da:	42a3      	cmp	r3, r4
 80008dc:	6025      	str	r5, [r4, #0]
 80008de:	bf18      	it	ne
 80008e0:	6059      	strne	r1, [r3, #4]
 80008e2:	6863      	ldr	r3, [r4, #4]
 80008e4:	bf08      	it	eq
 80008e6:	6031      	streq	r1, [r6, #0]
 80008e8:	5162      	str	r2, [r4, r5]
 80008ea:	604b      	str	r3, [r1, #4]
 80008ec:	4638      	mov	r0, r7
 80008ee:	f104 060b 	add.w	r6, r4, #11
 80008f2:	f000 fd7d 	bl	80013f0 <__malloc_unlock>
 80008f6:	f026 0607 	bic.w	r6, r6, #7
 80008fa:	1d23      	adds	r3, r4, #4
 80008fc:	1af2      	subs	r2, r6, r3
 80008fe:	d0b6      	beq.n	800086e <_malloc_r+0x22>
 8000900:	1b9b      	subs	r3, r3, r6
 8000902:	50a3      	str	r3, [r4, r2]
 8000904:	e7b3      	b.n	800086e <_malloc_r+0x22>
 8000906:	6862      	ldr	r2, [r4, #4]
 8000908:	42a3      	cmp	r3, r4
 800090a:	bf0c      	ite	eq
 800090c:	6032      	streq	r2, [r6, #0]
 800090e:	605a      	strne	r2, [r3, #4]
 8000910:	e7ec      	b.n	80008ec <_malloc_r+0xa0>
 8000912:	4623      	mov	r3, r4
 8000914:	6864      	ldr	r4, [r4, #4]
 8000916:	e7b2      	b.n	800087e <_malloc_r+0x32>
 8000918:	4634      	mov	r4, r6
 800091a:	6876      	ldr	r6, [r6, #4]
 800091c:	e7b9      	b.n	8000892 <_malloc_r+0x46>
 800091e:	230c      	movs	r3, #12
 8000920:	603b      	str	r3, [r7, #0]
 8000922:	4638      	mov	r0, r7
 8000924:	f000 fd64 	bl	80013f0 <__malloc_unlock>
 8000928:	e7a1      	b.n	800086e <_malloc_r+0x22>
 800092a:	6025      	str	r5, [r4, #0]
 800092c:	e7de      	b.n	80008ec <_malloc_r+0xa0>
 800092e:	bf00      	nop
 8000930:	20000088 	.word	0x20000088

08000934 <__sfputc_r>:
 8000934:	6893      	ldr	r3, [r2, #8]
 8000936:	3b01      	subs	r3, #1
 8000938:	2b00      	cmp	r3, #0
 800093a:	b410      	push	{r4}
 800093c:	6093      	str	r3, [r2, #8]
 800093e:	da07      	bge.n	8000950 <__sfputc_r+0x1c>
 8000940:	6994      	ldr	r4, [r2, #24]
 8000942:	42a3      	cmp	r3, r4
 8000944:	db01      	blt.n	800094a <__sfputc_r+0x16>
 8000946:	290a      	cmp	r1, #10
 8000948:	d102      	bne.n	8000950 <__sfputc_r+0x1c>
 800094a:	bc10      	pop	{r4}
 800094c:	f000 bb32 	b.w	8000fb4 <__swbuf_r>
 8000950:	6813      	ldr	r3, [r2, #0]
 8000952:	1c58      	adds	r0, r3, #1
 8000954:	6010      	str	r0, [r2, #0]
 8000956:	7019      	strb	r1, [r3, #0]
 8000958:	4608      	mov	r0, r1
 800095a:	bc10      	pop	{r4}
 800095c:	4770      	bx	lr

0800095e <__sfputs_r>:
 800095e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000960:	4606      	mov	r6, r0
 8000962:	460f      	mov	r7, r1
 8000964:	4614      	mov	r4, r2
 8000966:	18d5      	adds	r5, r2, r3
 8000968:	42ac      	cmp	r4, r5
 800096a:	d101      	bne.n	8000970 <__sfputs_r+0x12>
 800096c:	2000      	movs	r0, #0
 800096e:	e007      	b.n	8000980 <__sfputs_r+0x22>
 8000970:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000974:	463a      	mov	r2, r7
 8000976:	4630      	mov	r0, r6
 8000978:	f7ff ffdc 	bl	8000934 <__sfputc_r>
 800097c:	1c43      	adds	r3, r0, #1
 800097e:	d1f3      	bne.n	8000968 <__sfputs_r+0xa>
 8000980:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000984 <_vfiprintf_r>:
 8000984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000988:	460d      	mov	r5, r1
 800098a:	b09d      	sub	sp, #116	; 0x74
 800098c:	4614      	mov	r4, r2
 800098e:	4698      	mov	r8, r3
 8000990:	4606      	mov	r6, r0
 8000992:	b118      	cbz	r0, 800099c <_vfiprintf_r+0x18>
 8000994:	6983      	ldr	r3, [r0, #24]
 8000996:	b90b      	cbnz	r3, 800099c <_vfiprintf_r+0x18>
 8000998:	f7ff fe98 	bl	80006cc <__sinit>
 800099c:	4b89      	ldr	r3, [pc, #548]	; (8000bc4 <_vfiprintf_r+0x240>)
 800099e:	429d      	cmp	r5, r3
 80009a0:	d11b      	bne.n	80009da <_vfiprintf_r+0x56>
 80009a2:	6875      	ldr	r5, [r6, #4]
 80009a4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009a6:	07d9      	lsls	r1, r3, #31
 80009a8:	d405      	bmi.n	80009b6 <_vfiprintf_r+0x32>
 80009aa:	89ab      	ldrh	r3, [r5, #12]
 80009ac:	059a      	lsls	r2, r3, #22
 80009ae:	d402      	bmi.n	80009b6 <_vfiprintf_r+0x32>
 80009b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009b2:	f7ff ff29 	bl	8000808 <__retarget_lock_acquire_recursive>
 80009b6:	89ab      	ldrh	r3, [r5, #12]
 80009b8:	071b      	lsls	r3, r3, #28
 80009ba:	d501      	bpl.n	80009c0 <_vfiprintf_r+0x3c>
 80009bc:	692b      	ldr	r3, [r5, #16]
 80009be:	b9eb      	cbnz	r3, 80009fc <_vfiprintf_r+0x78>
 80009c0:	4629      	mov	r1, r5
 80009c2:	4630      	mov	r0, r6
 80009c4:	f000 fb5a 	bl	800107c <__swsetup_r>
 80009c8:	b1c0      	cbz	r0, 80009fc <_vfiprintf_r+0x78>
 80009ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009cc:	07dc      	lsls	r4, r3, #31
 80009ce:	d50e      	bpl.n	80009ee <_vfiprintf_r+0x6a>
 80009d0:	f04f 30ff 	mov.w	r0, #4294967295
 80009d4:	b01d      	add	sp, #116	; 0x74
 80009d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009da:	4b7b      	ldr	r3, [pc, #492]	; (8000bc8 <_vfiprintf_r+0x244>)
 80009dc:	429d      	cmp	r5, r3
 80009de:	d101      	bne.n	80009e4 <_vfiprintf_r+0x60>
 80009e0:	68b5      	ldr	r5, [r6, #8]
 80009e2:	e7df      	b.n	80009a4 <_vfiprintf_r+0x20>
 80009e4:	4b79      	ldr	r3, [pc, #484]	; (8000bcc <_vfiprintf_r+0x248>)
 80009e6:	429d      	cmp	r5, r3
 80009e8:	bf08      	it	eq
 80009ea:	68f5      	ldreq	r5, [r6, #12]
 80009ec:	e7da      	b.n	80009a4 <_vfiprintf_r+0x20>
 80009ee:	89ab      	ldrh	r3, [r5, #12]
 80009f0:	0598      	lsls	r0, r3, #22
 80009f2:	d4ed      	bmi.n	80009d0 <_vfiprintf_r+0x4c>
 80009f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009f6:	f7ff ff08 	bl	800080a <__retarget_lock_release_recursive>
 80009fa:	e7e9      	b.n	80009d0 <_vfiprintf_r+0x4c>
 80009fc:	2300      	movs	r3, #0
 80009fe:	9309      	str	r3, [sp, #36]	; 0x24
 8000a00:	2320      	movs	r3, #32
 8000a02:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a06:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a0a:	2330      	movs	r3, #48	; 0x30
 8000a0c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000bd0 <_vfiprintf_r+0x24c>
 8000a10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a14:	f04f 0901 	mov.w	r9, #1
 8000a18:	4623      	mov	r3, r4
 8000a1a:	469a      	mov	sl, r3
 8000a1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a20:	b10a      	cbz	r2, 8000a26 <_vfiprintf_r+0xa2>
 8000a22:	2a25      	cmp	r2, #37	; 0x25
 8000a24:	d1f9      	bne.n	8000a1a <_vfiprintf_r+0x96>
 8000a26:	ebba 0b04 	subs.w	fp, sl, r4
 8000a2a:	d00b      	beq.n	8000a44 <_vfiprintf_r+0xc0>
 8000a2c:	465b      	mov	r3, fp
 8000a2e:	4622      	mov	r2, r4
 8000a30:	4629      	mov	r1, r5
 8000a32:	4630      	mov	r0, r6
 8000a34:	f7ff ff93 	bl	800095e <__sfputs_r>
 8000a38:	3001      	adds	r0, #1
 8000a3a:	f000 80aa 	beq.w	8000b92 <_vfiprintf_r+0x20e>
 8000a3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a40:	445a      	add	r2, fp
 8000a42:	9209      	str	r2, [sp, #36]	; 0x24
 8000a44:	f89a 3000 	ldrb.w	r3, [sl]
 8000a48:	2b00      	cmp	r3, #0
 8000a4a:	f000 80a2 	beq.w	8000b92 <_vfiprintf_r+0x20e>
 8000a4e:	2300      	movs	r3, #0
 8000a50:	f04f 32ff 	mov.w	r2, #4294967295
 8000a54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a58:	f10a 0a01 	add.w	sl, sl, #1
 8000a5c:	9304      	str	r3, [sp, #16]
 8000a5e:	9307      	str	r3, [sp, #28]
 8000a60:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a64:	931a      	str	r3, [sp, #104]	; 0x68
 8000a66:	4654      	mov	r4, sl
 8000a68:	2205      	movs	r2, #5
 8000a6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a6e:	4858      	ldr	r0, [pc, #352]	; (8000bd0 <_vfiprintf_r+0x24c>)
 8000a70:	f7ff fbce 	bl	8000210 <memchr>
 8000a74:	9a04      	ldr	r2, [sp, #16]
 8000a76:	b9d8      	cbnz	r0, 8000ab0 <_vfiprintf_r+0x12c>
 8000a78:	06d1      	lsls	r1, r2, #27
 8000a7a:	bf44      	itt	mi
 8000a7c:	2320      	movmi	r3, #32
 8000a7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a82:	0713      	lsls	r3, r2, #28
 8000a84:	bf44      	itt	mi
 8000a86:	232b      	movmi	r3, #43	; 0x2b
 8000a88:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000a90:	2b2a      	cmp	r3, #42	; 0x2a
 8000a92:	d015      	beq.n	8000ac0 <_vfiprintf_r+0x13c>
 8000a94:	9a07      	ldr	r2, [sp, #28]
 8000a96:	4654      	mov	r4, sl
 8000a98:	2000      	movs	r0, #0
 8000a9a:	f04f 0c0a 	mov.w	ip, #10
 8000a9e:	4621      	mov	r1, r4
 8000aa0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000aa4:	3b30      	subs	r3, #48	; 0x30
 8000aa6:	2b09      	cmp	r3, #9
 8000aa8:	d94e      	bls.n	8000b48 <_vfiprintf_r+0x1c4>
 8000aaa:	b1b0      	cbz	r0, 8000ada <_vfiprintf_r+0x156>
 8000aac:	9207      	str	r2, [sp, #28]
 8000aae:	e014      	b.n	8000ada <_vfiprintf_r+0x156>
 8000ab0:	eba0 0308 	sub.w	r3, r0, r8
 8000ab4:	fa09 f303 	lsl.w	r3, r9, r3
 8000ab8:	4313      	orrs	r3, r2
 8000aba:	9304      	str	r3, [sp, #16]
 8000abc:	46a2      	mov	sl, r4
 8000abe:	e7d2      	b.n	8000a66 <_vfiprintf_r+0xe2>
 8000ac0:	9b03      	ldr	r3, [sp, #12]
 8000ac2:	1d19      	adds	r1, r3, #4
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	9103      	str	r1, [sp, #12]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	bfbb      	ittet	lt
 8000acc:	425b      	neglt	r3, r3
 8000ace:	f042 0202 	orrlt.w	r2, r2, #2
 8000ad2:	9307      	strge	r3, [sp, #28]
 8000ad4:	9307      	strlt	r3, [sp, #28]
 8000ad6:	bfb8      	it	lt
 8000ad8:	9204      	strlt	r2, [sp, #16]
 8000ada:	7823      	ldrb	r3, [r4, #0]
 8000adc:	2b2e      	cmp	r3, #46	; 0x2e
 8000ade:	d10c      	bne.n	8000afa <_vfiprintf_r+0x176>
 8000ae0:	7863      	ldrb	r3, [r4, #1]
 8000ae2:	2b2a      	cmp	r3, #42	; 0x2a
 8000ae4:	d135      	bne.n	8000b52 <_vfiprintf_r+0x1ce>
 8000ae6:	9b03      	ldr	r3, [sp, #12]
 8000ae8:	1d1a      	adds	r2, r3, #4
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	9203      	str	r2, [sp, #12]
 8000aee:	2b00      	cmp	r3, #0
 8000af0:	bfb8      	it	lt
 8000af2:	f04f 33ff 	movlt.w	r3, #4294967295
 8000af6:	3402      	adds	r4, #2
 8000af8:	9305      	str	r3, [sp, #20]
 8000afa:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000bd4 <_vfiprintf_r+0x250>
 8000afe:	7821      	ldrb	r1, [r4, #0]
 8000b00:	2203      	movs	r2, #3
 8000b02:	4650      	mov	r0, sl
 8000b04:	f7ff fb84 	bl	8000210 <memchr>
 8000b08:	b140      	cbz	r0, 8000b1c <_vfiprintf_r+0x198>
 8000b0a:	2340      	movs	r3, #64	; 0x40
 8000b0c:	eba0 000a 	sub.w	r0, r0, sl
 8000b10:	fa03 f000 	lsl.w	r0, r3, r0
 8000b14:	9b04      	ldr	r3, [sp, #16]
 8000b16:	4303      	orrs	r3, r0
 8000b18:	3401      	adds	r4, #1
 8000b1a:	9304      	str	r3, [sp, #16]
 8000b1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b20:	482d      	ldr	r0, [pc, #180]	; (8000bd8 <_vfiprintf_r+0x254>)
 8000b22:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b26:	2206      	movs	r2, #6
 8000b28:	f7ff fb72 	bl	8000210 <memchr>
 8000b2c:	2800      	cmp	r0, #0
 8000b2e:	d03f      	beq.n	8000bb0 <_vfiprintf_r+0x22c>
 8000b30:	4b2a      	ldr	r3, [pc, #168]	; (8000bdc <_vfiprintf_r+0x258>)
 8000b32:	bb1b      	cbnz	r3, 8000b7c <_vfiprintf_r+0x1f8>
 8000b34:	9b03      	ldr	r3, [sp, #12]
 8000b36:	3307      	adds	r3, #7
 8000b38:	f023 0307 	bic.w	r3, r3, #7
 8000b3c:	3308      	adds	r3, #8
 8000b3e:	9303      	str	r3, [sp, #12]
 8000b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b42:	443b      	add	r3, r7
 8000b44:	9309      	str	r3, [sp, #36]	; 0x24
 8000b46:	e767      	b.n	8000a18 <_vfiprintf_r+0x94>
 8000b48:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b4c:	460c      	mov	r4, r1
 8000b4e:	2001      	movs	r0, #1
 8000b50:	e7a5      	b.n	8000a9e <_vfiprintf_r+0x11a>
 8000b52:	2300      	movs	r3, #0
 8000b54:	3401      	adds	r4, #1
 8000b56:	9305      	str	r3, [sp, #20]
 8000b58:	4619      	mov	r1, r3
 8000b5a:	f04f 0c0a 	mov.w	ip, #10
 8000b5e:	4620      	mov	r0, r4
 8000b60:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b64:	3a30      	subs	r2, #48	; 0x30
 8000b66:	2a09      	cmp	r2, #9
 8000b68:	d903      	bls.n	8000b72 <_vfiprintf_r+0x1ee>
 8000b6a:	2b00      	cmp	r3, #0
 8000b6c:	d0c5      	beq.n	8000afa <_vfiprintf_r+0x176>
 8000b6e:	9105      	str	r1, [sp, #20]
 8000b70:	e7c3      	b.n	8000afa <_vfiprintf_r+0x176>
 8000b72:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b76:	4604      	mov	r4, r0
 8000b78:	2301      	movs	r3, #1
 8000b7a:	e7f0      	b.n	8000b5e <_vfiprintf_r+0x1da>
 8000b7c:	ab03      	add	r3, sp, #12
 8000b7e:	9300      	str	r3, [sp, #0]
 8000b80:	462a      	mov	r2, r5
 8000b82:	4b17      	ldr	r3, [pc, #92]	; (8000be0 <_vfiprintf_r+0x25c>)
 8000b84:	a904      	add	r1, sp, #16
 8000b86:	4630      	mov	r0, r6
 8000b88:	f3af 8000 	nop.w
 8000b8c:	4607      	mov	r7, r0
 8000b8e:	1c78      	adds	r0, r7, #1
 8000b90:	d1d6      	bne.n	8000b40 <_vfiprintf_r+0x1bc>
 8000b92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b94:	07d9      	lsls	r1, r3, #31
 8000b96:	d405      	bmi.n	8000ba4 <_vfiprintf_r+0x220>
 8000b98:	89ab      	ldrh	r3, [r5, #12]
 8000b9a:	059a      	lsls	r2, r3, #22
 8000b9c:	d402      	bmi.n	8000ba4 <_vfiprintf_r+0x220>
 8000b9e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ba0:	f7ff fe33 	bl	800080a <__retarget_lock_release_recursive>
 8000ba4:	89ab      	ldrh	r3, [r5, #12]
 8000ba6:	065b      	lsls	r3, r3, #25
 8000ba8:	f53f af12 	bmi.w	80009d0 <_vfiprintf_r+0x4c>
 8000bac:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000bae:	e711      	b.n	80009d4 <_vfiprintf_r+0x50>
 8000bb0:	ab03      	add	r3, sp, #12
 8000bb2:	9300      	str	r3, [sp, #0]
 8000bb4:	462a      	mov	r2, r5
 8000bb6:	4b0a      	ldr	r3, [pc, #40]	; (8000be0 <_vfiprintf_r+0x25c>)
 8000bb8:	a904      	add	r1, sp, #16
 8000bba:	4630      	mov	r0, r6
 8000bbc:	f000 f880 	bl	8000cc0 <_printf_i>
 8000bc0:	e7e4      	b.n	8000b8c <_vfiprintf_r+0x208>
 8000bc2:	bf00      	nop
 8000bc4:	080015cc 	.word	0x080015cc
 8000bc8:	080015ec 	.word	0x080015ec
 8000bcc:	080015ac 	.word	0x080015ac
 8000bd0:	0800160c 	.word	0x0800160c
 8000bd4:	08001612 	.word	0x08001612
 8000bd8:	08001616 	.word	0x08001616
 8000bdc:	00000000 	.word	0x00000000
 8000be0:	0800095f 	.word	0x0800095f

08000be4 <_printf_common>:
 8000be4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000be8:	4616      	mov	r6, r2
 8000bea:	4699      	mov	r9, r3
 8000bec:	688a      	ldr	r2, [r1, #8]
 8000bee:	690b      	ldr	r3, [r1, #16]
 8000bf0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000bf4:	4293      	cmp	r3, r2
 8000bf6:	bfb8      	it	lt
 8000bf8:	4613      	movlt	r3, r2
 8000bfa:	6033      	str	r3, [r6, #0]
 8000bfc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c00:	4607      	mov	r7, r0
 8000c02:	460c      	mov	r4, r1
 8000c04:	b10a      	cbz	r2, 8000c0a <_printf_common+0x26>
 8000c06:	3301      	adds	r3, #1
 8000c08:	6033      	str	r3, [r6, #0]
 8000c0a:	6823      	ldr	r3, [r4, #0]
 8000c0c:	0699      	lsls	r1, r3, #26
 8000c0e:	bf42      	ittt	mi
 8000c10:	6833      	ldrmi	r3, [r6, #0]
 8000c12:	3302      	addmi	r3, #2
 8000c14:	6033      	strmi	r3, [r6, #0]
 8000c16:	6825      	ldr	r5, [r4, #0]
 8000c18:	f015 0506 	ands.w	r5, r5, #6
 8000c1c:	d106      	bne.n	8000c2c <_printf_common+0x48>
 8000c1e:	f104 0a19 	add.w	sl, r4, #25
 8000c22:	68e3      	ldr	r3, [r4, #12]
 8000c24:	6832      	ldr	r2, [r6, #0]
 8000c26:	1a9b      	subs	r3, r3, r2
 8000c28:	42ab      	cmp	r3, r5
 8000c2a:	dc26      	bgt.n	8000c7a <_printf_common+0x96>
 8000c2c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c30:	1e13      	subs	r3, r2, #0
 8000c32:	6822      	ldr	r2, [r4, #0]
 8000c34:	bf18      	it	ne
 8000c36:	2301      	movne	r3, #1
 8000c38:	0692      	lsls	r2, r2, #26
 8000c3a:	d42b      	bmi.n	8000c94 <_printf_common+0xb0>
 8000c3c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c40:	4649      	mov	r1, r9
 8000c42:	4638      	mov	r0, r7
 8000c44:	47c0      	blx	r8
 8000c46:	3001      	adds	r0, #1
 8000c48:	d01e      	beq.n	8000c88 <_printf_common+0xa4>
 8000c4a:	6823      	ldr	r3, [r4, #0]
 8000c4c:	68e5      	ldr	r5, [r4, #12]
 8000c4e:	6832      	ldr	r2, [r6, #0]
 8000c50:	f003 0306 	and.w	r3, r3, #6
 8000c54:	2b04      	cmp	r3, #4
 8000c56:	bf08      	it	eq
 8000c58:	1aad      	subeq	r5, r5, r2
 8000c5a:	68a3      	ldr	r3, [r4, #8]
 8000c5c:	6922      	ldr	r2, [r4, #16]
 8000c5e:	bf0c      	ite	eq
 8000c60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c64:	2500      	movne	r5, #0
 8000c66:	4293      	cmp	r3, r2
 8000c68:	bfc4      	itt	gt
 8000c6a:	1a9b      	subgt	r3, r3, r2
 8000c6c:	18ed      	addgt	r5, r5, r3
 8000c6e:	2600      	movs	r6, #0
 8000c70:	341a      	adds	r4, #26
 8000c72:	42b5      	cmp	r5, r6
 8000c74:	d11a      	bne.n	8000cac <_printf_common+0xc8>
 8000c76:	2000      	movs	r0, #0
 8000c78:	e008      	b.n	8000c8c <_printf_common+0xa8>
 8000c7a:	2301      	movs	r3, #1
 8000c7c:	4652      	mov	r2, sl
 8000c7e:	4649      	mov	r1, r9
 8000c80:	4638      	mov	r0, r7
 8000c82:	47c0      	blx	r8
 8000c84:	3001      	adds	r0, #1
 8000c86:	d103      	bne.n	8000c90 <_printf_common+0xac>
 8000c88:	f04f 30ff 	mov.w	r0, #4294967295
 8000c8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c90:	3501      	adds	r5, #1
 8000c92:	e7c6      	b.n	8000c22 <_printf_common+0x3e>
 8000c94:	18e1      	adds	r1, r4, r3
 8000c96:	1c5a      	adds	r2, r3, #1
 8000c98:	2030      	movs	r0, #48	; 0x30
 8000c9a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c9e:	4422      	add	r2, r4
 8000ca0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ca4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ca8:	3302      	adds	r3, #2
 8000caa:	e7c7      	b.n	8000c3c <_printf_common+0x58>
 8000cac:	2301      	movs	r3, #1
 8000cae:	4622      	mov	r2, r4
 8000cb0:	4649      	mov	r1, r9
 8000cb2:	4638      	mov	r0, r7
 8000cb4:	47c0      	blx	r8
 8000cb6:	3001      	adds	r0, #1
 8000cb8:	d0e6      	beq.n	8000c88 <_printf_common+0xa4>
 8000cba:	3601      	adds	r6, #1
 8000cbc:	e7d9      	b.n	8000c72 <_printf_common+0x8e>
	...

08000cc0 <_printf_i>:
 8000cc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000cc4:	7e0f      	ldrb	r7, [r1, #24]
 8000cc6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cc8:	2f78      	cmp	r7, #120	; 0x78
 8000cca:	4691      	mov	r9, r2
 8000ccc:	4680      	mov	r8, r0
 8000cce:	460c      	mov	r4, r1
 8000cd0:	469a      	mov	sl, r3
 8000cd2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cd6:	d807      	bhi.n	8000ce8 <_printf_i+0x28>
 8000cd8:	2f62      	cmp	r7, #98	; 0x62
 8000cda:	d80a      	bhi.n	8000cf2 <_printf_i+0x32>
 8000cdc:	2f00      	cmp	r7, #0
 8000cde:	f000 80d8 	beq.w	8000e92 <_printf_i+0x1d2>
 8000ce2:	2f58      	cmp	r7, #88	; 0x58
 8000ce4:	f000 80a3 	beq.w	8000e2e <_printf_i+0x16e>
 8000ce8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cec:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000cf0:	e03a      	b.n	8000d68 <_printf_i+0xa8>
 8000cf2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000cf6:	2b15      	cmp	r3, #21
 8000cf8:	d8f6      	bhi.n	8000ce8 <_printf_i+0x28>
 8000cfa:	a101      	add	r1, pc, #4	; (adr r1, 8000d00 <_printf_i+0x40>)
 8000cfc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d00:	08000d59 	.word	0x08000d59
 8000d04:	08000d6d 	.word	0x08000d6d
 8000d08:	08000ce9 	.word	0x08000ce9
 8000d0c:	08000ce9 	.word	0x08000ce9
 8000d10:	08000ce9 	.word	0x08000ce9
 8000d14:	08000ce9 	.word	0x08000ce9
 8000d18:	08000d6d 	.word	0x08000d6d
 8000d1c:	08000ce9 	.word	0x08000ce9
 8000d20:	08000ce9 	.word	0x08000ce9
 8000d24:	08000ce9 	.word	0x08000ce9
 8000d28:	08000ce9 	.word	0x08000ce9
 8000d2c:	08000e79 	.word	0x08000e79
 8000d30:	08000d9d 	.word	0x08000d9d
 8000d34:	08000e5b 	.word	0x08000e5b
 8000d38:	08000ce9 	.word	0x08000ce9
 8000d3c:	08000ce9 	.word	0x08000ce9
 8000d40:	08000e9b 	.word	0x08000e9b
 8000d44:	08000ce9 	.word	0x08000ce9
 8000d48:	08000d9d 	.word	0x08000d9d
 8000d4c:	08000ce9 	.word	0x08000ce9
 8000d50:	08000ce9 	.word	0x08000ce9
 8000d54:	08000e63 	.word	0x08000e63
 8000d58:	682b      	ldr	r3, [r5, #0]
 8000d5a:	1d1a      	adds	r2, r3, #4
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	602a      	str	r2, [r5, #0]
 8000d60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d64:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d68:	2301      	movs	r3, #1
 8000d6a:	e0a3      	b.n	8000eb4 <_printf_i+0x1f4>
 8000d6c:	6820      	ldr	r0, [r4, #0]
 8000d6e:	6829      	ldr	r1, [r5, #0]
 8000d70:	0606      	lsls	r6, r0, #24
 8000d72:	f101 0304 	add.w	r3, r1, #4
 8000d76:	d50a      	bpl.n	8000d8e <_printf_i+0xce>
 8000d78:	680e      	ldr	r6, [r1, #0]
 8000d7a:	602b      	str	r3, [r5, #0]
 8000d7c:	2e00      	cmp	r6, #0
 8000d7e:	da03      	bge.n	8000d88 <_printf_i+0xc8>
 8000d80:	232d      	movs	r3, #45	; 0x2d
 8000d82:	4276      	negs	r6, r6
 8000d84:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d88:	485e      	ldr	r0, [pc, #376]	; (8000f04 <_printf_i+0x244>)
 8000d8a:	230a      	movs	r3, #10
 8000d8c:	e019      	b.n	8000dc2 <_printf_i+0x102>
 8000d8e:	680e      	ldr	r6, [r1, #0]
 8000d90:	602b      	str	r3, [r5, #0]
 8000d92:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d96:	bf18      	it	ne
 8000d98:	b236      	sxthne	r6, r6
 8000d9a:	e7ef      	b.n	8000d7c <_printf_i+0xbc>
 8000d9c:	682b      	ldr	r3, [r5, #0]
 8000d9e:	6820      	ldr	r0, [r4, #0]
 8000da0:	1d19      	adds	r1, r3, #4
 8000da2:	6029      	str	r1, [r5, #0]
 8000da4:	0601      	lsls	r1, r0, #24
 8000da6:	d501      	bpl.n	8000dac <_printf_i+0xec>
 8000da8:	681e      	ldr	r6, [r3, #0]
 8000daa:	e002      	b.n	8000db2 <_printf_i+0xf2>
 8000dac:	0646      	lsls	r6, r0, #25
 8000dae:	d5fb      	bpl.n	8000da8 <_printf_i+0xe8>
 8000db0:	881e      	ldrh	r6, [r3, #0]
 8000db2:	4854      	ldr	r0, [pc, #336]	; (8000f04 <_printf_i+0x244>)
 8000db4:	2f6f      	cmp	r7, #111	; 0x6f
 8000db6:	bf0c      	ite	eq
 8000db8:	2308      	moveq	r3, #8
 8000dba:	230a      	movne	r3, #10
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000dc2:	6865      	ldr	r5, [r4, #4]
 8000dc4:	60a5      	str	r5, [r4, #8]
 8000dc6:	2d00      	cmp	r5, #0
 8000dc8:	bfa2      	ittt	ge
 8000dca:	6821      	ldrge	r1, [r4, #0]
 8000dcc:	f021 0104 	bicge.w	r1, r1, #4
 8000dd0:	6021      	strge	r1, [r4, #0]
 8000dd2:	b90e      	cbnz	r6, 8000dd8 <_printf_i+0x118>
 8000dd4:	2d00      	cmp	r5, #0
 8000dd6:	d04d      	beq.n	8000e74 <_printf_i+0x1b4>
 8000dd8:	4615      	mov	r5, r2
 8000dda:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dde:	fb03 6711 	mls	r7, r3, r1, r6
 8000de2:	5dc7      	ldrb	r7, [r0, r7]
 8000de4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000de8:	4637      	mov	r7, r6
 8000dea:	42bb      	cmp	r3, r7
 8000dec:	460e      	mov	r6, r1
 8000dee:	d9f4      	bls.n	8000dda <_printf_i+0x11a>
 8000df0:	2b08      	cmp	r3, #8
 8000df2:	d10b      	bne.n	8000e0c <_printf_i+0x14c>
 8000df4:	6823      	ldr	r3, [r4, #0]
 8000df6:	07de      	lsls	r6, r3, #31
 8000df8:	d508      	bpl.n	8000e0c <_printf_i+0x14c>
 8000dfa:	6923      	ldr	r3, [r4, #16]
 8000dfc:	6861      	ldr	r1, [r4, #4]
 8000dfe:	4299      	cmp	r1, r3
 8000e00:	bfde      	ittt	le
 8000e02:	2330      	movle	r3, #48	; 0x30
 8000e04:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e08:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e0c:	1b52      	subs	r2, r2, r5
 8000e0e:	6122      	str	r2, [r4, #16]
 8000e10:	f8cd a000 	str.w	sl, [sp]
 8000e14:	464b      	mov	r3, r9
 8000e16:	aa03      	add	r2, sp, #12
 8000e18:	4621      	mov	r1, r4
 8000e1a:	4640      	mov	r0, r8
 8000e1c:	f7ff fee2 	bl	8000be4 <_printf_common>
 8000e20:	3001      	adds	r0, #1
 8000e22:	d14c      	bne.n	8000ebe <_printf_i+0x1fe>
 8000e24:	f04f 30ff 	mov.w	r0, #4294967295
 8000e28:	b004      	add	sp, #16
 8000e2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e2e:	4835      	ldr	r0, [pc, #212]	; (8000f04 <_printf_i+0x244>)
 8000e30:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000e34:	6829      	ldr	r1, [r5, #0]
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e3c:	6029      	str	r1, [r5, #0]
 8000e3e:	061d      	lsls	r5, r3, #24
 8000e40:	d514      	bpl.n	8000e6c <_printf_i+0x1ac>
 8000e42:	07df      	lsls	r7, r3, #31
 8000e44:	bf44      	itt	mi
 8000e46:	f043 0320 	orrmi.w	r3, r3, #32
 8000e4a:	6023      	strmi	r3, [r4, #0]
 8000e4c:	b91e      	cbnz	r6, 8000e56 <_printf_i+0x196>
 8000e4e:	6823      	ldr	r3, [r4, #0]
 8000e50:	f023 0320 	bic.w	r3, r3, #32
 8000e54:	6023      	str	r3, [r4, #0]
 8000e56:	2310      	movs	r3, #16
 8000e58:	e7b0      	b.n	8000dbc <_printf_i+0xfc>
 8000e5a:	6823      	ldr	r3, [r4, #0]
 8000e5c:	f043 0320 	orr.w	r3, r3, #32
 8000e60:	6023      	str	r3, [r4, #0]
 8000e62:	2378      	movs	r3, #120	; 0x78
 8000e64:	4828      	ldr	r0, [pc, #160]	; (8000f08 <_printf_i+0x248>)
 8000e66:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e6a:	e7e3      	b.n	8000e34 <_printf_i+0x174>
 8000e6c:	0659      	lsls	r1, r3, #25
 8000e6e:	bf48      	it	mi
 8000e70:	b2b6      	uxthmi	r6, r6
 8000e72:	e7e6      	b.n	8000e42 <_printf_i+0x182>
 8000e74:	4615      	mov	r5, r2
 8000e76:	e7bb      	b.n	8000df0 <_printf_i+0x130>
 8000e78:	682b      	ldr	r3, [r5, #0]
 8000e7a:	6826      	ldr	r6, [r4, #0]
 8000e7c:	6961      	ldr	r1, [r4, #20]
 8000e7e:	1d18      	adds	r0, r3, #4
 8000e80:	6028      	str	r0, [r5, #0]
 8000e82:	0635      	lsls	r5, r6, #24
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	d501      	bpl.n	8000e8c <_printf_i+0x1cc>
 8000e88:	6019      	str	r1, [r3, #0]
 8000e8a:	e002      	b.n	8000e92 <_printf_i+0x1d2>
 8000e8c:	0670      	lsls	r0, r6, #25
 8000e8e:	d5fb      	bpl.n	8000e88 <_printf_i+0x1c8>
 8000e90:	8019      	strh	r1, [r3, #0]
 8000e92:	2300      	movs	r3, #0
 8000e94:	6123      	str	r3, [r4, #16]
 8000e96:	4615      	mov	r5, r2
 8000e98:	e7ba      	b.n	8000e10 <_printf_i+0x150>
 8000e9a:	682b      	ldr	r3, [r5, #0]
 8000e9c:	1d1a      	adds	r2, r3, #4
 8000e9e:	602a      	str	r2, [r5, #0]
 8000ea0:	681d      	ldr	r5, [r3, #0]
 8000ea2:	6862      	ldr	r2, [r4, #4]
 8000ea4:	2100      	movs	r1, #0
 8000ea6:	4628      	mov	r0, r5
 8000ea8:	f7ff f9b2 	bl	8000210 <memchr>
 8000eac:	b108      	cbz	r0, 8000eb2 <_printf_i+0x1f2>
 8000eae:	1b40      	subs	r0, r0, r5
 8000eb0:	6060      	str	r0, [r4, #4]
 8000eb2:	6863      	ldr	r3, [r4, #4]
 8000eb4:	6123      	str	r3, [r4, #16]
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ebc:	e7a8      	b.n	8000e10 <_printf_i+0x150>
 8000ebe:	6923      	ldr	r3, [r4, #16]
 8000ec0:	462a      	mov	r2, r5
 8000ec2:	4649      	mov	r1, r9
 8000ec4:	4640      	mov	r0, r8
 8000ec6:	47d0      	blx	sl
 8000ec8:	3001      	adds	r0, #1
 8000eca:	d0ab      	beq.n	8000e24 <_printf_i+0x164>
 8000ecc:	6823      	ldr	r3, [r4, #0]
 8000ece:	079b      	lsls	r3, r3, #30
 8000ed0:	d413      	bmi.n	8000efa <_printf_i+0x23a>
 8000ed2:	68e0      	ldr	r0, [r4, #12]
 8000ed4:	9b03      	ldr	r3, [sp, #12]
 8000ed6:	4298      	cmp	r0, r3
 8000ed8:	bfb8      	it	lt
 8000eda:	4618      	movlt	r0, r3
 8000edc:	e7a4      	b.n	8000e28 <_printf_i+0x168>
 8000ede:	2301      	movs	r3, #1
 8000ee0:	4632      	mov	r2, r6
 8000ee2:	4649      	mov	r1, r9
 8000ee4:	4640      	mov	r0, r8
 8000ee6:	47d0      	blx	sl
 8000ee8:	3001      	adds	r0, #1
 8000eea:	d09b      	beq.n	8000e24 <_printf_i+0x164>
 8000eec:	3501      	adds	r5, #1
 8000eee:	68e3      	ldr	r3, [r4, #12]
 8000ef0:	9903      	ldr	r1, [sp, #12]
 8000ef2:	1a5b      	subs	r3, r3, r1
 8000ef4:	42ab      	cmp	r3, r5
 8000ef6:	dcf2      	bgt.n	8000ede <_printf_i+0x21e>
 8000ef8:	e7eb      	b.n	8000ed2 <_printf_i+0x212>
 8000efa:	2500      	movs	r5, #0
 8000efc:	f104 0619 	add.w	r6, r4, #25
 8000f00:	e7f5      	b.n	8000eee <_printf_i+0x22e>
 8000f02:	bf00      	nop
 8000f04:	0800161d 	.word	0x0800161d
 8000f08:	0800162e 	.word	0x0800162e

08000f0c <_sbrk_r>:
 8000f0c:	b538      	push	{r3, r4, r5, lr}
 8000f0e:	4d06      	ldr	r5, [pc, #24]	; (8000f28 <_sbrk_r+0x1c>)
 8000f10:	2300      	movs	r3, #0
 8000f12:	4604      	mov	r4, r0
 8000f14:	4608      	mov	r0, r1
 8000f16:	602b      	str	r3, [r5, #0]
 8000f18:	f7ff fad6 	bl	80004c8 <_sbrk>
 8000f1c:	1c43      	adds	r3, r0, #1
 8000f1e:	d102      	bne.n	8000f26 <_sbrk_r+0x1a>
 8000f20:	682b      	ldr	r3, [r5, #0]
 8000f22:	b103      	cbz	r3, 8000f26 <_sbrk_r+0x1a>
 8000f24:	6023      	str	r3, [r4, #0]
 8000f26:	bd38      	pop	{r3, r4, r5, pc}
 8000f28:	20000090 	.word	0x20000090

08000f2c <__sread>:
 8000f2c:	b510      	push	{r4, lr}
 8000f2e:	460c      	mov	r4, r1
 8000f30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f34:	f000 faac 	bl	8001490 <_read_r>
 8000f38:	2800      	cmp	r0, #0
 8000f3a:	bfab      	itete	ge
 8000f3c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f3e:	89a3      	ldrhlt	r3, [r4, #12]
 8000f40:	181b      	addge	r3, r3, r0
 8000f42:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f46:	bfac      	ite	ge
 8000f48:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f4a:	81a3      	strhlt	r3, [r4, #12]
 8000f4c:	bd10      	pop	{r4, pc}

08000f4e <__swrite>:
 8000f4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f52:	461f      	mov	r7, r3
 8000f54:	898b      	ldrh	r3, [r1, #12]
 8000f56:	05db      	lsls	r3, r3, #23
 8000f58:	4605      	mov	r5, r0
 8000f5a:	460c      	mov	r4, r1
 8000f5c:	4616      	mov	r6, r2
 8000f5e:	d505      	bpl.n	8000f6c <__swrite+0x1e>
 8000f60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f64:	2302      	movs	r3, #2
 8000f66:	2200      	movs	r2, #0
 8000f68:	f000 f9c4 	bl	80012f4 <_lseek_r>
 8000f6c:	89a3      	ldrh	r3, [r4, #12]
 8000f6e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f72:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f76:	81a3      	strh	r3, [r4, #12]
 8000f78:	4632      	mov	r2, r6
 8000f7a:	463b      	mov	r3, r7
 8000f7c:	4628      	mov	r0, r5
 8000f7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f82:	f000 b869 	b.w	8001058 <_write_r>

08000f86 <__sseek>:
 8000f86:	b510      	push	{r4, lr}
 8000f88:	460c      	mov	r4, r1
 8000f8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f8e:	f000 f9b1 	bl	80012f4 <_lseek_r>
 8000f92:	1c43      	adds	r3, r0, #1
 8000f94:	89a3      	ldrh	r3, [r4, #12]
 8000f96:	bf15      	itete	ne
 8000f98:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f9a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f9e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000fa2:	81a3      	strheq	r3, [r4, #12]
 8000fa4:	bf18      	it	ne
 8000fa6:	81a3      	strhne	r3, [r4, #12]
 8000fa8:	bd10      	pop	{r4, pc}

08000faa <__sclose>:
 8000faa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fae:	f000 b8d3 	b.w	8001158 <_close_r>
	...

08000fb4 <__swbuf_r>:
 8000fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fb6:	460e      	mov	r6, r1
 8000fb8:	4614      	mov	r4, r2
 8000fba:	4605      	mov	r5, r0
 8000fbc:	b118      	cbz	r0, 8000fc6 <__swbuf_r+0x12>
 8000fbe:	6983      	ldr	r3, [r0, #24]
 8000fc0:	b90b      	cbnz	r3, 8000fc6 <__swbuf_r+0x12>
 8000fc2:	f7ff fb83 	bl	80006cc <__sinit>
 8000fc6:	4b21      	ldr	r3, [pc, #132]	; (800104c <__swbuf_r+0x98>)
 8000fc8:	429c      	cmp	r4, r3
 8000fca:	d12b      	bne.n	8001024 <__swbuf_r+0x70>
 8000fcc:	686c      	ldr	r4, [r5, #4]
 8000fce:	69a3      	ldr	r3, [r4, #24]
 8000fd0:	60a3      	str	r3, [r4, #8]
 8000fd2:	89a3      	ldrh	r3, [r4, #12]
 8000fd4:	071a      	lsls	r2, r3, #28
 8000fd6:	d52f      	bpl.n	8001038 <__swbuf_r+0x84>
 8000fd8:	6923      	ldr	r3, [r4, #16]
 8000fda:	b36b      	cbz	r3, 8001038 <__swbuf_r+0x84>
 8000fdc:	6923      	ldr	r3, [r4, #16]
 8000fde:	6820      	ldr	r0, [r4, #0]
 8000fe0:	1ac0      	subs	r0, r0, r3
 8000fe2:	6963      	ldr	r3, [r4, #20]
 8000fe4:	b2f6      	uxtb	r6, r6
 8000fe6:	4283      	cmp	r3, r0
 8000fe8:	4637      	mov	r7, r6
 8000fea:	dc04      	bgt.n	8000ff6 <__swbuf_r+0x42>
 8000fec:	4621      	mov	r1, r4
 8000fee:	4628      	mov	r0, r5
 8000ff0:	f000 f944 	bl	800127c <_fflush_r>
 8000ff4:	bb30      	cbnz	r0, 8001044 <__swbuf_r+0x90>
 8000ff6:	68a3      	ldr	r3, [r4, #8]
 8000ff8:	3b01      	subs	r3, #1
 8000ffa:	60a3      	str	r3, [r4, #8]
 8000ffc:	6823      	ldr	r3, [r4, #0]
 8000ffe:	1c5a      	adds	r2, r3, #1
 8001000:	6022      	str	r2, [r4, #0]
 8001002:	701e      	strb	r6, [r3, #0]
 8001004:	6963      	ldr	r3, [r4, #20]
 8001006:	3001      	adds	r0, #1
 8001008:	4283      	cmp	r3, r0
 800100a:	d004      	beq.n	8001016 <__swbuf_r+0x62>
 800100c:	89a3      	ldrh	r3, [r4, #12]
 800100e:	07db      	lsls	r3, r3, #31
 8001010:	d506      	bpl.n	8001020 <__swbuf_r+0x6c>
 8001012:	2e0a      	cmp	r6, #10
 8001014:	d104      	bne.n	8001020 <__swbuf_r+0x6c>
 8001016:	4621      	mov	r1, r4
 8001018:	4628      	mov	r0, r5
 800101a:	f000 f92f 	bl	800127c <_fflush_r>
 800101e:	b988      	cbnz	r0, 8001044 <__swbuf_r+0x90>
 8001020:	4638      	mov	r0, r7
 8001022:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001024:	4b0a      	ldr	r3, [pc, #40]	; (8001050 <__swbuf_r+0x9c>)
 8001026:	429c      	cmp	r4, r3
 8001028:	d101      	bne.n	800102e <__swbuf_r+0x7a>
 800102a:	68ac      	ldr	r4, [r5, #8]
 800102c:	e7cf      	b.n	8000fce <__swbuf_r+0x1a>
 800102e:	4b09      	ldr	r3, [pc, #36]	; (8001054 <__swbuf_r+0xa0>)
 8001030:	429c      	cmp	r4, r3
 8001032:	bf08      	it	eq
 8001034:	68ec      	ldreq	r4, [r5, #12]
 8001036:	e7ca      	b.n	8000fce <__swbuf_r+0x1a>
 8001038:	4621      	mov	r1, r4
 800103a:	4628      	mov	r0, r5
 800103c:	f000 f81e 	bl	800107c <__swsetup_r>
 8001040:	2800      	cmp	r0, #0
 8001042:	d0cb      	beq.n	8000fdc <__swbuf_r+0x28>
 8001044:	f04f 37ff 	mov.w	r7, #4294967295
 8001048:	e7ea      	b.n	8001020 <__swbuf_r+0x6c>
 800104a:	bf00      	nop
 800104c:	080015cc 	.word	0x080015cc
 8001050:	080015ec 	.word	0x080015ec
 8001054:	080015ac 	.word	0x080015ac

08001058 <_write_r>:
 8001058:	b538      	push	{r3, r4, r5, lr}
 800105a:	4d07      	ldr	r5, [pc, #28]	; (8001078 <_write_r+0x20>)
 800105c:	4604      	mov	r4, r0
 800105e:	4608      	mov	r0, r1
 8001060:	4611      	mov	r1, r2
 8001062:	2200      	movs	r2, #0
 8001064:	602a      	str	r2, [r5, #0]
 8001066:	461a      	mov	r2, r3
 8001068:	f7ff f9e1 	bl	800042e <_write>
 800106c:	1c43      	adds	r3, r0, #1
 800106e:	d102      	bne.n	8001076 <_write_r+0x1e>
 8001070:	682b      	ldr	r3, [r5, #0]
 8001072:	b103      	cbz	r3, 8001076 <_write_r+0x1e>
 8001074:	6023      	str	r3, [r4, #0]
 8001076:	bd38      	pop	{r3, r4, r5, pc}
 8001078:	20000090 	.word	0x20000090

0800107c <__swsetup_r>:
 800107c:	4b32      	ldr	r3, [pc, #200]	; (8001148 <__swsetup_r+0xcc>)
 800107e:	b570      	push	{r4, r5, r6, lr}
 8001080:	681d      	ldr	r5, [r3, #0]
 8001082:	4606      	mov	r6, r0
 8001084:	460c      	mov	r4, r1
 8001086:	b125      	cbz	r5, 8001092 <__swsetup_r+0x16>
 8001088:	69ab      	ldr	r3, [r5, #24]
 800108a:	b913      	cbnz	r3, 8001092 <__swsetup_r+0x16>
 800108c:	4628      	mov	r0, r5
 800108e:	f7ff fb1d 	bl	80006cc <__sinit>
 8001092:	4b2e      	ldr	r3, [pc, #184]	; (800114c <__swsetup_r+0xd0>)
 8001094:	429c      	cmp	r4, r3
 8001096:	d10f      	bne.n	80010b8 <__swsetup_r+0x3c>
 8001098:	686c      	ldr	r4, [r5, #4]
 800109a:	89a3      	ldrh	r3, [r4, #12]
 800109c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010a0:	0719      	lsls	r1, r3, #28
 80010a2:	d42c      	bmi.n	80010fe <__swsetup_r+0x82>
 80010a4:	06dd      	lsls	r5, r3, #27
 80010a6:	d411      	bmi.n	80010cc <__swsetup_r+0x50>
 80010a8:	2309      	movs	r3, #9
 80010aa:	6033      	str	r3, [r6, #0]
 80010ac:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80010b0:	81a3      	strh	r3, [r4, #12]
 80010b2:	f04f 30ff 	mov.w	r0, #4294967295
 80010b6:	e03e      	b.n	8001136 <__swsetup_r+0xba>
 80010b8:	4b25      	ldr	r3, [pc, #148]	; (8001150 <__swsetup_r+0xd4>)
 80010ba:	429c      	cmp	r4, r3
 80010bc:	d101      	bne.n	80010c2 <__swsetup_r+0x46>
 80010be:	68ac      	ldr	r4, [r5, #8]
 80010c0:	e7eb      	b.n	800109a <__swsetup_r+0x1e>
 80010c2:	4b24      	ldr	r3, [pc, #144]	; (8001154 <__swsetup_r+0xd8>)
 80010c4:	429c      	cmp	r4, r3
 80010c6:	bf08      	it	eq
 80010c8:	68ec      	ldreq	r4, [r5, #12]
 80010ca:	e7e6      	b.n	800109a <__swsetup_r+0x1e>
 80010cc:	0758      	lsls	r0, r3, #29
 80010ce:	d512      	bpl.n	80010f6 <__swsetup_r+0x7a>
 80010d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010d2:	b141      	cbz	r1, 80010e6 <__swsetup_r+0x6a>
 80010d4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010d8:	4299      	cmp	r1, r3
 80010da:	d002      	beq.n	80010e2 <__swsetup_r+0x66>
 80010dc:	4630      	mov	r0, r6
 80010de:	f000 f98d 	bl	80013fc <_free_r>
 80010e2:	2300      	movs	r3, #0
 80010e4:	6363      	str	r3, [r4, #52]	; 0x34
 80010e6:	89a3      	ldrh	r3, [r4, #12]
 80010e8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80010ec:	81a3      	strh	r3, [r4, #12]
 80010ee:	2300      	movs	r3, #0
 80010f0:	6063      	str	r3, [r4, #4]
 80010f2:	6923      	ldr	r3, [r4, #16]
 80010f4:	6023      	str	r3, [r4, #0]
 80010f6:	89a3      	ldrh	r3, [r4, #12]
 80010f8:	f043 0308 	orr.w	r3, r3, #8
 80010fc:	81a3      	strh	r3, [r4, #12]
 80010fe:	6923      	ldr	r3, [r4, #16]
 8001100:	b94b      	cbnz	r3, 8001116 <__swsetup_r+0x9a>
 8001102:	89a3      	ldrh	r3, [r4, #12]
 8001104:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001108:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800110c:	d003      	beq.n	8001116 <__swsetup_r+0x9a>
 800110e:	4621      	mov	r1, r4
 8001110:	4630      	mov	r0, r6
 8001112:	f000 f927 	bl	8001364 <__smakebuf_r>
 8001116:	89a0      	ldrh	r0, [r4, #12]
 8001118:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800111c:	f010 0301 	ands.w	r3, r0, #1
 8001120:	d00a      	beq.n	8001138 <__swsetup_r+0xbc>
 8001122:	2300      	movs	r3, #0
 8001124:	60a3      	str	r3, [r4, #8]
 8001126:	6963      	ldr	r3, [r4, #20]
 8001128:	425b      	negs	r3, r3
 800112a:	61a3      	str	r3, [r4, #24]
 800112c:	6923      	ldr	r3, [r4, #16]
 800112e:	b943      	cbnz	r3, 8001142 <__swsetup_r+0xc6>
 8001130:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001134:	d1ba      	bne.n	80010ac <__swsetup_r+0x30>
 8001136:	bd70      	pop	{r4, r5, r6, pc}
 8001138:	0781      	lsls	r1, r0, #30
 800113a:	bf58      	it	pl
 800113c:	6963      	ldrpl	r3, [r4, #20]
 800113e:	60a3      	str	r3, [r4, #8]
 8001140:	e7f4      	b.n	800112c <__swsetup_r+0xb0>
 8001142:	2000      	movs	r0, #0
 8001144:	e7f7      	b.n	8001136 <__swsetup_r+0xba>
 8001146:	bf00      	nop
 8001148:	20000000 	.word	0x20000000
 800114c:	080015cc 	.word	0x080015cc
 8001150:	080015ec 	.word	0x080015ec
 8001154:	080015ac 	.word	0x080015ac

08001158 <_close_r>:
 8001158:	b538      	push	{r3, r4, r5, lr}
 800115a:	4d06      	ldr	r5, [pc, #24]	; (8001174 <_close_r+0x1c>)
 800115c:	2300      	movs	r3, #0
 800115e:	4604      	mov	r4, r0
 8001160:	4608      	mov	r0, r1
 8001162:	602b      	str	r3, [r5, #0]
 8001164:	f7ff f97f 	bl	8000466 <_close>
 8001168:	1c43      	adds	r3, r0, #1
 800116a:	d102      	bne.n	8001172 <_close_r+0x1a>
 800116c:	682b      	ldr	r3, [r5, #0]
 800116e:	b103      	cbz	r3, 8001172 <_close_r+0x1a>
 8001170:	6023      	str	r3, [r4, #0]
 8001172:	bd38      	pop	{r3, r4, r5, pc}
 8001174:	20000090 	.word	0x20000090

08001178 <__sflush_r>:
 8001178:	898a      	ldrh	r2, [r1, #12]
 800117a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800117c:	4605      	mov	r5, r0
 800117e:	0710      	lsls	r0, r2, #28
 8001180:	460c      	mov	r4, r1
 8001182:	d457      	bmi.n	8001234 <__sflush_r+0xbc>
 8001184:	684b      	ldr	r3, [r1, #4]
 8001186:	2b00      	cmp	r3, #0
 8001188:	dc04      	bgt.n	8001194 <__sflush_r+0x1c>
 800118a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800118c:	2b00      	cmp	r3, #0
 800118e:	dc01      	bgt.n	8001194 <__sflush_r+0x1c>
 8001190:	2000      	movs	r0, #0
 8001192:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001194:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001196:	2e00      	cmp	r6, #0
 8001198:	d0fa      	beq.n	8001190 <__sflush_r+0x18>
 800119a:	2300      	movs	r3, #0
 800119c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011a0:	682f      	ldr	r7, [r5, #0]
 80011a2:	602b      	str	r3, [r5, #0]
 80011a4:	d032      	beq.n	800120c <__sflush_r+0x94>
 80011a6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011a8:	89a3      	ldrh	r3, [r4, #12]
 80011aa:	075a      	lsls	r2, r3, #29
 80011ac:	d505      	bpl.n	80011ba <__sflush_r+0x42>
 80011ae:	6863      	ldr	r3, [r4, #4]
 80011b0:	1ac0      	subs	r0, r0, r3
 80011b2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011b4:	b10b      	cbz	r3, 80011ba <__sflush_r+0x42>
 80011b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011b8:	1ac0      	subs	r0, r0, r3
 80011ba:	2300      	movs	r3, #0
 80011bc:	4602      	mov	r2, r0
 80011be:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011c0:	6a21      	ldr	r1, [r4, #32]
 80011c2:	4628      	mov	r0, r5
 80011c4:	47b0      	blx	r6
 80011c6:	1c43      	adds	r3, r0, #1
 80011c8:	89a3      	ldrh	r3, [r4, #12]
 80011ca:	d106      	bne.n	80011da <__sflush_r+0x62>
 80011cc:	6829      	ldr	r1, [r5, #0]
 80011ce:	291d      	cmp	r1, #29
 80011d0:	d82c      	bhi.n	800122c <__sflush_r+0xb4>
 80011d2:	4a29      	ldr	r2, [pc, #164]	; (8001278 <__sflush_r+0x100>)
 80011d4:	40ca      	lsrs	r2, r1
 80011d6:	07d6      	lsls	r6, r2, #31
 80011d8:	d528      	bpl.n	800122c <__sflush_r+0xb4>
 80011da:	2200      	movs	r2, #0
 80011dc:	6062      	str	r2, [r4, #4]
 80011de:	04d9      	lsls	r1, r3, #19
 80011e0:	6922      	ldr	r2, [r4, #16]
 80011e2:	6022      	str	r2, [r4, #0]
 80011e4:	d504      	bpl.n	80011f0 <__sflush_r+0x78>
 80011e6:	1c42      	adds	r2, r0, #1
 80011e8:	d101      	bne.n	80011ee <__sflush_r+0x76>
 80011ea:	682b      	ldr	r3, [r5, #0]
 80011ec:	b903      	cbnz	r3, 80011f0 <__sflush_r+0x78>
 80011ee:	6560      	str	r0, [r4, #84]	; 0x54
 80011f0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011f2:	602f      	str	r7, [r5, #0]
 80011f4:	2900      	cmp	r1, #0
 80011f6:	d0cb      	beq.n	8001190 <__sflush_r+0x18>
 80011f8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011fc:	4299      	cmp	r1, r3
 80011fe:	d002      	beq.n	8001206 <__sflush_r+0x8e>
 8001200:	4628      	mov	r0, r5
 8001202:	f000 f8fb 	bl	80013fc <_free_r>
 8001206:	2000      	movs	r0, #0
 8001208:	6360      	str	r0, [r4, #52]	; 0x34
 800120a:	e7c2      	b.n	8001192 <__sflush_r+0x1a>
 800120c:	6a21      	ldr	r1, [r4, #32]
 800120e:	2301      	movs	r3, #1
 8001210:	4628      	mov	r0, r5
 8001212:	47b0      	blx	r6
 8001214:	1c41      	adds	r1, r0, #1
 8001216:	d1c7      	bne.n	80011a8 <__sflush_r+0x30>
 8001218:	682b      	ldr	r3, [r5, #0]
 800121a:	2b00      	cmp	r3, #0
 800121c:	d0c4      	beq.n	80011a8 <__sflush_r+0x30>
 800121e:	2b1d      	cmp	r3, #29
 8001220:	d001      	beq.n	8001226 <__sflush_r+0xae>
 8001222:	2b16      	cmp	r3, #22
 8001224:	d101      	bne.n	800122a <__sflush_r+0xb2>
 8001226:	602f      	str	r7, [r5, #0]
 8001228:	e7b2      	b.n	8001190 <__sflush_r+0x18>
 800122a:	89a3      	ldrh	r3, [r4, #12]
 800122c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001230:	81a3      	strh	r3, [r4, #12]
 8001232:	e7ae      	b.n	8001192 <__sflush_r+0x1a>
 8001234:	690f      	ldr	r7, [r1, #16]
 8001236:	2f00      	cmp	r7, #0
 8001238:	d0aa      	beq.n	8001190 <__sflush_r+0x18>
 800123a:	0793      	lsls	r3, r2, #30
 800123c:	680e      	ldr	r6, [r1, #0]
 800123e:	bf08      	it	eq
 8001240:	694b      	ldreq	r3, [r1, #20]
 8001242:	600f      	str	r7, [r1, #0]
 8001244:	bf18      	it	ne
 8001246:	2300      	movne	r3, #0
 8001248:	1bf6      	subs	r6, r6, r7
 800124a:	608b      	str	r3, [r1, #8]
 800124c:	2e00      	cmp	r6, #0
 800124e:	dd9f      	ble.n	8001190 <__sflush_r+0x18>
 8001250:	6a21      	ldr	r1, [r4, #32]
 8001252:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001256:	4633      	mov	r3, r6
 8001258:	463a      	mov	r2, r7
 800125a:	4628      	mov	r0, r5
 800125c:	47e0      	blx	ip
 800125e:	2800      	cmp	r0, #0
 8001260:	dc06      	bgt.n	8001270 <__sflush_r+0xf8>
 8001262:	89a3      	ldrh	r3, [r4, #12]
 8001264:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001268:	81a3      	strh	r3, [r4, #12]
 800126a:	f04f 30ff 	mov.w	r0, #4294967295
 800126e:	e790      	b.n	8001192 <__sflush_r+0x1a>
 8001270:	4407      	add	r7, r0
 8001272:	1a36      	subs	r6, r6, r0
 8001274:	e7ea      	b.n	800124c <__sflush_r+0xd4>
 8001276:	bf00      	nop
 8001278:	20400001 	.word	0x20400001

0800127c <_fflush_r>:
 800127c:	b538      	push	{r3, r4, r5, lr}
 800127e:	690b      	ldr	r3, [r1, #16]
 8001280:	4605      	mov	r5, r0
 8001282:	460c      	mov	r4, r1
 8001284:	b913      	cbnz	r3, 800128c <_fflush_r+0x10>
 8001286:	2500      	movs	r5, #0
 8001288:	4628      	mov	r0, r5
 800128a:	bd38      	pop	{r3, r4, r5, pc}
 800128c:	b118      	cbz	r0, 8001296 <_fflush_r+0x1a>
 800128e:	6983      	ldr	r3, [r0, #24]
 8001290:	b90b      	cbnz	r3, 8001296 <_fflush_r+0x1a>
 8001292:	f7ff fa1b 	bl	80006cc <__sinit>
 8001296:	4b14      	ldr	r3, [pc, #80]	; (80012e8 <_fflush_r+0x6c>)
 8001298:	429c      	cmp	r4, r3
 800129a:	d11b      	bne.n	80012d4 <_fflush_r+0x58>
 800129c:	686c      	ldr	r4, [r5, #4]
 800129e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d0ef      	beq.n	8001286 <_fflush_r+0xa>
 80012a6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012a8:	07d0      	lsls	r0, r2, #31
 80012aa:	d404      	bmi.n	80012b6 <_fflush_r+0x3a>
 80012ac:	0599      	lsls	r1, r3, #22
 80012ae:	d402      	bmi.n	80012b6 <_fflush_r+0x3a>
 80012b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012b2:	f7ff faa9 	bl	8000808 <__retarget_lock_acquire_recursive>
 80012b6:	4628      	mov	r0, r5
 80012b8:	4621      	mov	r1, r4
 80012ba:	f7ff ff5d 	bl	8001178 <__sflush_r>
 80012be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012c0:	07da      	lsls	r2, r3, #31
 80012c2:	4605      	mov	r5, r0
 80012c4:	d4e0      	bmi.n	8001288 <_fflush_r+0xc>
 80012c6:	89a3      	ldrh	r3, [r4, #12]
 80012c8:	059b      	lsls	r3, r3, #22
 80012ca:	d4dd      	bmi.n	8001288 <_fflush_r+0xc>
 80012cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ce:	f7ff fa9c 	bl	800080a <__retarget_lock_release_recursive>
 80012d2:	e7d9      	b.n	8001288 <_fflush_r+0xc>
 80012d4:	4b05      	ldr	r3, [pc, #20]	; (80012ec <_fflush_r+0x70>)
 80012d6:	429c      	cmp	r4, r3
 80012d8:	d101      	bne.n	80012de <_fflush_r+0x62>
 80012da:	68ac      	ldr	r4, [r5, #8]
 80012dc:	e7df      	b.n	800129e <_fflush_r+0x22>
 80012de:	4b04      	ldr	r3, [pc, #16]	; (80012f0 <_fflush_r+0x74>)
 80012e0:	429c      	cmp	r4, r3
 80012e2:	bf08      	it	eq
 80012e4:	68ec      	ldreq	r4, [r5, #12]
 80012e6:	e7da      	b.n	800129e <_fflush_r+0x22>
 80012e8:	080015cc 	.word	0x080015cc
 80012ec:	080015ec 	.word	0x080015ec
 80012f0:	080015ac 	.word	0x080015ac

080012f4 <_lseek_r>:
 80012f4:	b538      	push	{r3, r4, r5, lr}
 80012f6:	4d07      	ldr	r5, [pc, #28]	; (8001314 <_lseek_r+0x20>)
 80012f8:	4604      	mov	r4, r0
 80012fa:	4608      	mov	r0, r1
 80012fc:	4611      	mov	r1, r2
 80012fe:	2200      	movs	r2, #0
 8001300:	602a      	str	r2, [r5, #0]
 8001302:	461a      	mov	r2, r3
 8001304:	f7ff f8d3 	bl	80004ae <_lseek>
 8001308:	1c43      	adds	r3, r0, #1
 800130a:	d102      	bne.n	8001312 <_lseek_r+0x1e>
 800130c:	682b      	ldr	r3, [r5, #0]
 800130e:	b103      	cbz	r3, 8001312 <_lseek_r+0x1e>
 8001310:	6023      	str	r3, [r4, #0]
 8001312:	bd38      	pop	{r3, r4, r5, pc}
 8001314:	20000090 	.word	0x20000090

08001318 <__swhatbuf_r>:
 8001318:	b570      	push	{r4, r5, r6, lr}
 800131a:	460e      	mov	r6, r1
 800131c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001320:	2900      	cmp	r1, #0
 8001322:	b096      	sub	sp, #88	; 0x58
 8001324:	4614      	mov	r4, r2
 8001326:	461d      	mov	r5, r3
 8001328:	da08      	bge.n	800133c <__swhatbuf_r+0x24>
 800132a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800132e:	2200      	movs	r2, #0
 8001330:	602a      	str	r2, [r5, #0]
 8001332:	061a      	lsls	r2, r3, #24
 8001334:	d410      	bmi.n	8001358 <__swhatbuf_r+0x40>
 8001336:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800133a:	e00e      	b.n	800135a <__swhatbuf_r+0x42>
 800133c:	466a      	mov	r2, sp
 800133e:	f000 f8b9 	bl	80014b4 <_fstat_r>
 8001342:	2800      	cmp	r0, #0
 8001344:	dbf1      	blt.n	800132a <__swhatbuf_r+0x12>
 8001346:	9a01      	ldr	r2, [sp, #4]
 8001348:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800134c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001350:	425a      	negs	r2, r3
 8001352:	415a      	adcs	r2, r3
 8001354:	602a      	str	r2, [r5, #0]
 8001356:	e7ee      	b.n	8001336 <__swhatbuf_r+0x1e>
 8001358:	2340      	movs	r3, #64	; 0x40
 800135a:	2000      	movs	r0, #0
 800135c:	6023      	str	r3, [r4, #0]
 800135e:	b016      	add	sp, #88	; 0x58
 8001360:	bd70      	pop	{r4, r5, r6, pc}
	...

08001364 <__smakebuf_r>:
 8001364:	898b      	ldrh	r3, [r1, #12]
 8001366:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001368:	079d      	lsls	r5, r3, #30
 800136a:	4606      	mov	r6, r0
 800136c:	460c      	mov	r4, r1
 800136e:	d507      	bpl.n	8001380 <__smakebuf_r+0x1c>
 8001370:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001374:	6023      	str	r3, [r4, #0]
 8001376:	6123      	str	r3, [r4, #16]
 8001378:	2301      	movs	r3, #1
 800137a:	6163      	str	r3, [r4, #20]
 800137c:	b002      	add	sp, #8
 800137e:	bd70      	pop	{r4, r5, r6, pc}
 8001380:	ab01      	add	r3, sp, #4
 8001382:	466a      	mov	r2, sp
 8001384:	f7ff ffc8 	bl	8001318 <__swhatbuf_r>
 8001388:	9900      	ldr	r1, [sp, #0]
 800138a:	4605      	mov	r5, r0
 800138c:	4630      	mov	r0, r6
 800138e:	f7ff fa5d 	bl	800084c <_malloc_r>
 8001392:	b948      	cbnz	r0, 80013a8 <__smakebuf_r+0x44>
 8001394:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001398:	059a      	lsls	r2, r3, #22
 800139a:	d4ef      	bmi.n	800137c <__smakebuf_r+0x18>
 800139c:	f023 0303 	bic.w	r3, r3, #3
 80013a0:	f043 0302 	orr.w	r3, r3, #2
 80013a4:	81a3      	strh	r3, [r4, #12]
 80013a6:	e7e3      	b.n	8001370 <__smakebuf_r+0xc>
 80013a8:	4b0d      	ldr	r3, [pc, #52]	; (80013e0 <__smakebuf_r+0x7c>)
 80013aa:	62b3      	str	r3, [r6, #40]	; 0x28
 80013ac:	89a3      	ldrh	r3, [r4, #12]
 80013ae:	6020      	str	r0, [r4, #0]
 80013b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013b4:	81a3      	strh	r3, [r4, #12]
 80013b6:	9b00      	ldr	r3, [sp, #0]
 80013b8:	6163      	str	r3, [r4, #20]
 80013ba:	9b01      	ldr	r3, [sp, #4]
 80013bc:	6120      	str	r0, [r4, #16]
 80013be:	b15b      	cbz	r3, 80013d8 <__smakebuf_r+0x74>
 80013c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013c4:	4630      	mov	r0, r6
 80013c6:	f000 f887 	bl	80014d8 <_isatty_r>
 80013ca:	b128      	cbz	r0, 80013d8 <__smakebuf_r+0x74>
 80013cc:	89a3      	ldrh	r3, [r4, #12]
 80013ce:	f023 0303 	bic.w	r3, r3, #3
 80013d2:	f043 0301 	orr.w	r3, r3, #1
 80013d6:	81a3      	strh	r3, [r4, #12]
 80013d8:	89a0      	ldrh	r0, [r4, #12]
 80013da:	4305      	orrs	r5, r0
 80013dc:	81a5      	strh	r5, [r4, #12]
 80013de:	e7cd      	b.n	800137c <__smakebuf_r+0x18>
 80013e0:	08000665 	.word	0x08000665

080013e4 <__malloc_lock>:
 80013e4:	4801      	ldr	r0, [pc, #4]	; (80013ec <__malloc_lock+0x8>)
 80013e6:	f7ff ba0f 	b.w	8000808 <__retarget_lock_acquire_recursive>
 80013ea:	bf00      	nop
 80013ec:	20000084 	.word	0x20000084

080013f0 <__malloc_unlock>:
 80013f0:	4801      	ldr	r0, [pc, #4]	; (80013f8 <__malloc_unlock+0x8>)
 80013f2:	f7ff ba0a 	b.w	800080a <__retarget_lock_release_recursive>
 80013f6:	bf00      	nop
 80013f8:	20000084 	.word	0x20000084

080013fc <_free_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4605      	mov	r5, r0
 8001400:	2900      	cmp	r1, #0
 8001402:	d041      	beq.n	8001488 <_free_r+0x8c>
 8001404:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001408:	1f0c      	subs	r4, r1, #4
 800140a:	2b00      	cmp	r3, #0
 800140c:	bfb8      	it	lt
 800140e:	18e4      	addlt	r4, r4, r3
 8001410:	f7ff ffe8 	bl	80013e4 <__malloc_lock>
 8001414:	4a1d      	ldr	r2, [pc, #116]	; (800148c <_free_r+0x90>)
 8001416:	6813      	ldr	r3, [r2, #0]
 8001418:	b933      	cbnz	r3, 8001428 <_free_r+0x2c>
 800141a:	6063      	str	r3, [r4, #4]
 800141c:	6014      	str	r4, [r2, #0]
 800141e:	4628      	mov	r0, r5
 8001420:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001424:	f7ff bfe4 	b.w	80013f0 <__malloc_unlock>
 8001428:	42a3      	cmp	r3, r4
 800142a:	d908      	bls.n	800143e <_free_r+0x42>
 800142c:	6820      	ldr	r0, [r4, #0]
 800142e:	1821      	adds	r1, r4, r0
 8001430:	428b      	cmp	r3, r1
 8001432:	bf01      	itttt	eq
 8001434:	6819      	ldreq	r1, [r3, #0]
 8001436:	685b      	ldreq	r3, [r3, #4]
 8001438:	1809      	addeq	r1, r1, r0
 800143a:	6021      	streq	r1, [r4, #0]
 800143c:	e7ed      	b.n	800141a <_free_r+0x1e>
 800143e:	461a      	mov	r2, r3
 8001440:	685b      	ldr	r3, [r3, #4]
 8001442:	b10b      	cbz	r3, 8001448 <_free_r+0x4c>
 8001444:	42a3      	cmp	r3, r4
 8001446:	d9fa      	bls.n	800143e <_free_r+0x42>
 8001448:	6811      	ldr	r1, [r2, #0]
 800144a:	1850      	adds	r0, r2, r1
 800144c:	42a0      	cmp	r0, r4
 800144e:	d10b      	bne.n	8001468 <_free_r+0x6c>
 8001450:	6820      	ldr	r0, [r4, #0]
 8001452:	4401      	add	r1, r0
 8001454:	1850      	adds	r0, r2, r1
 8001456:	4283      	cmp	r3, r0
 8001458:	6011      	str	r1, [r2, #0]
 800145a:	d1e0      	bne.n	800141e <_free_r+0x22>
 800145c:	6818      	ldr	r0, [r3, #0]
 800145e:	685b      	ldr	r3, [r3, #4]
 8001460:	6053      	str	r3, [r2, #4]
 8001462:	4401      	add	r1, r0
 8001464:	6011      	str	r1, [r2, #0]
 8001466:	e7da      	b.n	800141e <_free_r+0x22>
 8001468:	d902      	bls.n	8001470 <_free_r+0x74>
 800146a:	230c      	movs	r3, #12
 800146c:	602b      	str	r3, [r5, #0]
 800146e:	e7d6      	b.n	800141e <_free_r+0x22>
 8001470:	6820      	ldr	r0, [r4, #0]
 8001472:	1821      	adds	r1, r4, r0
 8001474:	428b      	cmp	r3, r1
 8001476:	bf04      	itt	eq
 8001478:	6819      	ldreq	r1, [r3, #0]
 800147a:	685b      	ldreq	r3, [r3, #4]
 800147c:	6063      	str	r3, [r4, #4]
 800147e:	bf04      	itt	eq
 8001480:	1809      	addeq	r1, r1, r0
 8001482:	6021      	streq	r1, [r4, #0]
 8001484:	6054      	str	r4, [r2, #4]
 8001486:	e7ca      	b.n	800141e <_free_r+0x22>
 8001488:	bd38      	pop	{r3, r4, r5, pc}
 800148a:	bf00      	nop
 800148c:	20000088 	.word	0x20000088

08001490 <_read_r>:
 8001490:	b538      	push	{r3, r4, r5, lr}
 8001492:	4d07      	ldr	r5, [pc, #28]	; (80014b0 <_read_r+0x20>)
 8001494:	4604      	mov	r4, r0
 8001496:	4608      	mov	r0, r1
 8001498:	4611      	mov	r1, r2
 800149a:	2200      	movs	r2, #0
 800149c:	602a      	str	r2, [r5, #0]
 800149e:	461a      	mov	r2, r3
 80014a0:	f7fe ffa8 	bl	80003f4 <_read>
 80014a4:	1c43      	adds	r3, r0, #1
 80014a6:	d102      	bne.n	80014ae <_read_r+0x1e>
 80014a8:	682b      	ldr	r3, [r5, #0]
 80014aa:	b103      	cbz	r3, 80014ae <_read_r+0x1e>
 80014ac:	6023      	str	r3, [r4, #0]
 80014ae:	bd38      	pop	{r3, r4, r5, pc}
 80014b0:	20000090 	.word	0x20000090

080014b4 <_fstat_r>:
 80014b4:	b538      	push	{r3, r4, r5, lr}
 80014b6:	4d07      	ldr	r5, [pc, #28]	; (80014d4 <_fstat_r+0x20>)
 80014b8:	2300      	movs	r3, #0
 80014ba:	4604      	mov	r4, r0
 80014bc:	4608      	mov	r0, r1
 80014be:	4611      	mov	r1, r2
 80014c0:	602b      	str	r3, [r5, #0]
 80014c2:	f7fe ffdb 	bl	800047c <_fstat>
 80014c6:	1c43      	adds	r3, r0, #1
 80014c8:	d102      	bne.n	80014d0 <_fstat_r+0x1c>
 80014ca:	682b      	ldr	r3, [r5, #0]
 80014cc:	b103      	cbz	r3, 80014d0 <_fstat_r+0x1c>
 80014ce:	6023      	str	r3, [r4, #0]
 80014d0:	bd38      	pop	{r3, r4, r5, pc}
 80014d2:	bf00      	nop
 80014d4:	20000090 	.word	0x20000090

080014d8 <_isatty_r>:
 80014d8:	b538      	push	{r3, r4, r5, lr}
 80014da:	4d06      	ldr	r5, [pc, #24]	; (80014f4 <_isatty_r+0x1c>)
 80014dc:	2300      	movs	r3, #0
 80014de:	4604      	mov	r4, r0
 80014e0:	4608      	mov	r0, r1
 80014e2:	602b      	str	r3, [r5, #0]
 80014e4:	f7fe ffd9 	bl	800049a <_isatty>
 80014e8:	1c43      	adds	r3, r0, #1
 80014ea:	d102      	bne.n	80014f2 <_isatty_r+0x1a>
 80014ec:	682b      	ldr	r3, [r5, #0]
 80014ee:	b103      	cbz	r3, 80014f2 <_isatty_r+0x1a>
 80014f0:	6023      	str	r3, [r4, #0]
 80014f2:	bd38      	pop	{r3, r4, r5, pc}
 80014f4:	20000090 	.word	0x20000090

080014f8 <_init>:
 80014f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014fa:	bf00      	nop
 80014fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014fe:	bc08      	pop	{r3}
 8001500:	469e      	mov	lr, r3
 8001502:	4770      	bx	lr

08001504 <_fini>:
 8001504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001506:	bf00      	nop
 8001508:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800150a:	bc08      	pop	{r3}
 800150c:	469e      	mov	lr, r3
 800150e:	4770      	bx	lr
